/*
Adept MobileRobots Robotics Interface for Applications (ARIA)
Copyright (C) 2004-2005 ActivMedia Robotics LLC
Copyright (C) 2006-2010 MobileRobots Inc.
Copyright (C) 2011-2014 Adept Technology

     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

If you wish to redistribute ARIA under different terms, contact 
Adept MobileRobots for information about a commercial version of ARIA at 
robots@mobilerobots.com or 
Adept MobileRobots, 10 Columbia Drive, Amherst, NH 03031; +1-603-881-7960
*/
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mobilerobots.Aria;

class AriaJavaJNI {
  public final static native long new_ArPoseWithTimeVector__SWIG_0();
  public final static native long new_ArPoseWithTimeVector__SWIG_1(long jarg1);
  public final static native long ArPoseWithTimeVector_size(long jarg1, ArPoseWithTimeVector jarg1_);
  public final static native long ArPoseWithTimeVector_capacity(long jarg1, ArPoseWithTimeVector jarg1_);
  public final static native void ArPoseWithTimeVector_reserve(long jarg1, ArPoseWithTimeVector jarg1_, long jarg2);
  public final static native boolean ArPoseWithTimeVector_isEmpty(long jarg1, ArPoseWithTimeVector jarg1_);
  public final static native void ArPoseWithTimeVector_clear(long jarg1, ArPoseWithTimeVector jarg1_);
  public final static native void ArPoseWithTimeVector_add(long jarg1, ArPoseWithTimeVector jarg1_, long jarg2, ArPoseWithTime jarg2_);
  public final static native long ArPoseWithTimeVector_get(long jarg1, ArPoseWithTimeVector jarg1_, int jarg2);
  public final static native void ArPoseWithTimeVector_set(long jarg1, ArPoseWithTimeVector jarg1_, int jarg2, long jarg3, ArPoseWithTime jarg3_);
  public final static native void delete_ArPoseWithTimeVector(long jarg1);
  public final static native long new_ArSensorReadingVector__SWIG_0();
  public final static native long new_ArSensorReadingVector__SWIG_1(long jarg1);
  public final static native long ArSensorReadingVector_size(long jarg1, ArSensorReadingVector jarg1_);
  public final static native long ArSensorReadingVector_capacity(long jarg1, ArSensorReadingVector jarg1_);
  public final static native void ArSensorReadingVector_reserve(long jarg1, ArSensorReadingVector jarg1_, long jarg2);
  public final static native boolean ArSensorReadingVector_isEmpty(long jarg1, ArSensorReadingVector jarg1_);
  public final static native void ArSensorReadingVector_clear(long jarg1, ArSensorReadingVector jarg1_);
  public final static native void ArSensorReadingVector_add(long jarg1, ArSensorReadingVector jarg1_, long jarg2, ArSensorReading jarg2_);
  public final static native long ArSensorReadingVector_get(long jarg1, ArSensorReadingVector jarg1_, int jarg2);
  public final static native void ArSensorReadingVector_set(long jarg1, ArSensorReadingVector jarg1_, int jarg2, long jarg3, ArSensorReading jarg3_);
  public final static native void delete_ArSensorReadingVector(long jarg1);
  public final static native long new_DoubleVector__SWIG_0();
  public final static native long new_DoubleVector__SWIG_1(long jarg1);
  public final static native long DoubleVector_size(long jarg1, DoubleVector jarg1_);
  public final static native long DoubleVector_capacity(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_reserve(long jarg1, DoubleVector jarg1_, long jarg2);
  public final static native boolean DoubleVector_isEmpty(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_clear(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_add(long jarg1, DoubleVector jarg1_, double jarg2);
  public final static native double DoubleVector_get(long jarg1, DoubleVector jarg1_, int jarg2);
  public final static native void DoubleVector_set(long jarg1, DoubleVector jarg1_, int jarg2, double jarg3);
  public final static native void delete_DoubleVector(long jarg1);
  public final static native long new_ArMapObjectPtrList();
  public final static native long ArMapObjectPtrList_size(long jarg1, ArMapObjectPtrList jarg1_);
  public final static native boolean ArMapObjectPtrList_isEmpty(long jarg1, ArMapObjectPtrList jarg1_);
  public final static native void ArMapObjectPtrList_clear(long jarg1, ArMapObjectPtrList jarg1_);
  public final static native void ArMapObjectPtrList_add(long jarg1, ArMapObjectPtrList jarg1_, long jarg2, ArMapObject jarg2_);
  public final static native long ArMapObjectPtrList_get(long jarg1, ArMapObjectPtrList jarg1_, int jarg2);
  public final static native void delete_ArMapObjectPtrList(long jarg1);
  public final static native long new_ArFunctorPtrList();
  public final static native long ArFunctorPtrList_size(long jarg1, ArFunctorPtrList jarg1_);
  public final static native boolean ArFunctorPtrList_isEmpty(long jarg1, ArFunctorPtrList jarg1_);
  public final static native void ArFunctorPtrList_clear(long jarg1, ArFunctorPtrList jarg1_);
  public final static native void ArFunctorPtrList_add(long jarg1, ArFunctorPtrList jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native long ArFunctorPtrList_get(long jarg1, ArFunctorPtrList jarg1_, int jarg2);
  public final static native void delete_ArFunctorPtrList(long jarg1);
  public final static native long new_ArPoseList();
  public final static native long ArPoseList_size(long jarg1, ArPoseList jarg1_);
  public final static native boolean ArPoseList_isEmpty(long jarg1, ArPoseList jarg1_);
  public final static native void ArPoseList_clear(long jarg1, ArPoseList jarg1_);
  public final static native void ArPoseList_add(long jarg1, ArPoseList jarg1_, long jarg2, ArPose jarg2_);
  public final static native long ArPoseList_get(long jarg1, ArPoseList jarg1_, int jarg2);
  public final static native void delete_ArPoseList(long jarg1);
  public final static native long new_ArPosePtrList();
  public final static native long ArPosePtrList_size(long jarg1, ArPosePtrList jarg1_);
  public final static native boolean ArPosePtrList_isEmpty(long jarg1, ArPosePtrList jarg1_);
  public final static native void ArPosePtrList_clear(long jarg1, ArPosePtrList jarg1_);
  public final static native void ArPosePtrList_add(long jarg1, ArPosePtrList jarg1_, long jarg2, ArPose jarg2_);
  public final static native long ArPosePtrList_get(long jarg1, ArPosePtrList jarg1_, int jarg2);
  public final static native void delete_ArPosePtrList(long jarg1);
  public final static native long new_ArPoseWithTimeList();
  public final static native long ArPoseWithTimeList_size(long jarg1, ArPoseWithTimeList jarg1_);
  public final static native boolean ArPoseWithTimeList_isEmpty(long jarg1, ArPoseWithTimeList jarg1_);
  public final static native void ArPoseWithTimeList_clear(long jarg1, ArPoseWithTimeList jarg1_);
  public final static native void ArPoseWithTimeList_add(long jarg1, ArPoseWithTimeList jarg1_, long jarg2, ArPoseWithTime jarg2_);
  public final static native long ArPoseWithTimeList_get(long jarg1, ArPoseWithTimeList jarg1_, int jarg2);
  public final static native void delete_ArPoseWithTimeList(long jarg1);
  public final static native long new_ArPoseWithTimePtrList();
  public final static native long ArPoseWithTimePtrList_size(long jarg1, ArPoseWithTimePtrList jarg1_);
  public final static native boolean ArPoseWithTimePtrList_isEmpty(long jarg1, ArPoseWithTimePtrList jarg1_);
  public final static native void ArPoseWithTimePtrList_clear(long jarg1, ArPoseWithTimePtrList jarg1_);
  public final static native void ArPoseWithTimePtrList_add(long jarg1, ArPoseWithTimePtrList jarg1_, long jarg2, ArPoseWithTime jarg2_);
  public final static native long ArPoseWithTimePtrList_get(long jarg1, ArPoseWithTimePtrList jarg1_, int jarg2);
  public final static native void delete_ArPoseWithTimePtrList(long jarg1);
  public final static native long new_ArRangeDevicePtrList();
  public final static native long ArRangeDevicePtrList_size(long jarg1, ArRangeDevicePtrList jarg1_);
  public final static native boolean ArRangeDevicePtrList_isEmpty(long jarg1, ArRangeDevicePtrList jarg1_);
  public final static native void ArRangeDevicePtrList_clear(long jarg1, ArRangeDevicePtrList jarg1_);
  public final static native void ArRangeDevicePtrList_add(long jarg1, ArRangeDevicePtrList jarg1_, long jarg2, ArRangeDevice jarg2_);
  public final static native long ArRangeDevicePtrList_get(long jarg1, ArRangeDevicePtrList jarg1_, int jarg2);
  public final static native void delete_ArRangeDevicePtrList(long jarg1);
  public final static native long new_ArArgumentBuilderPtrList();
  public final static native long ArArgumentBuilderPtrList_size(long jarg1, ArArgumentBuilderPtrList jarg1_);
  public final static native boolean ArArgumentBuilderPtrList_isEmpty(long jarg1, ArArgumentBuilderPtrList jarg1_);
  public final static native void ArArgumentBuilderPtrList_clear(long jarg1, ArArgumentBuilderPtrList jarg1_);
  public final static native void ArArgumentBuilderPtrList_add(long jarg1, ArArgumentBuilderPtrList jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native long ArArgumentBuilderPtrList_get(long jarg1, ArArgumentBuilderPtrList jarg1_, int jarg2);
  public final static native void delete_ArArgumentBuilderPtrList(long jarg1);
  public final static native long new_ArLineSegmentList();
  public final static native long ArLineSegmentList_size(long jarg1, ArLineSegmentList jarg1_);
  public final static native boolean ArLineSegmentList_isEmpty(long jarg1, ArLineSegmentList jarg1_);
  public final static native void ArLineSegmentList_clear(long jarg1, ArLineSegmentList jarg1_);
  public final static native void ArLineSegmentList_add(long jarg1, ArLineSegmentList jarg1_, long jarg2, ArLineSegment jarg2_);
  public final static native long ArLineSegmentList_get(long jarg1, ArLineSegmentList jarg1_, int jarg2);
  public final static native void delete_ArLineSegmentList(long jarg1);
  public final static native long new_ArLineSegmentPtrList();
  public final static native long ArLineSegmentPtrList_size(long jarg1, ArLineSegmentPtrList jarg1_);
  public final static native boolean ArLineSegmentPtrList_isEmpty(long jarg1, ArLineSegmentPtrList jarg1_);
  public final static native void ArLineSegmentPtrList_clear(long jarg1, ArLineSegmentPtrList jarg1_);
  public final static native void ArLineSegmentPtrList_add(long jarg1, ArLineSegmentPtrList jarg1_, long jarg2, ArLineSegment jarg2_);
  public final static native long ArLineSegmentPtrList_get(long jarg1, ArLineSegmentPtrList jarg1_, int jarg2);
  public final static native void delete_ArLineSegmentPtrList(long jarg1);
  public final static native long new_IntArPoseMap__SWIG_0();
  public final static native long new_IntArPoseMap__SWIG_1(long jarg1, IntArPoseMap jarg1_);
  public final static native long IntArPoseMap_size(long jarg1, IntArPoseMap jarg1_);
  public final static native boolean IntArPoseMap_empty(long jarg1, IntArPoseMap jarg1_);
  public final static native void IntArPoseMap_clear(long jarg1, IntArPoseMap jarg1_);
  public final static native long IntArPoseMap_get(long jarg1, IntArPoseMap jarg1_, int jarg2);
  public final static native void IntArPoseMap_set(long jarg1, IntArPoseMap jarg1_, int jarg2, long jarg3, ArPose jarg3_);
  public final static native void IntArPoseMap_del(long jarg1, IntArPoseMap jarg1_, int jarg2);
  public final static native boolean IntArPoseMap_has_key(long jarg1, IntArPoseMap jarg1_, int jarg2);
  public final static native void delete_IntArPoseMap(long jarg1);
  public final static native int ArListPos_FIRST_get();
  public final static native int ArListPos_LAST_get();
  public final static native long new_ArListPos();
  public final static native void delete_ArListPos(long jarg1);
  public final static native long new_ArTypes();
  public final static native void delete_ArTypes(long jarg1);
  public final static native int _GNU_SOURCE_get();
  public final static native double M_PI_get();
  public final static native int ArUtil_BIT0_get();
  public final static native int ArUtil_BIT1_get();
  public final static native int ArUtil_BIT2_get();
  public final static native int ArUtil_BIT3_get();
  public final static native int ArUtil_BIT4_get();
  public final static native int ArUtil_BIT5_get();
  public final static native int ArUtil_BIT6_get();
  public final static native int ArUtil_BIT7_get();
  public final static native int ArUtil_BIT8_get();
  public final static native int ArUtil_BIT9_get();
  public final static native int ArUtil_BIT10_get();
  public final static native int ArUtil_BIT11_get();
  public final static native int ArUtil_BIT12_get();
  public final static native int ArUtil_BIT13_get();
  public final static native int ArUtil_BIT14_get();
  public final static native int ArUtil_BIT15_get();
  public final static native void ArUtil_sleep(long jarg1);
  public final static native long ArUtil_getTime();
  public final static native int ArUtil_findMin__SWIG_0(int jarg1, int jarg2);
  public final static native int ArUtil_findMax__SWIG_0(int jarg1, int jarg2);
  public final static native double ArUtil_findMin__SWIG_1(double jarg1, double jarg2);
  public final static native double ArUtil_findMax__SWIG_1(double jarg1, double jarg2);
  public final static native int ArUtil_sizeFile__SWIG_0(String jarg1);
  public final static native boolean ArUtil_findFile(String jarg1);
  public final static native void ArUtil_appendSlash__SWIG_0(String jarg1, long jarg2);
  public final static native void ArUtil_appendSlash__SWIG_1(long jarg1);
  public final static native void ArUtil_fixSlashes__SWIG_0(String jarg1, long jarg2);
  public final static native void ArUtil_fixSlashes__SWIG_1(long jarg1);
  public final static native void ArUtil_fixSlashesForward(String jarg1, long jarg2);
  public final static native void ArUtil_fixSlashesBackward(String jarg1, long jarg2);
  public final static native char ArUtil_getSlash();
  public final static native void ArUtil_addDirectories(String jarg1, long jarg2, String jarg3, String jarg4);
  public final static native int ArUtil_strcmp__SWIG_0(String jarg1, String jarg2);
  public final static native int ArUtil_strcasecmp__SWIG_0(String jarg1, String jarg2);
  public final static native boolean ArUtil_strSuffixCmp(String jarg1, String jarg2);
  public final static native boolean ArUtil_strSuffixCaseCmp(String jarg1, String jarg2);
  public final static native int ArUtil_strcasequotecmp(String jarg1, String jarg2);
  public final static native void ArUtil_escapeSpaces(String jarg1, String jarg2, long jarg3);
  public final static native boolean ArUtil_stripQuotes__SWIG_0(String jarg1, String jarg2, long jarg3);
  public final static native boolean ArUtil_stripQuotes__SWIG_1(long jarg1);
  public final static native boolean ArUtil_fixBadCharacters__SWIG_0(long jarg1, boolean jarg2, boolean jarg3);
  public final static native boolean ArUtil_fixBadCharacters__SWIG_1(long jarg1, boolean jarg2);
  public final static native void ArUtil_lower(String jarg1, String jarg2, long jarg3);
  public final static native boolean ArUtil_isOnlyAlphaNumeric(String jarg1);
  public final static native boolean ArUtil_isOnlyNumeric(String jarg1);
  public final static native boolean ArUtil_isStrEmpty(String jarg1);
  public final static native boolean ArUtil_isStrInList__SWIG_0(String jarg1, long jarg2, boolean jarg3);
  public final static native boolean ArUtil_isStrInList__SWIG_1(String jarg1, long jarg2);
  public final static native double ArUtil_atof(String jarg1);
  public final static native String ArUtil_convertBool(int jarg1);
  public final static native void ArUtil_writeToFile(String jarg1, long jarg2);
  public final static native boolean ArUtil_getStringFromFile(String jarg1, String jarg2, long jarg3);
  public final static native boolean ArUtil_getStringFromRegistry(int jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native boolean ArUtil_findFirstStringInRegistry(String jarg1, String jarg2, String jarg3, int jarg4);
  public final static native void ArUtil_COM1_set(String jarg1);
  public final static native String ArUtil_COM1_get();
  public final static native void ArUtil_COM2_set(String jarg1);
  public final static native String ArUtil_COM2_get();
  public final static native void ArUtil_COM3_set(String jarg1);
  public final static native String ArUtil_COM3_get();
  public final static native void ArUtil_COM4_set(String jarg1);
  public final static native String ArUtil_COM4_get();
  public final static native void ArUtil_COM5_set(String jarg1);
  public final static native String ArUtil_COM5_get();
  public final static native void ArUtil_COM6_set(String jarg1);
  public final static native String ArUtil_COM6_get();
  public final static native void ArUtil_COM7_set(String jarg1);
  public final static native String ArUtil_COM7_get();
  public final static native void ArUtil_COM8_set(String jarg1);
  public final static native String ArUtil_COM8_get();
  public final static native void ArUtil_COM9_set(String jarg1);
  public final static native String ArUtil_COM9_get();
  public final static native void ArUtil_COM10_set(String jarg1);
  public final static native String ArUtil_COM10_get();
  public final static native void ArUtil_COM11_set(String jarg1);
  public final static native String ArUtil_COM11_get();
  public final static native void ArUtil_COM12_set(String jarg1);
  public final static native String ArUtil_COM12_get();
  public final static native void ArUtil_COM13_set(String jarg1);
  public final static native String ArUtil_COM13_get();
  public final static native void ArUtil_COM14_set(String jarg1);
  public final static native String ArUtil_COM14_get();
  public final static native void ArUtil_COM15_set(String jarg1);
  public final static native String ArUtil_COM15_get();
  public final static native void ArUtil_COM16_set(String jarg1);
  public final static native String ArUtil_COM16_get();
  public final static native void ArUtil_TRUESTRING_set(String jarg1);
  public final static native String ArUtil_TRUESTRING_get();
  public final static native void ArUtil_FALSESTRING_set(String jarg1);
  public final static native String ArUtil_FALSESTRING_get();
  public final static native void ArUtil_putCurrentYearInString(String jarg1, long jarg2);
  public final static native void ArUtil_putCurrentMonthInString(String jarg1, long jarg2);
  public final static native void ArUtil_putCurrentDayInString(String jarg1, long jarg2);
  public final static native void ArUtil_putCurrentHourInString(String jarg1, long jarg2);
  public final static native void ArUtil_putCurrentMinuteInString(String jarg1, long jarg2);
  public final static native void ArUtil_putCurrentSecondInString(String jarg1, long jarg2);
  public final static native long ArUtil_parseTime__SWIG_0(String jarg1, long jarg2, boolean jarg3);
  public final static native long ArUtil_parseTime__SWIG_1(String jarg1, long jarg2);
  public final static native long ArUtil_parseTime__SWIG_2(String jarg1);
  public final static native boolean ArUtil_localtime__SWIG_0(long jarg1, long jarg2);
  public final static native boolean ArUtil_localtime__SWIG_1(long jarg1);
  public final static native boolean ArUtil_matchCase(String jarg1, String jarg2, String jarg3, long jarg4);
  public final static native boolean ArUtil_getDirectory(String jarg1, String jarg2, long jarg3);
  public final static native boolean ArUtil_getFileName(String jarg1, String jarg2, long jarg3);
  public final static native boolean ArUtil_changeFileTimestamp(String jarg1, long jarg2);
  public final static native long ArUtil_fopen__SWIG_0(String jarg1, String jarg2, boolean jarg3);
  public final static native long ArUtil_fopen__SWIG_1(String jarg1, String jarg2);
  public final static native int ArUtil_open__SWIG_0(String jarg1, int jarg2, boolean jarg3);
  public final static native int ArUtil_open__SWIG_1(String jarg1, int jarg2);
  public final static native int ArUtil_open__SWIG_2(String jarg1, int jarg2, long jarg3, boolean jarg4);
  public final static native int ArUtil_open__SWIG_3(String jarg1, int jarg2, long jarg3);
  public final static native int ArUtil_creat__SWIG_0(String jarg1, long jarg2, boolean jarg3);
  public final static native int ArUtil_creat__SWIG_1(String jarg1, long jarg2);
  public final static native long ArUtil_popen__SWIG_0(String jarg1, String jarg2, boolean jarg3);
  public final static native long ArUtil_popen__SWIG_1(String jarg1, String jarg2);
  public final static native void ArUtil_setFileCloseOnExec__SWIG_0(int jarg1, boolean jarg2);
  public final static native void ArUtil_setFileCloseOnExec__SWIG_1(int jarg1);
  public final static native void ArUtil_setFileCloseOnExec__SWIG_2(long jarg1, boolean jarg2);
  public final static native void ArUtil_setFileCloseOnExec__SWIG_3(long jarg1);
  public final static native boolean ArUtil_floatIsNormal(double jarg1);
  public final static native double ArUtil_secToMSec(double jarg1);
  public final static native double ArUtil_mSecToSec(double jarg1);
  public final static native double ArUtil_metersToFeet(double jarg1);
  public final static native double ArUtil_feetToMeters(double jarg1);
  public final static native int ArUtil_atoi__SWIG_0(String jarg1, long jarg2, boolean jarg3);
  public final static native int ArUtil_atoi__SWIG_1(String jarg1, long jarg2);
  public final static native int ArUtil_atoi__SWIG_2(String jarg1);
  public final static native long new_ArUtil();
  public final static native void delete_ArUtil(long jarg1);
  public final static native double ArMath_epsilon();
  public final static native double ArMath_addAngle(double jarg1, double jarg2);
  public final static native double ArMath_subAngle(double jarg1, double jarg2);
  public final static native double ArMath_fixAngle(double jarg1);
  public final static native double ArMath_degToRad(double jarg1);
  public final static native double ArMath_radToDeg(double jarg1);
  public final static native double ArMath_cos(double jarg1);
  public final static native double ArMath_sin(double jarg1);
  public final static native double ArMath_tan(double jarg1);
  public final static native double ArMath_atan2(double jarg1, double jarg2);
  public final static native boolean ArMath_angleBetween(double jarg1, double jarg2, double jarg3);
  public final static native double ArMath_fabs(double jarg1);
  public final static native int ArMath_roundInt(double jarg1);
  public final static native short ArMath_roundShort(double jarg1);
  public final static native void ArMath_pointRotate(double[] jarg1, double[] jarg2, double jarg3);
  public final static native int ArMath_random();
  public final static native int ArMath_getRandMax();
  public final static native int ArMath_randomInRange(int jarg1, int jarg2);
  public final static native double ArMath_distanceBetween(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native double ArMath_squaredDistanceBetween(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native double ArMath_log2(double jarg1);
  public final static native boolean ArMath_isNan__SWIG_0(double jarg1);
  public final static native boolean ArMath_isNan__SWIG_1(float jarg1);
  public final static native boolean ArMath_isFinite__SWIG_0(float jarg1);
  public final static native boolean ArMath_isFinite__SWIG_1(double jarg1);
  public final static native boolean ArMath_compareFloats__SWIG_0(double jarg1, double jarg2, double jarg3);
  public final static native boolean ArMath_compareFloats__SWIG_1(double jarg1, double jarg2);
  public final static native long new_ArMath();
  public final static native void delete_ArMath(long jarg1);
  public final static native long new_ArPose__SWIG_0(double jarg1, double jarg2, double jarg3);
  public final static native long new_ArPose__SWIG_1(double jarg1, double jarg2);
  public final static native long new_ArPose__SWIG_2(double jarg1);
  public final static native long new_ArPose__SWIG_3();
  public final static native long new_ArPose__SWIG_4(long jarg1, ArPose jarg1_);
  public final static native void delete_ArPose(long jarg1);
  public final static native void ArPose_setPose__SWIG_0(long jarg1, ArPose jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArPose_setPose__SWIG_1(long jarg1, ArPose jarg1_, double jarg2, double jarg3);
  public final static native void ArPose_setPose__SWIG_2(long jarg1, ArPose jarg1_, long jarg2, ArPose jarg2_);
  public final static native void ArPose_setX(long jarg1, ArPose jarg1_, double jarg2);
  public final static native void ArPose_setY(long jarg1, ArPose jarg1_, double jarg2);
  public final static native void ArPose_setTh(long jarg1, ArPose jarg1_, double jarg2);
  public final static native void ArPose_setThRad(long jarg1, ArPose jarg1_, double jarg2);
  public final static native double ArPose_getX(long jarg1, ArPose jarg1_);
  public final static native double ArPose_getY(long jarg1, ArPose jarg1_);
  public final static native double ArPose_getTh(long jarg1, ArPose jarg1_);
  public final static native double ArPose_getThRad(long jarg1, ArPose jarg1_);
  public final static native void ArPose_getPose__SWIG_0(long jarg1, ArPose jarg1_, double[] jarg2, double[] jarg3, double[] jarg4);
  public final static native void ArPose_getPose__SWIG_1(long jarg1, ArPose jarg1_, double[] jarg2, double[] jarg3);
  public final static native double ArPose_findDistanceTo(long jarg1, ArPose jarg1_, long jarg2, ArPose jarg2_);
  public final static native double ArPose_squaredFindDistanceTo(long jarg1, ArPose jarg1_, long jarg2, ArPose jarg2_);
  public final static native double ArPose_findAngleTo(long jarg1, ArPose jarg1_, long jarg2, ArPose jarg2_);
  public final static native void ArPose_log(long jarg1, ArPose jarg1_);
  public final static native double ArPose_distanceBetween(long jarg1, ArPose jarg1_, long jarg2, ArPose jarg2_);
  public final static native long new_ArTime__SWIG_0();
  public final static native long new_ArTime__SWIG_1(long jarg1, ArTime jarg1_);
  public final static native void delete_ArTime(long jarg1);
  public final static native int ArTime_mSecSince__SWIG_0(long jarg1, ArTime jarg1_, long jarg2, ArTime jarg2_);
  public final static native long ArTime_mSecSinceLL__SWIG_0(long jarg1, ArTime jarg1_, long jarg2, ArTime jarg2_);
  public final static native int ArTime_secSince__SWIG_0(long jarg1, ArTime jarg1_, long jarg2, ArTime jarg2_);
  public final static native long ArTime_secSinceLL__SWIG_0(long jarg1, ArTime jarg1_, long jarg2, ArTime jarg2_);
  public final static native int ArTime_mSecTo(long jarg1, ArTime jarg1_);
  public final static native long ArTime_mSecToLL(long jarg1, ArTime jarg1_);
  public final static native int ArTime_secTo(long jarg1, ArTime jarg1_);
  public final static native long ArTime_secToLL(long jarg1, ArTime jarg1_);
  public final static native int ArTime_mSecSince__SWIG_1(long jarg1, ArTime jarg1_);
  public final static native long ArTime_mSecSinceLL__SWIG_1(long jarg1, ArTime jarg1_);
  public final static native int ArTime_secSince__SWIG_1(long jarg1, ArTime jarg1_);
  public final static native long ArTime_secSinceLL__SWIG_1(long jarg1, ArTime jarg1_);
  public final static native boolean ArTime_isBefore(long jarg1, ArTime jarg1_, long jarg2, ArTime jarg2_);
  public final static native boolean ArTime_isAt(long jarg1, ArTime jarg1_, long jarg2, ArTime jarg2_);
  public final static native boolean ArTime_isAfter(long jarg1, ArTime jarg1_, long jarg2, ArTime jarg2_);
  public final static native void ArTime_setToNow(long jarg1, ArTime jarg1_);
  public final static native boolean ArTime_addMSec(long jarg1, ArTime jarg1_, int jarg2);
  public final static native boolean ArTime_addMSecLL(long jarg1, ArTime jarg1_, long jarg2);
  public final static native void ArTime_setSec(long jarg1, ArTime jarg1_, long jarg2);
  public final static native void ArTime_setMSec(long jarg1, ArTime jarg1_, long jarg2);
  public final static native long ArTime_getSec(long jarg1, ArTime jarg1_);
  public final static native long ArTime_getMSec(long jarg1, ArTime jarg1_);
  public final static native void ArTime_setSecLL(long jarg1, ArTime jarg1_, java.math.BigInteger jarg2);
  public final static native void ArTime_setMSecLL(long jarg1, ArTime jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger ArTime_getSecLL(long jarg1, ArTime jarg1_);
  public final static native java.math.BigInteger ArTime_getMSecLL(long jarg1, ArTime jarg1_);
  public final static native void ArTime_log__SWIG_0(long jarg1, ArTime jarg1_, String jarg2);
  public final static native void ArTime_log__SWIG_1(long jarg1, ArTime jarg1_);
  public final static native boolean ArTime_usingMonotonicClock();
  public final static native long new_ArPoseWithTime__SWIG_0(double jarg1, double jarg2, double jarg3, long jarg4, ArTime jarg4_);
  public final static native long new_ArPoseWithTime__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long new_ArPoseWithTime__SWIG_2(double jarg1, double jarg2);
  public final static native long new_ArPoseWithTime__SWIG_3(double jarg1);
  public final static native long new_ArPoseWithTime__SWIG_4();
  public final static native long new_ArPoseWithTime__SWIG_5(long jarg1, ArPose jarg1_);
  public final static native void delete_ArPoseWithTime(long jarg1);
  public final static native void ArPoseWithTime_setTime(long jarg1, ArPoseWithTime jarg1_, long jarg2, ArTime jarg2_);
  public final static native void ArPoseWithTime_setTimeToNow(long jarg1, ArPoseWithTime jarg1_);
  public final static native long ArPoseWithTime_getTime(long jarg1, ArPoseWithTime jarg1_);
  public final static native long new_ArSectors__SWIG_0(int jarg1);
  public final static native long new_ArSectors__SWIG_1();
  public final static native void delete_ArSectors(long jarg1);
  public final static native void ArSectors_clear(long jarg1, ArSectors jarg1_);
  public final static native void ArSectors_update(long jarg1, ArSectors jarg1_, double jarg2);
  public final static native boolean ArSectors_didAll(long jarg1, ArSectors jarg1_);
  public final static native long new_ArLine__SWIG_0();
  public final static native long new_ArLine__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long new_ArLine__SWIG_2(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native void delete_ArLine(long jarg1);
  public final static native void ArLine_newParameters(long jarg1, ArLine jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArLine_newParametersFromEndpoints(long jarg1, ArLine jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native double ArLine_getA(long jarg1, ArLine jarg1_);
  public final static native double ArLine_getB(long jarg1, ArLine jarg1_);
  public final static native double ArLine_getC(long jarg1, ArLine jarg1_);
  public final static native boolean ArLine_intersects(long jarg1, ArLine jarg1_, long jarg2, ArLine jarg2_, long jarg3, ArPose jarg3_);
  public final static native void ArLine_makeLinePerp(long jarg1, ArLine jarg1_, long jarg2, ArPose jarg2_, long jarg3, ArLine jarg3_);
  public final static native double ArLine_getPerpDist(long jarg1, ArLine jarg1_, long jarg2, ArPose jarg2_);
  public final static native double ArLine_getPerpSquaredDist(long jarg1, ArLine jarg1_, long jarg2, ArPose jarg2_);
  public final static native boolean ArLine_getPerpPoint(long jarg1, ArLine jarg1_, long jarg2, ArPose jarg2_, long jarg3, ArPose jarg3_);
  public final static native long new_ArLineSegment(long jarg1, ArPose jarg1_, long jarg2, ArPose jarg2_);
  public final static native void delete_ArLineSegment(long jarg1);
  public final static native void ArLineSegment_newEndPoints__SWIG_0(long jarg1, ArLineSegment jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void ArLineSegment_newEndPoints__SWIG_1(long jarg1, ArLineSegment jarg1_, long jarg2, ArPose jarg2_, long jarg3, ArPose jarg3_);
  public final static native long ArLineSegment_getEndPoint1(long jarg1, ArLineSegment jarg1_);
  public final static native long ArLineSegment_getEndPoint2(long jarg1, ArLineSegment jarg1_);
  public final static native boolean ArLineSegment_intersects__SWIG_0(long jarg1, ArLineSegment jarg1_, long jarg2, ArLine jarg2_, long jarg3, ArPose jarg3_);
  public final static native boolean ArLineSegment_intersects__SWIG_1(long jarg1, ArLineSegment jarg1_, long jarg2, ArLineSegment jarg2_, long jarg3, ArPose jarg3_);
  public final static native boolean ArLineSegment_getPerpPoint(long jarg1, ArLineSegment jarg1_, long jarg2, ArPose jarg2_, long jarg3, ArPose jarg3_);
  public final static native double ArLineSegment_getPerpDist(long jarg1, ArLineSegment jarg1_, long jarg2, ArPose jarg2_);
  public final static native double ArLineSegment_getPerpSquaredDist(long jarg1, ArLineSegment jarg1_, long jarg2, ArPose jarg2_);
  public final static native double ArLineSegment_getDistToLine(long jarg1, ArLineSegment jarg1_, long jarg2, ArPose jarg2_);
  public final static native double ArLineSegment_getLengthOf(long jarg1, ArLineSegment jarg1_);
  public final static native long ArLineSegment_getMidPoint(long jarg1, ArLineSegment jarg1_);
  public final static native double ArLineSegment_getX1(long jarg1, ArLineSegment jarg1_);
  public final static native double ArLineSegment_getY1(long jarg1, ArLineSegment jarg1_);
  public final static native double ArLineSegment_getX2(long jarg1, ArLineSegment jarg1_);
  public final static native double ArLineSegment_getY2(long jarg1, ArLineSegment jarg1_);
  public final static native double ArLineSegment_getA(long jarg1, ArLineSegment jarg1_);
  public final static native double ArLineSegment_getB(long jarg1, ArLineSegment jarg1_);
  public final static native double ArLineSegment_getC(long jarg1, ArLineSegment jarg1_);
  public final static native boolean ArLineSegment_linePointIsInSegment(long jarg1, ArLineSegment jarg1_, long jarg2, ArPose jarg2_);
  public final static native long ArLineSegment_getLine(long jarg1, ArLineSegment jarg1_);
  public final static native long new_ArRunningAverage(long jarg1);
  public final static native void delete_ArRunningAverage(long jarg1);
  public final static native double ArRunningAverage_getAverage(long jarg1, ArRunningAverage jarg1_);
  public final static native void ArRunningAverage_add(long jarg1, ArRunningAverage jarg1_, double jarg2);
  public final static native void ArRunningAverage_clear(long jarg1, ArRunningAverage jarg1_);
  public final static native long ArRunningAverage_getNumToAverage(long jarg1, ArRunningAverage jarg1_);
  public final static native void ArRunningAverage_setNumToAverage(long jarg1, ArRunningAverage jarg1_, long jarg2);
  public final static native void ArRunningAverage_setUseRootMeanSquare(long jarg1, ArRunningAverage jarg1_, boolean jarg2);
  public final static native boolean ArRunningAverage_getUseRootMeanSquare(long jarg1, ArRunningAverage jarg1_);
  public final static native long ArRunningAverage_getCurrentNumAveraged(long jarg1, ArRunningAverage jarg1_);
  public final static native long new_ArRootMeanSquareCalculator();
  public final static native void delete_ArRootMeanSquareCalculator(long jarg1);
  public final static native double ArRootMeanSquareCalculator_getRootMeanSquare(long jarg1, ArRootMeanSquareCalculator jarg1_);
  public final static native void ArRootMeanSquareCalculator_add(long jarg1, ArRootMeanSquareCalculator jarg1_, int jarg2);
  public final static native void ArRootMeanSquareCalculator_clear(long jarg1, ArRootMeanSquareCalculator jarg1_);
  public final static native void ArRootMeanSquareCalculator_setName(long jarg1, ArRootMeanSquareCalculator jarg1_, String jarg2);
  public final static native String ArRootMeanSquareCalculator_getName(long jarg1, ArRootMeanSquareCalculator jarg1_);
  public final static native long ArRootMeanSquareCalculator_getCurrentNumAveraged(long jarg1, ArRootMeanSquareCalculator jarg1_);
  public final static native long new_ArStrCaseCmpOp();
  public final static native void delete_ArStrCaseCmpOp(long jarg1);
  public final static native long new_ArPoseCmpOp();
  public final static native void delete_ArPoseCmpOp(long jarg1);
  public final static native long new_ArLineSegmentCmpOp();
  public final static native void delete_ArLineSegmentCmpOp(long jarg1);
  public final static native int ArPriority_BASIC_get();
  public final static native int ArPriority_FIRST_PRIORITY_get();
  public final static native int ArPriority_INTERMEDIATE_get();
  public final static native int ArPriority_TRIVIAL_get();
  public final static native int ArPriority_ADVANCED_get();
  public final static native int ArPriority_LAST_PRIORITY_get();
  public final static native int ArPriority_PRIORITY_COUNT_get();
  public final static native String ArPriority_getPriorityName(int jarg1);
  public final static native int ArPriority_getPriorityFromName__SWIG_0(String jarg1, long jarg2);
  public final static native int ArPriority_getPriorityFromName__SWIG_1(String jarg1);
  public final static native long new_ArPriority();
  public final static native void delete_ArPriority(long jarg1);
  public final static native long new_ArStringInfoHolder(String jarg1, int jarg2, long jarg3);
  public final static native void delete_ArStringInfoHolder(long jarg1);
  public final static native String ArStringInfoHolder_getName(long jarg1, ArStringInfoHolder jarg1_);
  public final static native int ArStringInfoHolder_getMaxLength(long jarg1, ArStringInfoHolder jarg1_);
  public final static native long ArStringInfoHolder_getFunctor(long jarg1, ArStringInfoHolder jarg1_);
  public final static native void ArStringInfoHolderFunctions_intWrapper(String jarg1, int jarg2, long jarg3, ArRetFunctor_Int jarg3_, String jarg4);
  public final static native void ArStringInfoHolderFunctions_doubleWrapper(String jarg1, int jarg2, long jarg3, ArRetFunctor_Double jarg3_, String jarg4);
  public final static native void ArStringInfoHolderFunctions_boolWrapper(String jarg1, int jarg2, long jarg3, ArRetFunctor_Bool jarg3_, String jarg4);
  public final static native void ArStringInfoHolderFunctions_stringWrapper(String jarg1, int jarg2, long jarg3, String jarg4);
  public final static native void ArStringInfoHolderFunctions_unsignedLongWrapper(String jarg1, int jarg2, long jarg3, String jarg4);
  public final static native void ArStringInfoHolderFunctions_longWrapper(String jarg1, int jarg2, long jarg3, String jarg4);
  public final static native long new_ArStringInfoHolderFunctions();
  public final static native void delete_ArStringInfoHolderFunctions(long jarg1);
  public final static native long new_ArCallbackList__SWIG_0(String jarg1, int jarg2, boolean jarg3);
  public final static native long new_ArCallbackList__SWIG_1(String jarg1, int jarg2);
  public final static native long new_ArCallbackList__SWIG_2(String jarg1);
  public final static native long new_ArCallbackList__SWIG_3();
  public final static native void delete_ArCallbackList(long jarg1);
  public final static native void ArCallbackList_invoke(long jarg1, ArCallbackList jarg1_);
  public final static native long ArPoseUtil_findCornersFromRobotBounds(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, boolean jarg6);
  public final static native long ArPoseUtil_breakUpDistanceEvenly(long jarg1, ArPose jarg1_, long jarg2, ArPose jarg2_, int jarg3);
  public final static native long new_ArPoseUtil();
  public final static native void delete_ArPoseUtil(long jarg1);
  public final static native long new_ArTimeChecker__SWIG_0(String jarg1, int jarg2);
  public final static native long new_ArTimeChecker__SWIG_1(String jarg1);
  public final static native long new_ArTimeChecker__SWIG_2();
  public final static native void delete_ArTimeChecker(long jarg1);
  public final static native void ArTimeChecker_setName(long jarg1, ArTimeChecker jarg1_, String jarg2);
  public final static native void ArTimeChecker_setDefaultMSecs(long jarg1, ArTimeChecker jarg1_, int jarg2);
  public final static native void ArTimeChecker_start(long jarg1, ArTimeChecker jarg1_);
  public final static native void ArTimeChecker_check(long jarg1, ArTimeChecker jarg1_, String jarg2);
  public final static native void ArTimeChecker_finish(long jarg1, ArTimeChecker jarg1_);
  public final static native long ArTimeChecker_getLastCheckTime(long jarg1, ArTimeChecker jarg1_);
  public final static native void md5_state_t_count_set(long jarg1, md5_state_t jarg1_, long jarg2);
  public final static native long md5_state_t_count_get(long jarg1, md5_state_t jarg1_);
  public final static native void md5_state_t_abcd_set(long jarg1, md5_state_t jarg1_, long jarg2);
  public final static native long md5_state_t_abcd_get(long jarg1, md5_state_t jarg1_);
  public final static native void md5_state_t_buf_set(long jarg1, md5_state_t jarg1_, long jarg2);
  public final static native long md5_state_t_buf_get(long jarg1, md5_state_t jarg1_);
  public final static native long new_md5_state_t();
  public final static native void delete_md5_state_t(long jarg1);
  public final static native void md5_init(long jarg1, md5_state_t jarg1_);
  public final static native void md5_append(long jarg1, md5_state_t jarg1_, long jarg2, int jarg3);
  public final static native void md5_finish(long jarg1, md5_state_t jarg1_, long jarg2);
  public final static native long new_ArBasePacket__SWIG_0(int jarg1, int jarg2, String jarg3, int jarg4);
  public final static native long new_ArBasePacket__SWIG_1(int jarg1, int jarg2, String jarg3);
  public final static native long new_ArBasePacket__SWIG_2(int jarg1, int jarg2);
  public final static native long new_ArBasePacket__SWIG_3(int jarg1);
  public final static native long new_ArBasePacket__SWIG_4();
  public final static native long new_ArBasePacket__SWIG_5(long jarg1, ArBasePacket jarg1_);
  public final static native void delete_ArBasePacket(long jarg1);
  public final static native void ArBasePacket_empty(long jarg1, ArBasePacket jarg1_);
  public final static native void ArBasePacket_finalizePacket(long jarg1, ArBasePacket jarg1_);
  public final static native void ArBasePacket_log(long jarg1, ArBasePacket jarg1_);
  public final static native void ArBasePacket_printHex(long jarg1, ArBasePacket jarg1_);
  public final static native boolean ArBasePacket_isValid(long jarg1, ArBasePacket jarg1_);
  public final static native void ArBasePacket_resetValid(long jarg1, ArBasePacket jarg1_);
  public final static native void ArBasePacket_byteToBuf(long jarg1, ArBasePacket jarg1_, char jarg2);
  public final static native void ArBasePacket_byte2ToBuf(long jarg1, ArBasePacket jarg1_, short jarg2);
  public final static native void ArBasePacket_byte4ToBuf(long jarg1, ArBasePacket jarg1_, int jarg2);
  public final static native void ArBasePacket_byte8ToBuf(long jarg1, ArBasePacket jarg1_, long jarg2);
  public final static native void ArBasePacket_uByteToBuf(long jarg1, ArBasePacket jarg1_, short jarg2);
  public final static native void ArBasePacket_uByte2ToBuf(long jarg1, ArBasePacket jarg1_, int jarg2);
  public final static native void ArBasePacket_uByte4ToBuf(long jarg1, ArBasePacket jarg1_, long jarg2);
  public final static native void ArBasePacket_uByte8ToBuf(long jarg1, ArBasePacket jarg1_, java.math.BigInteger jarg2);
  public final static native void ArBasePacket_strToBuf(long jarg1, ArBasePacket jarg1_, String jarg2);
  public final static native void ArBasePacket_strNToBuf(long jarg1, ArBasePacket jarg1_, String jarg2, int jarg3);
  public final static native void ArBasePacket_strToBufPadded(long jarg1, ArBasePacket jarg1_, String jarg2, int jarg3);
  public final static native void ArBasePacket_dataToBuf__SWIG_0(long jarg1, ArBasePacket jarg1_, String jarg2, int jarg3);
  public final static native void ArBasePacket_dataToBuf__SWIG_1(long jarg1, ArBasePacket jarg1_, long jarg2, int jarg3);
  public final static native char ArBasePacket_bufToByte(long jarg1, ArBasePacket jarg1_);
  public final static native short ArBasePacket_bufToByte2(long jarg1, ArBasePacket jarg1_);
  public final static native int ArBasePacket_bufToByte4(long jarg1, ArBasePacket jarg1_);
  public final static native long ArBasePacket_bufToByte8(long jarg1, ArBasePacket jarg1_);
  public final static native short ArBasePacket_bufToUByte(long jarg1, ArBasePacket jarg1_);
  public final static native int ArBasePacket_bufToUByte2(long jarg1, ArBasePacket jarg1_);
  public final static native long ArBasePacket_bufToUByte4(long jarg1, ArBasePacket jarg1_);
  public final static native java.math.BigInteger ArBasePacket_bufToUByte8(long jarg1, ArBasePacket jarg1_);
  public final static native void ArBasePacket_bufToStr(long jarg1, ArBasePacket jarg1_, String jarg2, int jarg3);
  public final static native void ArBasePacket_bufToData__SWIG_0(long jarg1, ArBasePacket jarg1_, String jarg2, int jarg3);
  public final static native void ArBasePacket_bufToData__SWIG_1(long jarg1, ArBasePacket jarg1_, long jarg2, int jarg3);
  public final static native void ArBasePacket_resetRead(long jarg1, ArBasePacket jarg1_);
  public final static native int ArBasePacket_getLength(long jarg1, ArBasePacket jarg1_);
  public final static native int ArBasePacket_getDataLength(long jarg1, ArBasePacket jarg1_);
  public final static native int ArBasePacket_getReadLength(long jarg1, ArBasePacket jarg1_);
  public final static native int ArBasePacket_getDataReadLength(long jarg1, ArBasePacket jarg1_);
  public final static native int ArBasePacket_getHeaderLength(long jarg1, ArBasePacket jarg1_);
  public final static native int ArBasePacket_getFooterLength(long jarg1, ArBasePacket jarg1_);
  public final static native int ArBasePacket_getMaxLength(long jarg1, ArBasePacket jarg1_);
  public final static native String ArBasePacket_getBuf__SWIG_0(long jarg1, ArBasePacket jarg1_);
  public final static native void ArBasePacket_setBuf(long jarg1, ArBasePacket jarg1_, String jarg2, int jarg3);
  public final static native void ArBasePacket_setMaxLength(long jarg1, ArBasePacket jarg1_, int jarg2);
  public final static native boolean ArBasePacket_setLength(long jarg1, ArBasePacket jarg1_, int jarg2);
  public final static native void ArBasePacket_setReadLength(long jarg1, ArBasePacket jarg1_, int jarg2);
  public final static native boolean ArBasePacket_setHeaderLength(long jarg1, ArBasePacket jarg1_, int jarg2);
  public final static native void ArBasePacket_duplicatePacket(long jarg1, ArBasePacket jarg1_, long jarg2, ArBasePacket jarg2_);
  public final static native void delete_ArPTZ(long jarg1);
  public final static native boolean ArPTZ_init(long jarg1, ArPTZ jarg1_);
  public final static native String ArPTZ_getTypeName(long jarg1, ArPTZ jarg1_);
  public final static native void ArPTZ_reset(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_pan(long jarg1, ArPTZ jarg1_, double jarg2);
  public final static native boolean ArPTZ_panRel(long jarg1, ArPTZ jarg1_, double jarg2);
  public final static native boolean ArPTZ_tilt(long jarg1, ArPTZ jarg1_, double jarg2);
  public final static native boolean ArPTZ_tiltRel(long jarg1, ArPTZ jarg1_, double jarg2);
  public final static native boolean ArPTZ_panTilt(long jarg1, ArPTZ jarg1_, double jarg2, double jarg3);
  public final static native boolean ArPTZ_panTiltRel(long jarg1, ArPTZ jarg1_, double jarg2, double jarg3);
  public final static native boolean ArPTZ_canZoom(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_zoom(long jarg1, ArPTZ jarg1_, int jarg2);
  public final static native boolean ArPTZ_zoomRel(long jarg1, ArPTZ jarg1_, int jarg2);
  public final static native double ArPTZ_getPan(long jarg1, ArPTZ jarg1_);
  public final static native double ArPTZ_getTilt(long jarg1, ArPTZ jarg1_);
  public final static native int ArPTZ_getZoom(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_canGetRealPanTilt(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_canGetRealZoom(long jarg1, ArPTZ jarg1_);
  public final static native double ArPTZ_getMaxPosPan(long jarg1, ArPTZ jarg1_);
  public final static native double ArPTZ_getMaxPan(long jarg1, ArPTZ jarg1_);
  public final static native double ArPTZ_getMaxNegPan(long jarg1, ArPTZ jarg1_);
  public final static native double ArPTZ_getMinPan(long jarg1, ArPTZ jarg1_);
  public final static native double ArPTZ_getMaxPosTilt(long jarg1, ArPTZ jarg1_);
  public final static native double ArPTZ_getMaxTilt(long jarg1, ArPTZ jarg1_);
  public final static native double ArPTZ_getMaxNegTilt(long jarg1, ArPTZ jarg1_);
  public final static native double ArPTZ_getMinTilt(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_haltPanTilt(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_haltZoom(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_canPanTiltSlew(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_canSetSpeed(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_panSlew(long jarg1, ArPTZ jarg1_, double jarg2);
  public final static native boolean ArPTZ_setPanSpeed(long jarg1, ArPTZ jarg1_, double jarg2);
  public final static native boolean ArPTZ_tiltSlew(long jarg1, ArPTZ jarg1_, double jarg2);
  public final static native boolean ArPTZ_setTiltSpeed(long jarg1, ArPTZ jarg1_, double jarg2);
  public final static native double ArPTZ_getMaxPanSpeed(long jarg1, ArPTZ jarg1_);
  public final static native double ArPTZ_getMaxTiltSpeed(long jarg1, ArPTZ jarg1_);
  public final static native int ArPTZ_getMaxZoom(long jarg1, ArPTZ jarg1_);
  public final static native int ArPTZ_getMinZoom(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_canGetFOV(long jarg1, ArPTZ jarg1_);
  public final static native double ArPTZ_getFOVAtMaxZoom(long jarg1, ArPTZ jarg1_);
  public final static native double ArPTZ_getFOVAtMinZoom(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_setGain(long jarg1, ArPTZ jarg1_, double jarg2);
  public final static native double ArPTZ_getGain(long jarg1, ArPTZ jarg1_, double jarg2);
  public final static native boolean ArPTZ_canSetGain(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_setFocus(long jarg1, ArPTZ jarg1_, double jarg2);
  public final static native double ArPTZ_getFocus(long jarg1, ArPTZ jarg1_, double jarg2);
  public final static native boolean ArPTZ_canSetFocus(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_setAutoFocus__SWIG_0(long jarg1, ArPTZ jarg1_, boolean jarg2);
  public final static native boolean ArPTZ_setAutoFocus__SWIG_1(long jarg1, ArPTZ jarg1_);
  public final static native void ArPTZ_setInverted(long jarg1, ArPTZ jarg1_, boolean jarg2);
  public final static native boolean ArPTZ_getInverted(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_setDeviceConnection__SWIG_0(long jarg1, ArPTZ jarg1_, long jarg2, ArDeviceConnection jarg2_, boolean jarg3);
  public final static native boolean ArPTZ_setDeviceConnection__SWIG_1(long jarg1, ArPTZ jarg1_, long jarg2, ArDeviceConnection jarg2_);
  public final static native long ArPTZ_getDeviceConnection(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_setAuxPort(long jarg1, ArPTZ jarg1_, int jarg2);
  public final static native int ArPTZ_getAuxPort(long jarg1, ArPTZ jarg1_);
  public final static native long ArPTZ_readPacket(long jarg1, ArPTZ jarg1_);
  public final static native boolean ArPTZ_sendPacket(long jarg1, ArPTZ jarg1_, long jarg2, ArBasePacket jarg2_);
  public final static native boolean ArPTZ_packetHandler(long jarg1, ArPTZ jarg1_, long jarg2, ArBasePacket jarg2_);
  public final static native boolean ArPTZ_robotPacketHandler(long jarg1, ArPTZ jarg1_, long jarg2, ArRobotPacket jarg2_);
  public final static native void ArPTZ_connectHandler(long jarg1, ArPTZ jarg1_);
  public final static native void ArPTZ_sensorInterpHandler(long jarg1, ArPTZ jarg1_);
  public final static native long ArPTZ_getRobot(long jarg1, ArPTZ jarg1_);
  public final static native long new_ArRangeDevice__SWIG_0(long jarg1, long jarg2, String jarg3, long jarg4, int jarg5, int jarg6, double jarg7, boolean jarg8);
  public final static native long new_ArRangeDevice__SWIG_1(long jarg1, long jarg2, String jarg3, long jarg4, int jarg5, int jarg6, double jarg7);
  public final static native long new_ArRangeDevice__SWIG_2(long jarg1, long jarg2, String jarg3, long jarg4, int jarg5, int jarg6);
  public final static native long new_ArRangeDevice__SWIG_3(long jarg1, long jarg2, String jarg3, long jarg4, int jarg5);
  public final static native long new_ArRangeDevice__SWIG_4(long jarg1, long jarg2, String jarg3, long jarg4);
  public final static native void delete_ArRangeDevice(long jarg1);
  public final static native String ArRangeDevice_getName(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_setRobot(long jarg1, ArRangeDevice jarg1_, long jarg2, ArRobot jarg2_);
  public final static native long ArRangeDevice_getRobot(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_setCurrentBufferSize(long jarg1, ArRangeDevice jarg1_, long jarg2);
  public final static native long ArRangeDevice_getCurrentBufferSize(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_setCumulativeBufferSize(long jarg1, ArRangeDevice jarg1_, long jarg2);
  public final static native long ArRangeDevice_getCumulativeBufferSize(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_addReading__SWIG_0(long jarg1, ArRangeDevice jarg1_, double jarg2, double jarg3, long jarg4);
  public final static native void ArRangeDevice_addReading__SWIG_1(long jarg1, ArRangeDevice jarg1_, double jarg2, double jarg3);
  public final static native boolean ArRangeDevice_isLocationDependent(long jarg1, ArRangeDevice jarg1_);
  public final static native double ArRangeDevice_currentReadingPolar__SWIG_0(long jarg1, ArRangeDevice jarg1_, double jarg2, double jarg3, long jarg4);
  public final static native double ArRangeDevice_currentReadingPolar__SWIG_1(long jarg1, ArRangeDevice jarg1_, double jarg2, double jarg3);
  public final static native double ArRangeDevice_cumulativeReadingPolar__SWIG_0(long jarg1, ArRangeDevice jarg1_, double jarg2, double jarg3, long jarg4);
  public final static native double ArRangeDevice_cumulativeReadingPolar__SWIG_1(long jarg1, ArRangeDevice jarg1_, double jarg2, double jarg3);
  public final static native double ArRangeDevice_currentReadingBox__SWIG_0(long jarg1, ArRangeDevice jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6, ArPose jarg6_);
  public final static native double ArRangeDevice_currentReadingBox__SWIG_1(long jarg1, ArRangeDevice jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native double ArRangeDevice_cumulativeReadingBox__SWIG_0(long jarg1, ArRangeDevice jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6, ArPose jarg6_);
  public final static native double ArRangeDevice_cumulativeReadingBox__SWIG_1(long jarg1, ArRangeDevice jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long ArRangeDevice_getCurrentRangeBuffer(long jarg1, ArRangeDevice jarg1_);
  public final static native long ArRangeDevice_getCumulativeRangeBuffer(long jarg1, ArRangeDevice jarg1_);
  public final static native long ArRangeDevice_getCurrentBuffer(long jarg1, ArRangeDevice jarg1_);
  public final static native long ArRangeDevice_getCurrentBufferAsVector(long jarg1, ArRangeDevice jarg1_);
  public final static native long ArRangeDevice_getCumulativeBuffer(long jarg1, ArRangeDevice jarg1_);
  public final static native long ArRangeDevice_getCumulativeBufferAsVector(long jarg1, ArRangeDevice jarg1_);
  public final static native long ArRangeDevice_getRawReadings(long jarg1, ArRangeDevice jarg1_);
  public final static native long ArRangeDevice_getRawReadingsAsVector(long jarg1, ArRangeDevice jarg1_);
  public final static native long ArRangeDevice_getAdjustedRawReadings(long jarg1, ArRangeDevice jarg1_);
  public final static native long ArRangeDevice_getAdjustedRawReadingsAsVector(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_setMaxSecondsToKeepCurrent(long jarg1, ArRangeDevice jarg1_, int jarg2);
  public final static native int ArRangeDevice_getMaxSecondsToKeepCurrent(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_setMinDistBetweenCurrent(long jarg1, ArRangeDevice jarg1_, double jarg2);
  public final static native double ArRangeDevice_getMinDistBetweenCurrent(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_setMaxSecondsToKeepCumulative(long jarg1, ArRangeDevice jarg1_, int jarg2);
  public final static native int ArRangeDevice_getMaxSecondsToKeepCumulative(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_setMaxDistToKeepCumulative(long jarg1, ArRangeDevice jarg1_, double jarg2);
  public final static native double ArRangeDevice_getMaxDistToKeepCumulative(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_setMinDistBetweenCumulative(long jarg1, ArRangeDevice jarg1_, double jarg2);
  public final static native double ArRangeDevice_getMinDistBetweenCumulative(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_setMaxInsertDistCumulative(long jarg1, ArRangeDevice jarg1_, double jarg2);
  public final static native double ArRangeDevice_getMaxInsertDistCumulative(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_clearCurrentReadings(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_clearCumulativeReadings(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_clearCumulativeOlderThan(long jarg1, ArRangeDevice jarg1_, int jarg2);
  public final static native void ArRangeDevice_clearCumulativeOlderThanSeconds(long jarg1, ArRangeDevice jarg1_, int jarg2);
  public final static native long ArRangeDevice_getMaxRange(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_setMaxRange(long jarg1, ArRangeDevice jarg1_, long jarg2);
  public final static native void ArRangeDevice_applyTransform__SWIG_0(long jarg1, ArRangeDevice jarg1_, long jarg2, ArTransform jarg2_, boolean jarg3);
  public final static native void ArRangeDevice_applyTransform__SWIG_1(long jarg1, ArRangeDevice jarg1_, long jarg2, ArTransform jarg2_);
  public final static native long ArRangeDevice_getCurrentDrawingData(long jarg1, ArRangeDevice jarg1_);
  public final static native long ArRangeDevice_getCumulativeDrawingData(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_setCurrentDrawingData(long jarg1, ArRangeDevice jarg1_, long jarg2, ArDrawingData jarg2_, boolean jarg3);
  public final static native void ArRangeDevice_setCumulativeDrawingData(long jarg1, ArRangeDevice jarg1_, long jarg2, ArDrawingData jarg2_, boolean jarg3);
  public final static native int ArRangeDevice_lockDevice(long jarg1, ArRangeDevice jarg1_);
  public final static native int ArRangeDevice_tryLockDevice(long jarg1, ArRangeDevice jarg1_);
  public final static native int ArRangeDevice_unlockDevice(long jarg1, ArRangeDevice jarg1_);
  public final static native void ArRangeDevice_filterCallback(long jarg1, ArRangeDevice jarg1_);
  public final static native void delete_ArRangeDeviceThreaded(long jarg1);
  public final static native long ArRangeDeviceThreaded_runThread(long jarg1, ArRangeDeviceThreaded jarg1_, long jarg2);
  public final static native void ArRangeDeviceThreaded_run(long jarg1, ArRangeDeviceThreaded jarg1_);
  public final static native void ArRangeDeviceThreaded_runAsync(long jarg1, ArRangeDeviceThreaded jarg1_);
  public final static native void ArRangeDeviceThreaded_stopRunning(long jarg1, ArRangeDeviceThreaded jarg1_);
  public final static native boolean ArRangeDeviceThreaded_getRunning(long jarg1, ArRangeDeviceThreaded jarg1_);
  public final static native boolean ArRangeDeviceThreaded_getRunningWithLock(long jarg1, ArRangeDeviceThreaded jarg1_);
  public final static native int ArRangeDeviceThreaded_lockDevice(long jarg1, ArRangeDeviceThreaded jarg1_);
  public final static native int ArRangeDeviceThreaded_tryLockDevice(long jarg1, ArRangeDeviceThreaded jarg1_);
  public final static native int ArRangeDeviceThreaded_unlockDevice(long jarg1, ArRangeDeviceThreaded jarg1_);
  public final static native void delete_ArLaser(long jarg1);
  public final static native boolean ArLaser_blockingConnect(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_asyncConnect(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_disconnect(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_isConnected(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_isTryingToConnect(long jarg1, ArLaser jarg1_);
  public final static native void ArLaser_setConnectionTimeoutSeconds(long jarg1, ArLaser jarg1_, double jarg2);
  public final static native double ArLaser_getConnectionTimeoutSeconds(long jarg1, ArLaser jarg1_);
  public final static native long ArLaser_getLastReadingTime(long jarg1, ArLaser jarg1_);
  public final static native int ArLaser_getReadingCount(long jarg1, ArLaser jarg1_);
  public final static native void ArLaser_setDeviceConnection(long jarg1, ArLaser jarg1_, long jarg2, ArDeviceConnection jarg2_);
  public final static native long ArLaser_getDeviceConnection(long jarg1, ArLaser jarg1_);
  public final static native void ArLaser_setSensorPosition__SWIG_0(long jarg1, ArLaser jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void ArLaser_setSensorPosition__SWIG_1(long jarg1, ArLaser jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArLaser_setSensorPosition__SWIG_2(long jarg1, ArLaser jarg1_, long jarg2, ArPose jarg2_, double jarg3);
  public final static native void ArLaser_setSensorPosition__SWIG_3(long jarg1, ArLaser jarg1_, long jarg2, ArPose jarg2_);
  public final static native boolean ArLaser_hasSensorPosition(long jarg1, ArLaser jarg1_);
  public final static native long ArLaser_getSensorPosition(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getSensorPositionX(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getSensorPositionY(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getSensorPositionZ(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getSensorPositionTh(long jarg1, ArLaser jarg1_);
  public final static native int ArLaser_getLaserNumber(long jarg1, ArLaser jarg1_);
  public final static native void ArLaser_setInfoLogLevel(long jarg1, ArLaser jarg1_, int jarg2);
  public final static native int ArLaser_getInfoLogLevel(long jarg1, ArLaser jarg1_);
  public final static native void ArLaser_setCumulativeCleanDist(long jarg1, ArLaser jarg1_, double jarg2);
  public final static native double ArLaser_getCumulativeCleanDist(long jarg1, ArLaser jarg1_);
  public final static native void ArLaser_setCumulativeCleanInterval(long jarg1, ArLaser jarg1_, int jarg2);
  public final static native int ArLaser_getCumulativeCleanInterval(long jarg1, ArLaser jarg1_);
  public final static native void ArLaser_setCumulativeCleanOffset(long jarg1, ArLaser jarg1_, int jarg2);
  public final static native int ArLaser_getCumulativeCleanOffset(long jarg1, ArLaser jarg1_);
  public final static native void ArLaser_resetLastCumulativeCleanTime(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_addIgnoreReadings(long jarg1, ArLaser jarg1_, String jarg2);
  public final static native void ArLaser_addIgnoreReading(long jarg1, ArLaser jarg1_, double jarg2);
  public final static native void ArLaser_clearIgnoreReadings(long jarg1, ArLaser jarg1_);
  public final static native long ArLaser_getIgnoreReadings(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_getFlipped(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_setFlipped(long jarg1, ArLaser jarg1_, boolean jarg2);
  public final static native int ArLaser_getDefaultTcpPort(long jarg1, ArLaser jarg1_);
  public final static native String ArLaser_getDefaultPortType(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_canSetDegrees(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getStartDegreesMin(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getStartDegreesMax(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getStartDegrees(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_setStartDegrees(long jarg1, ArLaser jarg1_, double jarg2);
  public final static native double ArLaser_getEndDegreesMin(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getEndDegreesMax(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getEndDegrees(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_setEndDegrees(long jarg1, ArLaser jarg1_, double jarg2);
  public final static native boolean ArLaser_canChooseDegrees(long jarg1, ArLaser jarg1_);
  public final static native long ArLaser_getDegreesChoices(long jarg1, ArLaser jarg1_);
  public final static native String ArLaser_getDegreesChoicesString(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_chooseDegrees(long jarg1, ArLaser jarg1_, String jarg2);
  public final static native String ArLaser_getDegreesChoice(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getDegreesChoiceDouble(long jarg1, ArLaser jarg1_);
  public final static native long ArLaser_getDegreesChoicesMap(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_canSetIncrement(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getIncrementMin(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getIncrementMax(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getIncrement(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_setIncrement(long jarg1, ArLaser jarg1_, double jarg2);
  public final static native boolean ArLaser_canChooseIncrement(long jarg1, ArLaser jarg1_);
  public final static native long ArLaser_getIncrementChoices(long jarg1, ArLaser jarg1_);
  public final static native String ArLaser_getIncrementChoicesString(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_chooseIncrement(long jarg1, ArLaser jarg1_, String jarg2);
  public final static native String ArLaser_getIncrementChoice(long jarg1, ArLaser jarg1_);
  public final static native double ArLaser_getIncrementChoiceDouble(long jarg1, ArLaser jarg1_);
  public final static native long ArLaser_getIncrementChoicesMap(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_canChooseUnits(long jarg1, ArLaser jarg1_);
  public final static native long ArLaser_getUnitsChoices(long jarg1, ArLaser jarg1_);
  public final static native String ArLaser_getUnitsChoicesString(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_chooseUnits(long jarg1, ArLaser jarg1_, String jarg2);
  public final static native String ArLaser_getUnitsChoice(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_canChooseReflectorBits(long jarg1, ArLaser jarg1_);
  public final static native long ArLaser_getReflectorBitsChoices(long jarg1, ArLaser jarg1_);
  public final static native String ArLaser_getReflectorBitsChoicesString(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_chooseReflectorBits(long jarg1, ArLaser jarg1_, String jarg2);
  public final static native String ArLaser_getReflectorBitsChoice(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_canSetPowerControlled(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_setPowerControlled(long jarg1, ArLaser jarg1_, boolean jarg2);
  public final static native boolean ArLaser_getPowerControlled(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_canChooseStartingBaud(long jarg1, ArLaser jarg1_);
  public final static native long ArLaser_getStartingBaudChoices(long jarg1, ArLaser jarg1_);
  public final static native String ArLaser_getStartingBaudChoicesString(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_chooseStartingBaud(long jarg1, ArLaser jarg1_, String jarg2);
  public final static native String ArLaser_getStartingBaudChoice(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_canChooseAutoBaud(long jarg1, ArLaser jarg1_);
  public final static native long ArLaser_getAutoBaudChoices(long jarg1, ArLaser jarg1_);
  public final static native String ArLaser_getAutoBaudChoicesString(long jarg1, ArLaser jarg1_);
  public final static native boolean ArLaser_chooseAutoBaud(long jarg1, ArLaser jarg1_, String jarg2);
  public final static native String ArLaser_getAutoBaudChoice(long jarg1, ArLaser jarg1_);
  public final static native void ArLaser_addConnectCB__SWIG_0(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArLaser_addConnectCB__SWIG_1(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArLaser_remConnectCB(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArLaser_addFailedConnectCB__SWIG_0(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArLaser_addFailedConnectCB__SWIG_1(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArLaser_remFailedConnectCB(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArLaser_addDisconnectNormallyCB__SWIG_0(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArLaser_addDisconnectNormallyCB__SWIG_1(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArLaser_remDisconnectNormallyCB(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArLaser_addDisconnectOnErrorCB__SWIG_0(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArLaser_addDisconnectOnErrorCB__SWIG_1(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArLaser_remDisconnectOnErrorCB(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArLaser_addReadingCB__SWIG_0(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArLaser_addReadingCB__SWIG_1(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArLaser_remReadingCB(long jarg1, ArLaser jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native long ArLaser_getAbsoluteMaxRange(long jarg1, ArLaser jarg1_);
  public final static native void ArLaser_copyReadingCount(long jarg1, ArLaser jarg1_, long jarg2, ArLaser jarg2_);
  public final static native void ArLaser_setMaxRange(long jarg1, ArLaser jarg1_, long jarg2);
  public final static native void ArLaser_setCumulativeBufferSize(long jarg1, ArLaser jarg1_, long jarg2);
  public final static native boolean ArLaser_laserCheckParams(long jarg1, ArLaser jarg1_);
  public final static native void ArLaser_applyTransform__SWIG_0(long jarg1, ArLaser jarg1_, long jarg2, ArTransform jarg2_, boolean jarg3);
  public final static native void ArLaser_applyTransform__SWIG_1(long jarg1, ArLaser jarg1_, long jarg2, ArTransform jarg2_);
  public final static native void ArLaser_useSimpleNamingForAllLasers();
  public final static native void delete_ArResolver(long jarg1);
  public final static native long ArResolver_resolve__SWIG_0(long jarg1, ArResolver jarg1_, long jarg2, long jarg3, ArRobot jarg3_, boolean jarg4);
  public final static native long ArResolver_resolve__SWIG_1(long jarg1, ArResolver jarg1_, long jarg2, long jarg3, ArRobot jarg3_);
  public final static native String ArResolver_getName(long jarg1, ArResolver jarg1_);
  public final static native String ArResolver_getDescription(long jarg1, ArResolver jarg1_);
  public final static native int ArThread_STATUS_FAILED_get();
  public final static native long new_ArThread__SWIG_0(boolean jarg1);
  public final static native long new_ArThread__SWIG_1();
  public final static native long new_ArThread__SWIG_2(long jarg1, boolean jarg2, boolean jarg3);
  public final static native long new_ArThread__SWIG_3(long jarg1, boolean jarg2);
  public final static native long new_ArThread__SWIG_4(long jarg1, ArFunctor jarg1_, boolean jarg2, boolean jarg3);
  public final static native long new_ArThread__SWIG_5(long jarg1, ArFunctor jarg1_, boolean jarg2);
  public final static native long new_ArThread__SWIG_6(long jarg1, ArFunctor jarg1_);
  public final static native void delete_ArThread(long jarg1);
  public final static native void ArThread_init();
  public final static native long ArThread_self();
  public final static native long ArThread_osSelf();
  public final static native void ArThread_stopAll();
  public final static native void ArThread_cancelAll();
  public final static native void ArThread_joinAll();
  public final static native void ArThread_shutdown();
  public final static native void ArThread_yieldProcessor();
  public final static native int ArThread_getLogLevel();
  public final static native void ArThread_setLogLevel(int jarg1);
  public final static native int ArThread_create__SWIG_0(long jarg1, ArThread jarg1_, long jarg2, ArFunctor jarg2_, boolean jarg3, boolean jarg4);
  public final static native int ArThread_create__SWIG_1(long jarg1, ArThread jarg1_, long jarg2, ArFunctor jarg2_, boolean jarg3);
  public final static native int ArThread_create__SWIG_2(long jarg1, ArThread jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArThread_stopRunning(long jarg1, ArThread jarg1_);
  public final static native int ArThread_join__SWIG_0(long jarg1, ArThread jarg1_, long jarg2);
  public final static native int ArThread_join__SWIG_1(long jarg1, ArThread jarg1_);
  public final static native int ArThread_detach(long jarg1, ArThread jarg1_);
  public final static native void ArThread_cancel(long jarg1, ArThread jarg1_);
  public final static native boolean ArThread_getRunning(long jarg1, ArThread jarg1_);
  public final static native boolean ArThread_getRunningWithLock(long jarg1, ArThread jarg1_);
  public final static native boolean ArThread_getJoinable(long jarg1, ArThread jarg1_);
  public final static native long ArThread_getThread(long jarg1, ArThread jarg1_);
  public final static native long ArThread_getOSThread(long jarg1, ArThread jarg1_);
  public final static native long ArThread_getFunc(long jarg1, ArThread jarg1_);
  public final static native void ArThread_setRunning(long jarg1, ArThread jarg1_, boolean jarg2);
  public final static native boolean ArThread_getBlockAllSignals(long jarg1, ArThread jarg1_);
  public final static native String ArThread_getThreadName(long jarg1, ArThread jarg1_);
  public final static native void ArThread_setThreadName(long jarg1, ArThread jarg1_, String jarg2);
  public final static native String ArThread_getThreadActivity(long jarg1, ArThread jarg1_);
  public final static native void ArThread_threadStarted(long jarg1, ArThread jarg1_);
  public final static native void ArThread_threadFinished(long jarg1, ArThread jarg1_);
  public final static native boolean ArThread_isThreadStarted(long jarg1, ArThread jarg1_);
  public final static native boolean ArThread_isThreadFinished(long jarg1, ArThread jarg1_);
  public final static native void ArThread_logThreadInfo(long jarg1, ArThread jarg1_);
  public final static native long ArThread_getPID(long jarg1, ArThread jarg1_);
  public final static native long ArThread_getTID(long jarg1, ArThread jarg1_);
  public final static native String ArThread_getThisThreadName();
  public final static native long ArThread_getThisThread();
  public final static native long ArThread_getThisOSThread();
  public final static native void delete_ArFunctor(long jarg1);
  public final static native void ArFunctor_invoke(long jarg1, ArFunctor jarg1_);
  public final static native String ArFunctor_getName(long jarg1, ArFunctor jarg1_);
  public final static native String ArFunctor_getNameSwigExplicitArFunctor(long jarg1, ArFunctor jarg1_);
  public final static native void ArFunctor_setName(long jarg1, ArFunctor jarg1_, String jarg2);
  public final static native void ArFunctor_setNameSwigExplicitArFunctor(long jarg1, ArFunctor jarg1_, String jarg2);
  public final static native long new_ArFunctor();
  public final static native void ArFunctor_director_connect(ArFunctor obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArFunctor_change_ownership(ArFunctor obj, long cptr, boolean take_or_release);
  public final static native void delete_ArRetFunctor_VoidP(long jarg1);
  public final static native void ArRetFunctor_VoidP_invoke(long jarg1, ArRetFunctor_VoidP jarg1_);
  public final static native void ArRetFunctor_VoidP_invokeSwigExplicitArRetFunctor_VoidP(long jarg1, ArRetFunctor_VoidP jarg1_);
  public final static native long ArRetFunctor_VoidP_invokeR(long jarg1, ArRetFunctor_VoidP jarg1_);
  public final static native long new_ArRetFunctor_VoidP();
  public final static native void ArRetFunctor_VoidP_director_connect(ArRetFunctor_VoidP obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArRetFunctor_VoidP_change_ownership(ArRetFunctor_VoidP obj, long cptr, boolean take_or_release);
  public final static native void delete_ArRetFunctor_Bool(long jarg1);
  public final static native void ArRetFunctor_Bool_invoke(long jarg1, ArRetFunctor_Bool jarg1_);
  public final static native void ArRetFunctor_Bool_invokeSwigExplicitArRetFunctor_Bool(long jarg1, ArRetFunctor_Bool jarg1_);
  public final static native boolean ArRetFunctor_Bool_invokeR(long jarg1, ArRetFunctor_Bool jarg1_);
  public final static native long new_ArRetFunctor_Bool();
  public final static native void ArRetFunctor_Bool_director_connect(ArRetFunctor_Bool obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArRetFunctor_Bool_change_ownership(ArRetFunctor_Bool obj, long cptr, boolean take_or_release);
  public final static native void delete_ArFunctor1_CString(long jarg1);
  public final static native void ArFunctor1_CString_invoke__SWIG_0(long jarg1, ArFunctor1_CString jarg1_);
  public final static native void ArFunctor1_CString_invoke__SWIG_1(long jarg1, ArFunctor1_CString jarg1_, String jarg2);
  public final static native void delete_ArFunctor1_Int(long jarg1);
  public final static native void ArFunctor1_Int_invoke__SWIG_0(long jarg1, ArFunctor1_Int jarg1_);
  public final static native void ArFunctor1_Int_invoke__SWIG_1(long jarg1, ArFunctor1_Int jarg1_, int jarg2);
  public final static native void delete_ArFunctor1_ArRobotPacketP(long jarg1);
  public final static native void ArFunctor1_ArRobotPacketP_invoke__SWIG_0(long jarg1, ArFunctor1_ArRobotPacketP jarg1_);
  public final static native void ArFunctor1_ArRobotPacketP_invoke__SWIG_1(long jarg1, ArFunctor1_ArRobotPacketP jarg1_, long jarg2, ArRobotPacket jarg2_);
  public final static native long new_ArFunctor1_ArRobotPacketP();
  public final static native void ArFunctor1_ArRobotPacketP_director_connect(ArFunctor1_ArRobotPacketP obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArFunctor1_ArRobotPacketP_change_ownership(ArFunctor1_ArRobotPacketP obj, long cptr, boolean take_or_release);
  public final static native void delete_ArRetFunctor_Int(long jarg1);
  public final static native void ArRetFunctor_Int_invoke(long jarg1, ArRetFunctor_Int jarg1_);
  public final static native void ArRetFunctor_Int_invokeSwigExplicitArRetFunctor_Int(long jarg1, ArRetFunctor_Int jarg1_);
  public final static native int ArRetFunctor_Int_invokeR(long jarg1, ArRetFunctor_Int jarg1_);
  public final static native long new_ArRetFunctor_Int();
  public final static native void ArRetFunctor_Int_director_connect(ArRetFunctor_Int obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArRetFunctor_Int_change_ownership(ArRetFunctor_Int obj, long cptr, boolean take_or_release);
  public final static native void delete_ArRetFunctor_Double(long jarg1);
  public final static native void ArRetFunctor_Double_invoke(long jarg1, ArRetFunctor_Double jarg1_);
  public final static native void ArRetFunctor_Double_invokeSwigExplicitArRetFunctor_Double(long jarg1, ArRetFunctor_Double jarg1_);
  public final static native double ArRetFunctor_Double_invokeR(long jarg1, ArRetFunctor_Double jarg1_);
  public final static native long new_ArRetFunctor_Double();
  public final static native void ArRetFunctor_Double_director_connect(ArRetFunctor_Double obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArRetFunctor_Double_change_ownership(ArRetFunctor_Double obj, long cptr, boolean take_or_release);
  public final static native void delete_ArRetFunctor_UnsignedInt(long jarg1);
  public final static native void ArRetFunctor_UnsignedInt_invoke(long jarg1, ArRetFunctor_UnsignedInt jarg1_);
  public final static native void ArRetFunctor_UnsignedInt_invokeSwigExplicitArRetFunctor_UnsignedInt(long jarg1, ArRetFunctor_UnsignedInt jarg1_);
  public final static native long ArRetFunctor_UnsignedInt_invokeR(long jarg1, ArRetFunctor_UnsignedInt jarg1_);
  public final static native long new_ArRetFunctor_UnsignedInt();
  public final static native void ArRetFunctor_UnsignedInt_director_connect(ArRetFunctor_UnsignedInt obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArRetFunctor_UnsignedInt_change_ownership(ArRetFunctor_UnsignedInt obj, long cptr, boolean take_or_release);
  public final static native void delete_ArRetFunctor1_Double_ArPoseWithTime(long jarg1);
  public final static native double ArRetFunctor1_Double_ArPoseWithTime_invokeR__SWIG_0(long jarg1, ArRetFunctor1_Double_ArPoseWithTime jarg1_);
  public final static native double ArRetFunctor1_Double_ArPoseWithTime_invokeR__SWIG_1(long jarg1, ArRetFunctor1_Double_ArPoseWithTime jarg1_, long jarg2, ArPoseWithTime jarg2_);
  public final static native long new_ArRetFunctor1_Double_ArPoseWithTime();
  public final static native void ArRetFunctor1_Double_ArPoseWithTime_director_connect(ArRetFunctor1_Double_ArPoseWithTime obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArRetFunctor1_Double_ArPoseWithTime_change_ownership(ArRetFunctor1_Double_ArPoseWithTime obj, long cptr, boolean take_or_release);
  public final static native void delete_ArRetFunctor1_Bool_ArRobotPacketP(long jarg1);
  public final static native boolean ArRetFunctor1_Bool_ArRobotPacketP_invokeR__SWIG_0(long jarg1, ArRetFunctor1_Bool_ArRobotPacketP jarg1_);
  public final static native boolean ArRetFunctor1_Bool_ArRobotPacketP_invokeR__SWIG_1(long jarg1, ArRetFunctor1_Bool_ArRobotPacketP jarg1_, long jarg2, ArRobotPacket jarg2_);
  public final static native long new_ArRetFunctor1_Bool_ArRobotPacketP();
  public final static native void ArRetFunctor1_Bool_ArRobotPacketP_director_connect(ArRetFunctor1_Bool_ArRobotPacketP obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArRetFunctor1_Bool_ArRobotPacketP_change_ownership(ArRetFunctor1_Bool_ArRobotPacketP obj, long cptr, boolean take_or_release);
  public final static native void delete_ArRetFunctor1_Bool_ArgumentBuilder(long jarg1);
  public final static native boolean ArRetFunctor1_Bool_ArgumentBuilder_invokeR__SWIG_0(long jarg1, ArRetFunctor1_Bool_ArgumentBuilder jarg1_);
  public final static native boolean ArRetFunctor1_Bool_ArgumentBuilder_invokeR__SWIG_1(long jarg1, ArRetFunctor1_Bool_ArgumentBuilder jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native long new_ArRetFunctor1_Bool_ArgumentBuilder();
  public final static native void ArRetFunctor1_Bool_ArgumentBuilder_director_connect(ArRetFunctor1_Bool_ArgumentBuilder obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArRetFunctor1_Bool_ArgumentBuilder_change_ownership(ArRetFunctor1_Bool_ArgumentBuilder obj, long cptr, boolean take_or_release);
  public final static native void delete_ArRetFunctor1_Bool_ArgumentBuilderP(long jarg1);
  public final static native boolean ArRetFunctor1_Bool_ArgumentBuilderP_invokeR__SWIG_0(long jarg1, ArRetFunctor1_Bool_ArgumentBuilderP jarg1_);
  public final static native boolean ArRetFunctor1_Bool_ArgumentBuilderP_invokeR__SWIG_1(long jarg1, ArRetFunctor1_Bool_ArgumentBuilderP jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native long new_ArRetFunctor1_Bool_ArgumentBuilderP();
  public final static native void ArRetFunctor1_Bool_ArgumentBuilderP_director_connect(ArRetFunctor1_Bool_ArgumentBuilderP obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArRetFunctor1_Bool_ArgumentBuilderP_change_ownership(ArRetFunctor1_Bool_ArgumentBuilderP obj, long cptr, boolean take_or_release);
  public final static native void delete_ArRetFunctor1_VoidP_VoidP(long jarg1);
  public final static native long ArRetFunctor1_VoidP_VoidP_invokeR__SWIG_0(long jarg1, ArRetFunctor1_VoidP_VoidP jarg1_);
  public final static native long ArRetFunctor1_VoidP_VoidP_invokeR__SWIG_1(long jarg1, ArRetFunctor1_VoidP_VoidP jarg1_, long jarg2);
  public final static native long new_ArRetFunctor1_VoidP_VoidP();
  public final static native void ArRetFunctor1_VoidP_VoidP_director_connect(ArRetFunctor1_VoidP_VoidP obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArRetFunctor1_VoidP_VoidP_change_ownership(ArRetFunctor1_VoidP_VoidP obj, long cptr, boolean take_or_release);
  public final static native long new_ArACTSBlob();
  public final static native void delete_ArACTSBlob(long jarg1);
  public final static native int ArACTSBlob_getArea(long jarg1, ArACTSBlob jarg1_);
  public final static native int ArACTSBlob_getXCG(long jarg1, ArACTSBlob jarg1_);
  public final static native int ArACTSBlob_getYCG(long jarg1, ArACTSBlob jarg1_);
  public final static native int ArACTSBlob_getLeft(long jarg1, ArACTSBlob jarg1_);
  public final static native int ArACTSBlob_getRight(long jarg1, ArACTSBlob jarg1_);
  public final static native int ArACTSBlob_getTop(long jarg1, ArACTSBlob jarg1_);
  public final static native int ArACTSBlob_getBottom(long jarg1, ArACTSBlob jarg1_);
  public final static native void ArACTSBlob_setArea(long jarg1, ArACTSBlob jarg1_, int jarg2);
  public final static native void ArACTSBlob_setXCG(long jarg1, ArACTSBlob jarg1_, int jarg2);
  public final static native void ArACTSBlob_setYCG(long jarg1, ArACTSBlob jarg1_, int jarg2);
  public final static native void ArACTSBlob_setLeft(long jarg1, ArACTSBlob jarg1_, int jarg2);
  public final static native void ArACTSBlob_setRight(long jarg1, ArACTSBlob jarg1_, int jarg2);
  public final static native void ArACTSBlob_setTop(long jarg1, ArACTSBlob jarg1_, int jarg2);
  public final static native void ArACTSBlob_setBottom(long jarg1, ArACTSBlob jarg1_, int jarg2);
  public final static native void ArACTSBlob_log(long jarg1, ArACTSBlob jarg1_);
  public final static native long new_ArACTS_1_2();
  public final static native void delete_ArACTS_1_2(long jarg1);
  public final static native boolean ArACTS_1_2_openPort__SWIG_0(long jarg1, ArACTS_1_2 jarg1_, long jarg2, ArRobot jarg2_, String jarg3, int jarg4);
  public final static native boolean ArACTS_1_2_openPort__SWIG_1(long jarg1, ArACTS_1_2 jarg1_, long jarg2, ArRobot jarg2_, String jarg3);
  public final static native boolean ArACTS_1_2_openPort__SWIG_2(long jarg1, ArACTS_1_2 jarg1_, long jarg2, ArRobot jarg2_);
  public final static native boolean ArACTS_1_2_closePort(long jarg1, ArACTS_1_2 jarg1_);
  public final static native boolean ArACTS_1_2_isConnected(long jarg1, ArACTS_1_2 jarg1_);
  public final static native long ArACTS_1_2_getRobot(long jarg1, ArACTS_1_2 jarg1_);
  public final static native void ArACTS_1_2_setRobot(long jarg1, ArACTS_1_2 jarg1_, long jarg2, ArRobot jarg2_);
  public final static native boolean ArACTS_1_2_requestPacket(long jarg1, ArACTS_1_2 jarg1_);
  public final static native boolean ArACTS_1_2_requestQuit(long jarg1, ArACTS_1_2 jarg1_);
  public final static native boolean ArACTS_1_2_receiveBlobInfo(long jarg1, ArACTS_1_2 jarg1_);
  public final static native int ArACTS_1_2_getNumBlobs(long jarg1, ArACTS_1_2 jarg1_, int jarg2);
  public final static native boolean ArACTS_1_2_getBlob(long jarg1, ArACTS_1_2 jarg1_, int jarg2, int jarg3, long jarg4, ArACTSBlob jarg4_);
  public final static native void ArACTS_1_2_actsHandler(long jarg1, ArACTS_1_2 jarg1_);
  public final static native int ArACTS_1_2_NUM_CHANNELS_get();
  public final static native int ArACTS_1_2_MAX_BLOBS_get();
  public final static native int ArACTS_1_2_ACTS_BLOB_DATA_SIZE_get();
  public final static native int ArACTS_1_2_DATA_HEADER_get();
  public final static native int ArACTS_1_2_MAX_DATA_get();
  public final static native void ArACTS_1_2_invert__SWIG_0(long jarg1, ArACTS_1_2 jarg1_, int jarg2, int jarg3);
  public final static native void ArACTS_1_2_invert__SWIG_1(long jarg1, ArACTS_1_2 jarg1_, int jarg2);
  public final static native void ArACTS_1_2_invert__SWIG_2(long jarg1, ArACTS_1_2 jarg1_);
  public final static native int ArAMPTUCommands_ABSTILT_get();
  public final static native int ArAMPTUCommands_RELTILTU_get();
  public final static native int ArAMPTUCommands_RELTILTD_get();
  public final static native int ArAMPTUCommands_ABSPAN_get();
  public final static native int ArAMPTUCommands_RELPANCW_get();
  public final static native int ArAMPTUCommands_RELPANCCW_get();
  public final static native int ArAMPTUCommands_PANTILT_get();
  public final static native int ArAMPTUCommands_PANTILTUCW_get();
  public final static native int ArAMPTUCommands_PANTILTDCW_get();
  public final static native int ArAMPTUCommands_PANTILTUCCW_get();
  public final static native int ArAMPTUCommands_PANTILTDCCW_get();
  public final static native int ArAMPTUCommands_ZOOM_get();
  public final static native int ArAMPTUCommands_PAUSE_get();
  public final static native int ArAMPTUCommands_CONT_get();
  public final static native int ArAMPTUCommands_PURGE_get();
  public final static native int ArAMPTUCommands_STATUS_get();
  public final static native int ArAMPTUCommands_INIT_get();
  public final static native int ArAMPTUCommands_RESP_get();
  public final static native int ArAMPTUCommands_PANSLEW_get();
  public final static native int ArAMPTUCommands_TILTSLEW_get();
  public final static native long new_ArAMPTUCommands();
  public final static native void delete_ArAMPTUCommands(long jarg1);
  public final static native long new_ArAMPTUPacket__SWIG_0(int jarg1);
  public final static native long new_ArAMPTUPacket__SWIG_1();
  public final static native void delete_ArAMPTUPacket(long jarg1);
  public final static native short ArAMPTUPacket_getUnitNumber(long jarg1, ArAMPTUPacket jarg1_);
  public final static native boolean ArAMPTUPacket_setUnitNumber(long jarg1, ArAMPTUPacket jarg1_, short jarg2);
  public final static native void ArAMPTUPacket_byteToBuf(long jarg1, ArAMPTUPacket jarg1_, char jarg2);
  public final static native void ArAMPTUPacket_byte2ToBuf(long jarg1, ArAMPTUPacket jarg1_, short jarg2);
  public final static native void ArAMPTUPacket_finalizePacket(long jarg1, ArAMPTUPacket jarg1_);
  public final static native long new_ArAMPTU__SWIG_0(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long new_ArAMPTU__SWIG_1(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArAMPTU(long jarg1);
  public final static native boolean ArAMPTU_init(long jarg1, ArAMPTU jarg1_);
  public final static native String ArAMPTU_getTypeName(long jarg1, ArAMPTU jarg1_);
  public final static native boolean ArAMPTU_panSlew(long jarg1, ArAMPTU jarg1_, double jarg2);
  public final static native boolean ArAMPTU_tiltSlew(long jarg1, ArAMPTU jarg1_, double jarg2);
  public final static native boolean ArAMPTU_canZoom(long jarg1, ArAMPTU jarg1_);
  public final static native boolean ArAMPTU_canPanTiltSlew(long jarg1, ArAMPTU jarg1_);
  public final static native boolean ArAMPTU_pause(long jarg1, ArAMPTU jarg1_);
  public final static native boolean ArAMPTU_resume(long jarg1, ArAMPTU jarg1_);
  public final static native boolean ArAMPTU_purge(long jarg1, ArAMPTU jarg1_);
  public final static native boolean ArAMPTU_requestStatus(long jarg1, ArAMPTU jarg1_);
  public final static native double ArAMPTU_getPan_i(long jarg1, ArAMPTU jarg1_);
  public final static native double ArAMPTU_getTilt_i(long jarg1, ArAMPTU jarg1_);
  public final static native int ArAMPTU_MIN_SLEW_get();
  public final static native int ArAMPTU_MAX_TILT_SLEW_get();
  public final static native int ArAMPTU_MAX_PAN_SLEW_get();
  public final static native void delete_ArASyncTask(long jarg1);
  public final static native long ArASyncTask_runThread(long jarg1, ArASyncTask jarg1_, long jarg2);
  public final static native void ArASyncTask_run(long jarg1, ArASyncTask jarg1_);
  public final static native void ArASyncTask_runAsync(long jarg1, ArASyncTask jarg1_);
  public final static native void ArASyncTask_stopRunning(long jarg1, ArASyncTask jarg1_);
  public final static native int ArASyncTask_create__SWIG_0(long jarg1, ArASyncTask jarg1_, boolean jarg2, boolean jarg3);
  public final static native int ArASyncTask_create__SWIG_1(long jarg1, ArASyncTask jarg1_, boolean jarg2);
  public final static native int ArASyncTask_create__SWIG_2(long jarg1, ArASyncTask jarg1_);
  public final static native long ArASyncTask_runInThisThread__SWIG_0(long jarg1, ArASyncTask jarg1_, long jarg2);
  public final static native long ArASyncTask_runInThisThread__SWIG_1(long jarg1, ArASyncTask jarg1_);
  public final static native String ArASyncTask_getThreadActivity(long jarg1, ArASyncTask jarg1_);
  public final static native long new_ArAction__SWIG_0(String jarg1, String jarg2);
  public final static native long new_ArAction__SWIG_1(String jarg1);
  public final static native void delete_ArAction(long jarg1);
  public final static native boolean ArAction_isActive(long jarg1, ArAction jarg1_);
  public final static native boolean ArAction_isActiveSwigExplicitArAction(long jarg1, ArAction jarg1_);
  public final static native void ArAction_activate(long jarg1, ArAction jarg1_);
  public final static native void ArAction_activateSwigExplicitArAction(long jarg1, ArAction jarg1_);
  public final static native void ArAction_deactivate(long jarg1, ArAction jarg1_);
  public final static native void ArAction_deactivateSwigExplicitArAction(long jarg1, ArAction jarg1_);
  public final static native long ArAction_fire(long jarg1, ArAction jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native void ArAction_setRobot(long jarg1, ArAction jarg1_, long jarg2, ArRobot jarg2_);
  public final static native void ArAction_setRobotSwigExplicitArAction(long jarg1, ArAction jarg1_, long jarg2, ArRobot jarg2_);
  public final static native int ArAction_getNumArgs(long jarg1, ArAction jarg1_);
  public final static native int ArAction_getNumArgsSwigExplicitArAction(long jarg1, ArAction jarg1_);
  public final static native long ArAction_getArg(long jarg1, ArAction jarg1_, int jarg2);
  public final static native long ArAction_getArgSwigExplicitArAction(long jarg1, ArAction jarg1_, int jarg2);
  public final static native String ArAction_getName(long jarg1, ArAction jarg1_);
  public final static native String ArAction_getNameSwigExplicitArAction(long jarg1, ArAction jarg1_);
  public final static native String ArAction_getDescription(long jarg1, ArAction jarg1_);
  public final static native String ArAction_getDescriptionSwigExplicitArAction(long jarg1, ArAction jarg1_);
  public final static native long ArAction_getDesired__SWIG_0(long jarg1, ArAction jarg1_);
  public final static native long ArAction_getDesiredSwigExplicitArAction__SWIG_0(long jarg1, ArAction jarg1_);
  public final static native long ArAction_getDesiredSwigExplicitArAction__SWIG_1(long jarg1, ArAction jarg1_);
  public final static native void ArAction_log__SWIG_0(long jarg1, ArAction jarg1_, boolean jarg2);
  public final static native void ArAction_logSwigExplicitArAction__SWIG_0(long jarg1, ArAction jarg1_, boolean jarg2);
  public final static native void ArAction_log__SWIG_1(long jarg1, ArAction jarg1_);
  public final static native void ArAction_logSwigExplicitArAction__SWIG_1(long jarg1, ArAction jarg1_);
  public final static native long ArAction_getRobot(long jarg1, ArAction jarg1_);
  public final static native void ArAction_setDefaultActivationState(boolean jarg1);
  public final static native boolean ArAction_getDefaultActivationState();
  public final static native void ArAction_setActionRobot(long jarg1, ArAction jarg1_, long jarg2, ArRobot jarg2_);
  public final static native void ArAction_director_connect(ArAction obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArAction_change_ownership(ArAction obj, long cptr, boolean take_or_release);
  public final static native long new_ArActionAvoidFront__SWIG_0(String jarg1, double jarg2, double jarg3, double jarg4, boolean jarg5);
  public final static native long new_ArActionAvoidFront__SWIG_1(String jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_ArActionAvoidFront__SWIG_2(String jarg1, double jarg2, double jarg3);
  public final static native long new_ArActionAvoidFront__SWIG_3(String jarg1, double jarg2);
  public final static native long new_ArActionAvoidFront__SWIG_4(String jarg1);
  public final static native long new_ArActionAvoidFront__SWIG_5();
  public final static native void delete_ArActionAvoidFront(long jarg1);
  public final static native long ArActionAvoidFront_fire(long jarg1, ArActionAvoidFront jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionAvoidFront_getDesired(long jarg1, ArActionAvoidFront jarg1_);
  public final static native long new_ArActionAvoidSide__SWIG_0(String jarg1, double jarg2, double jarg3);
  public final static native long new_ArActionAvoidSide__SWIG_1(String jarg1, double jarg2);
  public final static native long new_ArActionAvoidSide__SWIG_2(String jarg1);
  public final static native long new_ArActionAvoidSide__SWIG_3();
  public final static native void delete_ArActionAvoidSide(long jarg1);
  public final static native long ArActionAvoidSide_fire(long jarg1, ArActionAvoidSide jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionAvoidSide_getDesired(long jarg1, ArActionAvoidSide jarg1_);
  public final static native long new_ArActionBumpers__SWIG_0(String jarg1, double jarg2, int jarg3, int jarg4, boolean jarg5);
  public final static native long new_ArActionBumpers__SWIG_1(String jarg1, double jarg2, int jarg3, int jarg4);
  public final static native long new_ArActionBumpers__SWIG_2(String jarg1, double jarg2, int jarg3);
  public final static native long new_ArActionBumpers__SWIG_3(String jarg1, double jarg2);
  public final static native long new_ArActionBumpers__SWIG_4(String jarg1);
  public final static native long new_ArActionBumpers__SWIG_5();
  public final static native void delete_ArActionBumpers(long jarg1);
  public final static native long ArActionBumpers_fire(long jarg1, ArActionBumpers jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionBumpers_getDesired(long jarg1, ArActionBumpers jarg1_);
  public final static native double ArActionBumpers_findDegreesToTurn(long jarg1, ArActionBumpers jarg1_, int jarg2, int jarg3);
  public final static native void ArActionBumpers_activate(long jarg1, ArActionBumpers jarg1_);
  public final static native long new_ArActionColorFollow__SWIG_0(String jarg1, long jarg2, ArACTS_1_2 jarg2_, long jarg3, ArPTZ jarg3_, double jarg4, int jarg5, int jarg6);
  public final static native long new_ArActionColorFollow__SWIG_1(String jarg1, long jarg2, ArACTS_1_2 jarg2_, long jarg3, ArPTZ jarg3_, double jarg4, int jarg5);
  public final static native long new_ArActionColorFollow__SWIG_2(String jarg1, long jarg2, ArACTS_1_2 jarg2_, long jarg3, ArPTZ jarg3_, double jarg4);
  public final static native long new_ArActionColorFollow__SWIG_3(String jarg1, long jarg2, ArACTS_1_2 jarg2_, long jarg3, ArPTZ jarg3_);
  public final static native void delete_ArActionColorFollow(long jarg1);
  public final static native long ArActionColorFollow_fire(long jarg1, ArActionColorFollow jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native boolean ArActionColorFollow_setChannel(long jarg1, ArActionColorFollow jarg1_, int jarg2);
  public final static native void ArActionColorFollow_setCamera(long jarg1, ArActionColorFollow jarg1_, long jarg2, ArPTZ jarg2_);
  public final static native void ArActionColorFollow_setAcquire(long jarg1, ArActionColorFollow jarg1_, boolean jarg2);
  public final static native void ArActionColorFollow_stopMovement(long jarg1, ArActionColorFollow jarg1_);
  public final static native void ArActionColorFollow_startMovement(long jarg1, ArActionColorFollow jarg1_);
  public final static native int ArActionColorFollow_getChannel(long jarg1, ArActionColorFollow jarg1_);
  public final static native boolean ArActionColorFollow_getAcquire(long jarg1, ArActionColorFollow jarg1_);
  public final static native boolean ArActionColorFollow_getMovement(long jarg1, ArActionColorFollow jarg1_);
  public final static native boolean ArActionColorFollow_getBlob(long jarg1, ArActionColorFollow jarg1_);
  public final static native long ArActionColorFollow_getDesired(long jarg1, ArActionColorFollow jarg1_);
  public final static native long new_ArActionConstantVelocity__SWIG_0(String jarg1, double jarg2);
  public final static native long new_ArActionConstantVelocity__SWIG_1(String jarg1);
  public final static native long new_ArActionConstantVelocity__SWIG_2();
  public final static native void delete_ArActionConstantVelocity(long jarg1);
  public final static native long ArActionConstantVelocity_fire(long jarg1, ArActionConstantVelocity jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionConstantVelocity_getDesired(long jarg1, ArActionConstantVelocity jarg1_);
  public final static native long new_ArActionDeceleratingLimiter__SWIG_0(String jarg1, int jarg2);
  public final static native long new_ArActionDeceleratingLimiter__SWIG_1(String jarg1);
  public final static native long new_ArActionDeceleratingLimiter__SWIG_2();
  public final static native void delete_ArActionDeceleratingLimiter(long jarg1);
  public final static native long ArActionDeceleratingLimiter_fire(long jarg1, ArActionDeceleratingLimiter jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionDeceleratingLimiter_getDesired(long jarg1, ArActionDeceleratingLimiter jarg1_);
  public final static native void ArActionDeceleratingLimiter_setParameters__SWIG_0(long jarg1, ArActionDeceleratingLimiter jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, boolean jarg10, double jarg11);
  public final static native void ArActionDeceleratingLimiter_setParameters__SWIG_1(long jarg1, ArActionDeceleratingLimiter jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, boolean jarg10);
  public final static native void ArActionDeceleratingLimiter_setParameters__SWIG_2(long jarg1, ArActionDeceleratingLimiter jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9);
  public final static native void ArActionDeceleratingLimiter_setParameters__SWIG_3(long jarg1, ArActionDeceleratingLimiter jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native void ArActionDeceleratingLimiter_setParameters__SWIG_4(long jarg1, ArActionDeceleratingLimiter jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native void ArActionDeceleratingLimiter_setParameters__SWIG_5(long jarg1, ArActionDeceleratingLimiter jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native void ArActionDeceleratingLimiter_setParameters__SWIG_6(long jarg1, ArActionDeceleratingLimiter jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void ArActionDeceleratingLimiter_setParameters__SWIG_7(long jarg1, ArActionDeceleratingLimiter jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArActionDeceleratingLimiter_setParameters__SWIG_8(long jarg1, ArActionDeceleratingLimiter jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDeceleratingLimiter_setParameters__SWIG_9(long jarg1, ArActionDeceleratingLimiter jarg1_, double jarg2);
  public final static native void ArActionDeceleratingLimiter_setParameters__SWIG_10(long jarg1, ArActionDeceleratingLimiter jarg1_);
  public final static native int ArActionDeceleratingLimiter_getType(long jarg1, ArActionDeceleratingLimiter jarg1_);
  public final static native void ArActionDeceleratingLimiter_setType(long jarg1, ArActionDeceleratingLimiter jarg1_, int jarg2);
  public final static native void ArActionDeceleratingLimiter_addToConfig__SWIG_0(long jarg1, ArActionDeceleratingLimiter jarg1_, long jarg2, ArConfig jarg2_, String jarg3, String jarg4);
  public final static native void ArActionDeceleratingLimiter_addToConfig__SWIG_1(long jarg1, ArActionDeceleratingLimiter jarg1_, long jarg2, ArConfig jarg2_, String jarg3);
  public final static native boolean ArActionDeceleratingLimiter_getUseLocationDependentDevices(long jarg1, ArActionDeceleratingLimiter jarg1_);
  public final static native void ArActionDeceleratingLimiter_setUseLocationDependentDevices(long jarg1, ArActionDeceleratingLimiter jarg1_, boolean jarg2);
  public final static native void ArActionDeceleratingLimiter_setStopRotationToo(long jarg1, ArActionDeceleratingLimiter jarg1_, boolean jarg2);
  public final static native double ArActionDesiredChannel_NO_STRENGTH_get();
  public final static native double ArActionDesiredChannel_MIN_STRENGTH_get();
  public final static native double ArActionDesiredChannel_MAX_STRENGTH_get();
  public final static native long new_ArActionDesiredChannel();
  public final static native void delete_ArActionDesiredChannel(long jarg1);
  public final static native void ArActionDesiredChannel_setOverrideDoesLessThan(long jarg1, ArActionDesiredChannel jarg1_, boolean jarg2);
  public final static native void ArActionDesiredChannel_setDesired__SWIG_0(long jarg1, ArActionDesiredChannel jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesiredChannel_setDesired__SWIG_1(long jarg1, ArActionDesiredChannel jarg1_, double jarg2, double jarg3);
  public final static native double ArActionDesiredChannel_getDesired(long jarg1, ArActionDesiredChannel jarg1_);
  public final static native double ArActionDesiredChannel_getStrength(long jarg1, ArActionDesiredChannel jarg1_);
  public final static native double ArActionDesiredChannel_getAllowOverride(long jarg1, ArActionDesiredChannel jarg1_);
  public final static native void ArActionDesiredChannel_reset(long jarg1, ArActionDesiredChannel jarg1_);
  public final static native void ArActionDesiredChannel_merge(long jarg1, ArActionDesiredChannel jarg1_, long jarg2, ArActionDesiredChannel jarg2_);
  public final static native void ArActionDesiredChannel_startAverage(long jarg1, ArActionDesiredChannel jarg1_);
  public final static native void ArActionDesiredChannel_addAverage(long jarg1, ArActionDesiredChannel jarg1_, long jarg2, ArActionDesiredChannel jarg2_);
  public final static native void ArActionDesiredChannel_endAverage(long jarg1, ArActionDesiredChannel jarg1_);
  public final static native void ArActionDesiredChannel_checkLowerBound(long jarg1, ArActionDesiredChannel jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native void ArActionDesiredChannel_checkUpperBound(long jarg1, ArActionDesiredChannel jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native double ArActionDesired_NO_STRENGTH_get();
  public final static native double ArActionDesired_MIN_STRENGTH_get();
  public final static native double ArActionDesired_MAX_STRENGTH_get();
  public final static native long new_ArActionDesired();
  public final static native void delete_ArActionDesired(long jarg1);
  public final static native void ArActionDesired_setVel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setVel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setDeltaHeading__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setDeltaHeading__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setHeading__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setHeading__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setRotVel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setRotVel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setMaxVel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setMaxVel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setMaxVel__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setMaxNegVel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setMaxNegVel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setMaxNegVel__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setTransAccel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setTransAccel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setTransAccel__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setTransDecel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setTransDecel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setTransDecel__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setMaxRotVel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setMaxRotVel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setMaxRotVel__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setMaxRotVelPos__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setMaxRotVelPos__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setMaxRotVelPos__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setMaxRotVelNeg__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setMaxRotVelNeg__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setMaxRotVelNeg__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setRotAccel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setRotAccel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setRotAccel__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setRotDecel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setRotDecel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setRotDecel__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setLeftLatVel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setLeftLatVel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setRightLatVel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setRightLatVel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setMaxLeftLatVel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setMaxLeftLatVel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setMaxLeftLatVel__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setMaxRightLatVel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setMaxRightLatVel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setMaxRightLatVel__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setLatAccel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setLatAccel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setLatAccel__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_setLatDecel__SWIG_0(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionDesired_setLatDecel__SWIG_1(long jarg1, ArActionDesired jarg1_, double jarg2, double jarg3);
  public final static native void ArActionDesired_setLatDecel__SWIG_2(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_reset(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getVel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getVelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getHeading(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getHeadingStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getDeltaHeading(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getDeltaHeadingStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getRotVel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getRotVelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxVel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxVelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxVelSlowestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxNegVel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxNegVelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxNegVelSlowestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getTransAccel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getTransAccelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getTransAccelSlowestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getTransDecel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getTransDecelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getTransDecelFastestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxRotVel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxRotVelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxRotVelSlowestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxRotVelPos(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxRotVelPosStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxRotVelPosSlowestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxRotVelNeg(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxRotVelNegStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxRotVelNegSlowestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getRotAccel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getRotAccelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getRotAccelSlowestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getRotDecel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getRotDecelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getRotDecelFastestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getLatVel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getLatVelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxLeftLatVel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxLeftLatVelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxLeftLatVelSlowestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxRightLatVel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxRightLatVelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getMaxRightLatVelSlowestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getLatAccel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getLatAccelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getLatAccelSlowestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getLatDecel(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getLatDecelStrength(long jarg1, ArActionDesired jarg1_);
  public final static native double ArActionDesired_getLatDecelFastestUsed(long jarg1, ArActionDesired jarg1_);
  public final static native void ArActionDesired_merge(long jarg1, ArActionDesired jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native void ArActionDesired_startAverage(long jarg1, ArActionDesired jarg1_);
  public final static native void ArActionDesired_addAverage(long jarg1, ArActionDesired jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native void ArActionDesired_endAverage(long jarg1, ArActionDesired jarg1_);
  public final static native void ArActionDesired_accountForRobotHeading(long jarg1, ArActionDesired jarg1_, double jarg2);
  public final static native void ArActionDesired_log(long jarg1, ArActionDesired jarg1_);
  public final static native boolean ArActionDesired_isAnythingDesired(long jarg1, ArActionDesired jarg1_);
  public final static native void ArActionDesired_sanityCheck(long jarg1, ArActionDesired jarg1_, String jarg2);
  public final static native long new_ArActionDriveDistance__SWIG_0(String jarg1, double jarg2, double jarg3);
  public final static native long new_ArActionDriveDistance__SWIG_1(String jarg1, double jarg2);
  public final static native long new_ArActionDriveDistance__SWIG_2(String jarg1);
  public final static native long new_ArActionDriveDistance__SWIG_3();
  public final static native void delete_ArActionDriveDistance(long jarg1);
  public final static native boolean ArActionDriveDistance_haveAchievedDistance(long jarg1, ArActionDriveDistance jarg1_);
  public final static native void ArActionDriveDistance_cancelDistance(long jarg1, ArActionDriveDistance jarg1_);
  public final static native void ArActionDriveDistance_setDistance__SWIG_0(long jarg1, ArActionDriveDistance jarg1_, double jarg2, boolean jarg3);
  public final static native void ArActionDriveDistance_setDistance__SWIG_1(long jarg1, ArActionDriveDistance jarg1_, double jarg2);
  public final static native boolean ArActionDriveDistance_usingEncoders(long jarg1, ArActionDriveDistance jarg1_);
  public final static native void ArActionDriveDistance_setSpeed__SWIG_0(long jarg1, ArActionDriveDistance jarg1_, double jarg2);
  public final static native void ArActionDriveDistance_setSpeed__SWIG_1(long jarg1, ArActionDriveDistance jarg1_);
  public final static native double ArActionDriveDistance_getSpeed(long jarg1, ArActionDriveDistance jarg1_);
  public final static native void ArActionDriveDistance_setDeceleration__SWIG_0(long jarg1, ArActionDriveDistance jarg1_, double jarg2);
  public final static native void ArActionDriveDistance_setDeceleration__SWIG_1(long jarg1, ArActionDriveDistance jarg1_);
  public final static native double ArActionDriveDistance_getDeceleration(long jarg1, ArActionDriveDistance jarg1_);
  public final static native void ArActionDriveDistance_setPrinting(long jarg1, ArActionDriveDistance jarg1_, boolean jarg2);
  public final static native long ArActionDriveDistance_fire(long jarg1, ArActionDriveDistance jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionDriveDistance_getDesired(long jarg1, ArActionDriveDistance jarg1_);
  public final static native long new_ArActionGoto__SWIG_0(String jarg1, long jarg2, ArPose jarg2_, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_ArActionGoto__SWIG_1(String jarg1, long jarg2, ArPose jarg2_, double jarg3, double jarg4, double jarg5);
  public final static native long new_ArActionGoto__SWIG_2(String jarg1, long jarg2, ArPose jarg2_, double jarg3, double jarg4);
  public final static native long new_ArActionGoto__SWIG_3(String jarg1, long jarg2, ArPose jarg2_, double jarg3);
  public final static native long new_ArActionGoto__SWIG_4(String jarg1, long jarg2, ArPose jarg2_);
  public final static native long new_ArActionGoto__SWIG_5(String jarg1);
  public final static native long new_ArActionGoto__SWIG_6();
  public final static native void delete_ArActionGoto(long jarg1);
  public final static native boolean ArActionGoto_haveAchievedGoal(long jarg1, ArActionGoto jarg1_);
  public final static native void ArActionGoto_cancelGoal(long jarg1, ArActionGoto jarg1_);
  public final static native void ArActionGoto_setGoal(long jarg1, ArActionGoto jarg1_, long jarg2, ArPose jarg2_);
  public final static native long ArActionGoto_getGoal(long jarg1, ArActionGoto jarg1_);
  public final static native void ArActionGoto_setCloseDist(long jarg1, ArActionGoto jarg1_, double jarg2);
  public final static native double ArActionGoto_getCloseDist(long jarg1, ArActionGoto jarg1_);
  public final static native void ArActionGoto_setSpeed(long jarg1, ArActionGoto jarg1_, double jarg2);
  public final static native double ArActionGoto_getSpeed(long jarg1, ArActionGoto jarg1_);
  public final static native long ArActionGoto_fire(long jarg1, ArActionGoto jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionGoto_getDesired(long jarg1, ArActionGoto jarg1_);
  public final static native long new_ArActionGotoStraight__SWIG_0(String jarg1, double jarg2);
  public final static native long new_ArActionGotoStraight__SWIG_1(String jarg1);
  public final static native long new_ArActionGotoStraight__SWIG_2();
  public final static native void delete_ArActionGotoStraight(long jarg1);
  public final static native boolean ArActionGotoStraight_haveAchievedGoal(long jarg1, ArActionGotoStraight jarg1_);
  public final static native void ArActionGotoStraight_cancelGoal(long jarg1, ArActionGotoStraight jarg1_);
  public final static native void ArActionGotoStraight_setGoal__SWIG_0(long jarg1, ArActionGotoStraight jarg1_, long jarg2, ArPose jarg2_, boolean jarg3, boolean jarg4);
  public final static native void ArActionGotoStraight_setGoal__SWIG_1(long jarg1, ArActionGotoStraight jarg1_, long jarg2, ArPose jarg2_, boolean jarg3);
  public final static native void ArActionGotoStraight_setGoal__SWIG_2(long jarg1, ArActionGotoStraight jarg1_, long jarg2, ArPose jarg2_);
  public final static native void ArActionGotoStraight_setGoalRel__SWIG_0(long jarg1, ArActionGotoStraight jarg1_, double jarg2, double jarg3, boolean jarg4, boolean jarg5);
  public final static native void ArActionGotoStraight_setGoalRel__SWIG_1(long jarg1, ArActionGotoStraight jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionGotoStraight_setGoalRel__SWIG_2(long jarg1, ArActionGotoStraight jarg1_, double jarg2, double jarg3);
  public final static native long ArActionGotoStraight_getGoal(long jarg1, ArActionGotoStraight jarg1_);
  public final static native boolean ArActionGotoStraight_usingEncoderGoal(long jarg1, ArActionGotoStraight jarg1_);
  public final static native void ArActionGotoStraight_setEncoderGoal__SWIG_0(long jarg1, ArActionGotoStraight jarg1_, long jarg2, ArPose jarg2_, boolean jarg3, boolean jarg4);
  public final static native void ArActionGotoStraight_setEncoderGoal__SWIG_1(long jarg1, ArActionGotoStraight jarg1_, long jarg2, ArPose jarg2_, boolean jarg3);
  public final static native void ArActionGotoStraight_setEncoderGoal__SWIG_2(long jarg1, ArActionGotoStraight jarg1_, long jarg2, ArPose jarg2_);
  public final static native void ArActionGotoStraight_setEncoderGoalRel__SWIG_0(long jarg1, ArActionGotoStraight jarg1_, double jarg2, double jarg3, boolean jarg4, boolean jarg5);
  public final static native void ArActionGotoStraight_setEncoderGoalRel__SWIG_1(long jarg1, ArActionGotoStraight jarg1_, double jarg2, double jarg3, boolean jarg4);
  public final static native void ArActionGotoStraight_setEncoderGoalRel__SWIG_2(long jarg1, ArActionGotoStraight jarg1_, double jarg2, double jarg3);
  public final static native long ArActionGotoStraight_getEncoderGoal(long jarg1, ArActionGotoStraight jarg1_);
  public final static native void ArActionGotoStraight_setSpeed(long jarg1, ArActionGotoStraight jarg1_, double jarg2);
  public final static native double ArActionGotoStraight_getSpeed(long jarg1, ArActionGotoStraight jarg1_);
  public final static native void ArActionGotoStraight_setCloseDist__SWIG_0(long jarg1, ArActionGotoStraight jarg1_, double jarg2);
  public final static native void ArActionGotoStraight_setCloseDist__SWIG_1(long jarg1, ArActionGotoStraight jarg1_);
  public final static native double ArActionGotoStraight_getCloseDist(long jarg1, ArActionGotoStraight jarg1_);
  public final static native boolean ArActionGotoStraight_getBacking(long jarg1, ArActionGotoStraight jarg1_);
  public final static native long ArActionGotoStraight_fire(long jarg1, ArActionGotoStraight jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionGotoStraight_getDesired(long jarg1, ArActionGotoStraight jarg1_);
  public final static native long new_ArActionGroup(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArActionGroup(long jarg1);
  public final static native void ArActionGroup_addAction(long jarg1, ArActionGroup jarg1_, long jarg2, ArAction jarg2_, int jarg3);
  public final static native void ArActionGroup_remAction(long jarg1, ArActionGroup jarg1_, long jarg2, ArAction jarg2_);
  public final static native void ArActionGroup_activate(long jarg1, ArActionGroup jarg1_);
  public final static native void ArActionGroup_activateExclusive(long jarg1, ArActionGroup jarg1_);
  public final static native void ArActionGroup_deactivate(long jarg1, ArActionGroup jarg1_);
  public final static native void ArActionGroup_removeActions(long jarg1, ArActionGroup jarg1_);
  public final static native void ArActionGroup_deleteActions(long jarg1, ArActionGroup jarg1_);
  public final static native long ArActionGroup_getActionList(long jarg1, ArActionGroup jarg1_);
  public final static native long new_ArActionGroupInput(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArActionGroupInput(long jarg1);
  public final static native void ArActionGroupInput_setVel(long jarg1, ArActionGroupInput jarg1_, double jarg2);
  public final static native void ArActionGroupInput_setRotVel(long jarg1, ArActionGroupInput jarg1_, double jarg2);
  public final static native void ArActionGroupInput_setHeading(long jarg1, ArActionGroupInput jarg1_, double jarg2);
  public final static native void ArActionGroupInput_deltaHeadingFromCurrent(long jarg1, ArActionGroupInput jarg1_, double jarg2);
  public final static native void ArActionGroupInput_clear(long jarg1, ArActionGroupInput jarg1_);
  public final static native long ArActionGroupInput_getActionInput(long jarg1, ArActionGroupInput jarg1_);
  public final static native long new_ArActionGroupStop(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArActionGroupStop(long jarg1);
  public final static native long ArActionGroupStop_getActionStop(long jarg1, ArActionGroupStop jarg1_);
  public final static native void ArActionGroupStop_myActionStop_set(long jarg1, ArActionGroupStop jarg1_, long jarg2, ArActionStop jarg2_);
  public final static native long ArActionGroupStop_myActionStop_get(long jarg1, ArActionGroupStop jarg1_);
  public final static native long new_ArActionGroupTeleop(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArActionGroupTeleop(long jarg1);
  public final static native void ArActionGroupTeleop_setThrottleParams(long jarg1, ArActionGroupTeleop jarg1_, int jarg2, int jarg3);
  public final static native long new_ArActionGroupUnguardedTeleop(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArActionGroupUnguardedTeleop(long jarg1);
  public final static native void ArActionGroupUnguardedTeleop_setThrottleParams(long jarg1, ArActionGroupUnguardedTeleop jarg1_, int jarg2, int jarg3);
  public final static native long new_ArActionGroupWander__SWIG_0(long jarg1, ArRobot jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native long new_ArActionGroupWander__SWIG_1(long jarg1, ArRobot jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native long new_ArActionGroupWander__SWIG_2(long jarg1, ArRobot jarg1_, int jarg2, int jarg3);
  public final static native long new_ArActionGroupWander__SWIG_3(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long new_ArActionGroupWander__SWIG_4(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArActionGroupWander(long jarg1);
  public final static native long new_ArActionGroupColorFollow(long jarg1, ArRobot jarg1_, long jarg2, ArACTS_1_2 jarg2_, long jarg3, ArPTZ jarg3_);
  public final static native void delete_ArActionGroupColorFollow(long jarg1);
  public final static native void ArActionGroupColorFollow_setCamera(long jarg1, ArActionGroupColorFollow jarg1_, long jarg2, ArPTZ jarg2_);
  public final static native void ArActionGroupColorFollow_setChannel(long jarg1, ArActionGroupColorFollow jarg1_, int jarg2);
  public final static native void ArActionGroupColorFollow_startMovement(long jarg1, ArActionGroupColorFollow jarg1_);
  public final static native void ArActionGroupColorFollow_stopMovement(long jarg1, ArActionGroupColorFollow jarg1_);
  public final static native void ArActionGroupColorFollow_setAcquire(long jarg1, ArActionGroupColorFollow jarg1_, boolean jarg2);
  public final static native int ArActionGroupColorFollow_getChannel(long jarg1, ArActionGroupColorFollow jarg1_);
  public final static native boolean ArActionGroupColorFollow_getAcquire(long jarg1, ArActionGroupColorFollow jarg1_);
  public final static native boolean ArActionGroupColorFollow_getMovement(long jarg1, ArActionGroupColorFollow jarg1_);
  public final static native boolean ArActionGroupColorFollow_getBlob(long jarg1, ArActionGroupColorFollow jarg1_);
  public final static native long new_ArActionGroupRatioDrive(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArActionGroupRatioDrive(long jarg1);
  public final static native long ArActionGroupRatioDrive_getActionRatioInput(long jarg1, ArActionGroupRatioDrive jarg1_);
  public final static native void ArActionGroupRatioDrive_addToConfig(long jarg1, ArActionGroupRatioDrive jarg1_, long jarg2, ArConfig jarg2_, String jarg3);
  public final static native long new_ArActionGroupRatioDriveUnsafe(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArActionGroupRatioDriveUnsafe(long jarg1);
  public final static native long ArActionGroupRatioDriveUnsafe_getActionRatioInput(long jarg1, ArActionGroupRatioDriveUnsafe jarg1_);
  public final static native void ArActionGroupRatioDriveUnsafe_addToConfig(long jarg1, ArActionGroupRatioDriveUnsafe jarg1_, long jarg2, ArConfig jarg2_, String jarg3);
  public final static native long new_ArActionIRs__SWIG_0(String jarg1, double jarg2, int jarg3, int jarg4, boolean jarg5);
  public final static native long new_ArActionIRs__SWIG_1(String jarg1, double jarg2, int jarg3, int jarg4);
  public final static native long new_ArActionIRs__SWIG_2(String jarg1, double jarg2, int jarg3);
  public final static native long new_ArActionIRs__SWIG_3(String jarg1, double jarg2);
  public final static native long new_ArActionIRs__SWIG_4(String jarg1);
  public final static native long new_ArActionIRs__SWIG_5();
  public final static native void delete_ArActionIRs(long jarg1);
  public final static native long ArActionIRs_fire(long jarg1, ArActionIRs jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native void ArActionIRs_setRobot(long jarg1, ArActionIRs jarg1_, long jarg2, ArRobot jarg2_);
  public final static native long ArActionIRs_getDesired(long jarg1, ArActionIRs jarg1_);
  public final static native long new_ArActionInput__SWIG_0(String jarg1);
  public final static native long new_ArActionInput__SWIG_1();
  public final static native void delete_ArActionInput(long jarg1);
  public final static native void ArActionInput_setVel(long jarg1, ArActionInput jarg1_, double jarg2);
  public final static native void ArActionInput_deltaHeadingFromCurrent(long jarg1, ArActionInput jarg1_, double jarg2);
  public final static native void ArActionInput_setRotVel(long jarg1, ArActionInput jarg1_, double jarg2);
  public final static native void ArActionInput_setHeading(long jarg1, ArActionInput jarg1_, double jarg2);
  public final static native void ArActionInput_clear(long jarg1, ArActionInput jarg1_);
  public final static native long ArActionInput_fire(long jarg1, ArActionInput jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionInput_getDesired(long jarg1, ArActionInput jarg1_);
  public final static native long new_ArActionJoydrive__SWIG_0(String jarg1, double jarg2, double jarg3, boolean jarg4, boolean jarg5);
  public final static native long new_ArActionJoydrive__SWIG_1(String jarg1, double jarg2, double jarg3, boolean jarg4);
  public final static native long new_ArActionJoydrive__SWIG_2(String jarg1, double jarg2, double jarg3);
  public final static native long new_ArActionJoydrive__SWIG_3(String jarg1, double jarg2);
  public final static native long new_ArActionJoydrive__SWIG_4(String jarg1);
  public final static native long new_ArActionJoydrive__SWIG_5();
  public final static native void delete_ArActionJoydrive(long jarg1);
  public final static native long ArActionJoydrive_fire(long jarg1, ArActionJoydrive jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native boolean ArActionJoydrive_joystickInited(long jarg1, ArActionJoydrive jarg1_);
  public final static native void ArActionJoydrive_setSpeeds(long jarg1, ArActionJoydrive jarg1_, double jarg2, double jarg3);
  public final static native void ArActionJoydrive_setStopIfNoButtonPressed(long jarg1, ArActionJoydrive jarg1_, boolean jarg2);
  public final static native boolean ArActionJoydrive_getStopIfNoButtonPressed(long jarg1, ArActionJoydrive jarg1_);
  public final static native void ArActionJoydrive_setThrottleParams(long jarg1, ArActionJoydrive jarg1_, double jarg2, double jarg3);
  public final static native void ArActionJoydrive_setUseOSCal(long jarg1, ArActionJoydrive jarg1_, boolean jarg2);
  public final static native boolean ArActionJoydrive_getUseOSCal(long jarg1, ArActionJoydrive jarg1_);
  public final static native long ArActionJoydrive_getJoyHandler(long jarg1, ArActionJoydrive jarg1_);
  public final static native long ArActionJoydrive_getDesired(long jarg1, ArActionJoydrive jarg1_);
  public final static native long new_ArActionKeydrive__SWIG_0(String jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_ArActionKeydrive__SWIG_1(String jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_ArActionKeydrive__SWIG_2(String jarg1, double jarg2, double jarg3);
  public final static native long new_ArActionKeydrive__SWIG_3(String jarg1, double jarg2);
  public final static native long new_ArActionKeydrive__SWIG_4(String jarg1);
  public final static native long new_ArActionKeydrive__SWIG_5();
  public final static native void delete_ArActionKeydrive(long jarg1);
  public final static native long ArActionKeydrive_fire(long jarg1, ArActionKeydrive jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native void ArActionKeydrive_setSpeeds(long jarg1, ArActionKeydrive jarg1_, double jarg2, double jarg3);
  public final static native void ArActionKeydrive_setIncrements(long jarg1, ArActionKeydrive jarg1_, double jarg2, double jarg3);
  public final static native long ArActionKeydrive_getDesired(long jarg1, ArActionKeydrive jarg1_);
  public final static native void ArActionKeydrive_setRobot(long jarg1, ArActionKeydrive jarg1_, long jarg2, ArRobot jarg2_);
  public final static native void ArActionKeydrive_activate(long jarg1, ArActionKeydrive jarg1_);
  public final static native void ArActionKeydrive_deactivate(long jarg1, ArActionKeydrive jarg1_);
  public final static native void ArActionKeydrive_takeKeys(long jarg1, ArActionKeydrive jarg1_);
  public final static native void ArActionKeydrive_giveUpKeys(long jarg1, ArActionKeydrive jarg1_);
  public final static native void ArActionKeydrive_up(long jarg1, ArActionKeydrive jarg1_);
  public final static native void ArActionKeydrive_down(long jarg1, ArActionKeydrive jarg1_);
  public final static native void ArActionKeydrive_left(long jarg1, ArActionKeydrive jarg1_);
  public final static native void ArActionKeydrive_right(long jarg1, ArActionKeydrive jarg1_);
  public final static native void ArActionKeydrive_space(long jarg1, ArActionKeydrive jarg1_);
  public final static native long new_ArActionLimiterBackwards__SWIG_0(String jarg1, double jarg2, double jarg3, double jarg4, double jarg5, boolean jarg6);
  public final static native long new_ArActionLimiterBackwards__SWIG_1(String jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_ArActionLimiterBackwards__SWIG_2(String jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_ArActionLimiterBackwards__SWIG_3(String jarg1, double jarg2, double jarg3);
  public final static native long new_ArActionLimiterBackwards__SWIG_4(String jarg1, double jarg2);
  public final static native long new_ArActionLimiterBackwards__SWIG_5(String jarg1);
  public final static native long new_ArActionLimiterBackwards__SWIG_6();
  public final static native void delete_ArActionLimiterBackwards(long jarg1);
  public final static native long ArActionLimiterBackwards_fire(long jarg1, ArActionLimiterBackwards jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionLimiterBackwards_getDesired(long jarg1, ArActionLimiterBackwards jarg1_);
  public final static native long new_ArActionLimiterForwards__SWIG_0(String jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_ArActionLimiterForwards__SWIG_1(String jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_ArActionLimiterForwards__SWIG_2(String jarg1, double jarg2, double jarg3);
  public final static native long new_ArActionLimiterForwards__SWIG_3(String jarg1, double jarg2);
  public final static native long new_ArActionLimiterForwards__SWIG_4(String jarg1);
  public final static native long new_ArActionLimiterForwards__SWIG_5();
  public final static native void delete_ArActionLimiterForwards(long jarg1);
  public final static native long ArActionLimiterForwards_fire(long jarg1, ArActionLimiterForwards jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionLimiterForwards_getDesired(long jarg1, ArActionLimiterForwards jarg1_);
  public final static native void ArActionLimiterForwards_setParameters__SWIG_0(long jarg1, ArActionLimiterForwards jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void ArActionLimiterForwards_setParameters__SWIG_1(long jarg1, ArActionLimiterForwards jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArActionLimiterForwards_setParameters__SWIG_2(long jarg1, ArActionLimiterForwards jarg1_, double jarg2, double jarg3);
  public final static native void ArActionLimiterForwards_setParameters__SWIG_3(long jarg1, ArActionLimiterForwards jarg1_, double jarg2);
  public final static native void ArActionLimiterForwards_setParameters__SWIG_4(long jarg1, ArActionLimiterForwards jarg1_);
  public final static native long new_ArActionLimiterTableSensor__SWIG_0(String jarg1);
  public final static native long new_ArActionLimiterTableSensor__SWIG_1();
  public final static native void delete_ArActionLimiterTableSensor(long jarg1);
  public final static native long ArActionLimiterTableSensor_fire(long jarg1, ArActionLimiterTableSensor jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionLimiterTableSensor_getDesired(long jarg1, ArActionLimiterTableSensor jarg1_);
  public final static native long new_ArActionMovementParameters__SWIG_0(String jarg1, boolean jarg2, boolean jarg3);
  public final static native long new_ArActionMovementParameters__SWIG_1(String jarg1, boolean jarg2);
  public final static native long new_ArActionMovementParameters__SWIG_2(String jarg1);
  public final static native long new_ArActionMovementParameters__SWIG_3();
  public final static native void delete_ArActionMovementParameters(long jarg1);
  public final static native long ArActionMovementParameters_fire(long jarg1, ArActionMovementParameters jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionMovementParameters_getDesired(long jarg1, ArActionMovementParameters jarg1_);
  public final static native boolean ArActionMovementParameters_isEnabled(long jarg1, ArActionMovementParameters jarg1_);
  public final static native void ArActionMovementParameters_enable(long jarg1, ArActionMovementParameters jarg1_);
  public final static native void ArActionMovementParameters_enableOnceFromSector(long jarg1, ArActionMovementParameters jarg1_, long jarg2, ArMapObject jarg2_);
  public final static native void ArActionMovementParameters_disable(long jarg1, ArActionMovementParameters jarg1_);
  public final static native void ArActionMovementParameters_setParameters__SWIG_0(long jarg1, ArActionMovementParameters jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11);
  public final static native void ArActionMovementParameters_setParameters__SWIG_1(long jarg1, ArActionMovementParameters jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10);
  public final static native void ArActionMovementParameters_setParameters__SWIG_2(long jarg1, ArActionMovementParameters jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9);
  public final static native void ArActionMovementParameters_setParameters__SWIG_3(long jarg1, ArActionMovementParameters jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native void ArActionMovementParameters_setParameters__SWIG_4(long jarg1, ArActionMovementParameters jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native void ArActionMovementParameters_setParameters__SWIG_5(long jarg1, ArActionMovementParameters jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native void ArActionMovementParameters_setParameters__SWIG_6(long jarg1, ArActionMovementParameters jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void ArActionMovementParameters_setParameters__SWIG_7(long jarg1, ArActionMovementParameters jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArActionMovementParameters_setParameters__SWIG_8(long jarg1, ArActionMovementParameters jarg1_, double jarg2, double jarg3);
  public final static native void ArActionMovementParameters_setParameters__SWIG_9(long jarg1, ArActionMovementParameters jarg1_, double jarg2);
  public final static native void ArActionMovementParameters_setParameters__SWIG_10(long jarg1, ArActionMovementParameters jarg1_);
  public final static native void ArActionMovementParameters_addToConfig__SWIG_0(long jarg1, ArActionMovementParameters jarg1_, long jarg2, ArConfig jarg2_, String jarg3, String jarg4);
  public final static native void ArActionMovementParameters_addToConfig__SWIG_1(long jarg1, ArActionMovementParameters jarg1_, long jarg2, ArConfig jarg2_, String jarg3);
  public final static native long new_ArActionRatioInput__SWIG_0(String jarg1);
  public final static native long new_ArActionRatioInput__SWIG_1();
  public final static native void delete_ArActionRatioInput(long jarg1);
  public final static native void ArActionRatioInput_setRatios__SWIG_0(long jarg1, ArActionRatioInput jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void ArActionRatioInput_setRatios__SWIG_1(long jarg1, ArActionRatioInput jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArActionRatioInput_setTransRatio(long jarg1, ArActionRatioInput jarg1_, double jarg2);
  public final static native void ArActionRatioInput_setRotRatio(long jarg1, ArActionRatioInput jarg1_, double jarg2);
  public final static native void ArActionRatioInput_setLatRatio(long jarg1, ArActionRatioInput jarg1_, double jarg2);
  public final static native void ArActionRatioInput_setThrottleRatio(long jarg1, ArActionRatioInput jarg1_, double jarg2);
  public final static native double ArActionRatioInput_getTransRatio(long jarg1, ArActionRatioInput jarg1_);
  public final static native double ArActionRatioInput_getRotRatio(long jarg1, ArActionRatioInput jarg1_);
  public final static native double ArActionRatioInput_getThrottleRatio(long jarg1, ArActionRatioInput jarg1_);
  public final static native void ArActionRatioInput_addFireCallback(long jarg1, ArActionRatioInput jarg1_, int jarg2, long jarg3, ArFunctor jarg3_);
  public final static native void ArActionRatioInput_remFireCallback(long jarg1, ArActionRatioInput jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArActionRatioInput_addActivateCallback__SWIG_0(long jarg1, ArActionRatioInput jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArActionRatioInput_addActivateCallback__SWIG_1(long jarg1, ArActionRatioInput jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArActionRatioInput_remActivateCallback(long jarg1, ArActionRatioInput jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArActionRatioInput_addDeactivateCallback__SWIG_0(long jarg1, ArActionRatioInput jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArActionRatioInput_addDeactivateCallback__SWIG_1(long jarg1, ArActionRatioInput jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArActionRatioInput_remDeactivateCallback(long jarg1, ArActionRatioInput jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArActionRatioInput_setParameters__SWIG_0(long jarg1, ArActionRatioInput jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9);
  public final static native void ArActionRatioInput_setParameters__SWIG_1(long jarg1, ArActionRatioInput jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native void ArActionRatioInput_setParameters__SWIG_2(long jarg1, ArActionRatioInput jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native void ArActionRatioInput_setParameters__SWIG_3(long jarg1, ArActionRatioInput jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native void ArActionRatioInput_addToConfig(long jarg1, ArActionRatioInput jarg1_, long jarg2, ArConfig jarg2_, String jarg3);
  public final static native long ArActionRatioInput_fire(long jarg1, ArActionRatioInput jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionRatioInput_getDesired(long jarg1, ArActionRatioInput jarg1_);
  public final static native void ArActionRatioInput_activate(long jarg1, ArActionRatioInput jarg1_);
  public final static native void ArActionRatioInput_deactivate(long jarg1, ArActionRatioInput jarg1_);
  public final static native long new_ArActionRobotJoydrive__SWIG_0(String jarg1, boolean jarg2);
  public final static native long new_ArActionRobotJoydrive__SWIG_1(String jarg1);
  public final static native long new_ArActionRobotJoydrive__SWIG_2();
  public final static native void delete_ArActionRobotJoydrive(long jarg1);
  public final static native long ArActionRobotJoydrive_fire(long jarg1, ArActionRobotJoydrive jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionRobotJoydrive_getDesired(long jarg1, ArActionRobotJoydrive jarg1_);
  public final static native void ArActionRobotJoydrive_setRobot(long jarg1, ArActionRobotJoydrive jarg1_, long jarg2, ArRobot jarg2_);
  public final static native long new_ArActionStallRecover__SWIG_0(String jarg1, double jarg2, int jarg3, double jarg4, double jarg5, boolean jarg6);
  public final static native long new_ArActionStallRecover__SWIG_1(String jarg1, double jarg2, int jarg3, double jarg4, double jarg5);
  public final static native long new_ArActionStallRecover__SWIG_2(String jarg1, double jarg2, int jarg3, double jarg4);
  public final static native long new_ArActionStallRecover__SWIG_3(String jarg1, double jarg2, int jarg3);
  public final static native long new_ArActionStallRecover__SWIG_4(String jarg1, double jarg2);
  public final static native long new_ArActionStallRecover__SWIG_5(String jarg1);
  public final static native long new_ArActionStallRecover__SWIG_6();
  public final static native void delete_ArActionStallRecover(long jarg1);
  public final static native long ArActionStallRecover_fire(long jarg1, ArActionStallRecover jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionStallRecover_getDesired(long jarg1, ArActionStallRecover jarg1_);
  public final static native void ArActionStallRecover_addToConfig__SWIG_0(long jarg1, ArActionStallRecover jarg1_, long jarg2, ArConfig jarg2_, String jarg3, int jarg4);
  public final static native void ArActionStallRecover_addToConfig__SWIG_1(long jarg1, ArActionStallRecover jarg1_, long jarg2, ArConfig jarg2_, String jarg3);
  public final static native void ArActionStallRecover_activate(long jarg1, ArActionStallRecover jarg1_);
  public final static native long new_ArActionStop__SWIG_0(String jarg1);
  public final static native long new_ArActionStop__SWIG_1();
  public final static native void delete_ArActionStop(long jarg1);
  public final static native long ArActionStop_fire(long jarg1, ArActionStop jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionStop_getDesired(long jarg1, ArActionStop jarg1_);
  public final static native long new_ArActionTriangleDriveTo__SWIG_0(String jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_ArActionTriangleDriveTo__SWIG_1(String jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_ArActionTriangleDriveTo__SWIG_2(String jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_ArActionTriangleDriveTo__SWIG_3(String jarg1, double jarg2, double jarg3);
  public final static native long new_ArActionTriangleDriveTo__SWIG_4(String jarg1, double jarg2);
  public final static native long new_ArActionTriangleDriveTo__SWIG_5(String jarg1);
  public final static native long new_ArActionTriangleDriveTo__SWIG_6();
  public final static native void delete_ArActionTriangleDriveTo(long jarg1);
  public final static native void ArActionTriangleDriveTo_setAcquire__SWIG_0(long jarg1, ArActionTriangleDriveTo jarg1_, boolean jarg2);
  public final static native void ArActionTriangleDriveTo_setAcquire__SWIG_1(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native boolean ArActionTriangleDriveTo_getAcquire(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_setFinalDistFromVertex(long jarg1, ArActionTriangleDriveTo jarg1_, double jarg2);
  public final static native double ArActionTriangleDriveTo_getFinalDistFromVertex(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_setTriangleParams__SWIG_0(long jarg1, ArActionTriangleDriveTo jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArActionTriangleDriveTo_setTriangleParams__SWIG_1(long jarg1, ArActionTriangleDriveTo jarg1_, double jarg2, double jarg3);
  public final static native void ArActionTriangleDriveTo_setTriangleParams__SWIG_2(long jarg1, ArActionTriangleDriveTo jarg1_, double jarg2);
  public final static native void ArActionTriangleDriveTo_setTriangleParams__SWIG_3(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_setParameters__SWIG_0(long jarg1, ArActionTriangleDriveTo jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native void ArActionTriangleDriveTo_setParameters__SWIG_1(long jarg1, ArActionTriangleDriveTo jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void ArActionTriangleDriveTo_setParameters__SWIG_2(long jarg1, ArActionTriangleDriveTo jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArActionTriangleDriveTo_setParameters__SWIG_3(long jarg1, ArActionTriangleDriveTo jarg1_, double jarg2, double jarg3);
  public final static native void ArActionTriangleDriveTo_setParameters__SWIG_4(long jarg1, ArActionTriangleDriveTo jarg1_, double jarg2);
  public final static native void ArActionTriangleDriveTo_setParameters__SWIG_5(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native boolean ArActionTriangleDriveTo_getAdjustVertex(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_setAdjustVertex(long jarg1, ArActionTriangleDriveTo jarg1_, boolean jarg2);
  public final static native void ArActionTriangleDriveTo_setVertexOffset(long jarg1, ArActionTriangleDriveTo jarg1_, int jarg2, int jarg3, double jarg4);
  public final static native void ArActionTriangleDriveTo_setUseLegacyVertexOffset(long jarg1, ArActionTriangleDriveTo jarg1_, boolean jarg2);
  public final static native boolean ArActionTriangleDriveTo_getUseLegacyVertexOffset(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native boolean ArActionTriangleDriveTo_getGotoVertex(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_setGotoVertex(long jarg1, ArActionTriangleDriveTo jarg1_, boolean jarg2);
  public final static native void ArActionTriangleDriveTo_setIgnoreTriangleDist__SWIG_0(long jarg1, ArActionTriangleDriveTo jarg1_, double jarg2, boolean jarg3);
  public final static native void ArActionTriangleDriveTo_setIgnoreTriangleDist__SWIG_1(long jarg1, ArActionTriangleDriveTo jarg1_, double jarg2);
  public final static native void ArActionTriangleDriveTo_setIgnoreTriangleDist__SWIG_2(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native double ArActionTriangleDriveTo_getIgnoreTriangleDist(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native boolean ArActionTriangleDriveTo_getUseIgnoreInGotoVertexMode(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_setVertexUnseenStopMSecs__SWIG_0(long jarg1, ArActionTriangleDriveTo jarg1_, int jarg2);
  public final static native void ArActionTriangleDriveTo_setVertexUnseenStopMSecs__SWIG_1(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native int ArActionTriangleDriveTo_getVertexUnseenStopMSecs(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_setMaxDistBetweenLinePoints__SWIG_0(long jarg1, ArActionTriangleDriveTo jarg1_, int jarg2);
  public final static native void ArActionTriangleDriveTo_setMaxDistBetweenLinePoints__SWIG_1(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_setMaxLateralDist__SWIG_0(long jarg1, ArActionTriangleDriveTo jarg1_, int jarg2);
  public final static native void ArActionTriangleDriveTo_setMaxLateralDist__SWIG_1(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_setMaxAngleMisalignment__SWIG_0(long jarg1, ArActionTriangleDriveTo jarg1_, int jarg2);
  public final static native void ArActionTriangleDriveTo_setMaxAngleMisalignment__SWIG_1(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native int ArActionTriangleDriveTo_getState(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native boolean ArActionTriangleDriveTo_getVertexSeen(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_setLineFinder(long jarg1, ArActionTriangleDriveTo jarg1_, long jarg2, ArLineFinder jarg2_);
  public final static native long ArActionTriangleDriveTo_getLineFinder(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_setLogging__SWIG_0(long jarg1, ArActionTriangleDriveTo jarg1_, boolean jarg2);
  public final static native boolean ArActionTriangleDriveTo_setLogging__SWIG_1(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_activate(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_deactivate(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native void ArActionTriangleDriveTo_setRobot(long jarg1, ArActionTriangleDriveTo jarg1_, long jarg2, ArRobot jarg2_);
  public final static native long ArActionTriangleDriveTo_fire(long jarg1, ArActionTriangleDriveTo jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionTriangleDriveTo_getDesired(long jarg1, ArActionTriangleDriveTo jarg1_);
  public final static native long new_ArActionTurn__SWIG_0(String jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_ArActionTurn__SWIG_1(String jarg1, double jarg2, double jarg3);
  public final static native long new_ArActionTurn__SWIG_2(String jarg1, double jarg2);
  public final static native long new_ArActionTurn__SWIG_3(String jarg1);
  public final static native long new_ArActionTurn__SWIG_4();
  public final static native void delete_ArActionTurn(long jarg1);
  public final static native long ArActionTurn_fire(long jarg1, ArActionTurn jarg1_, long jarg2, ArActionDesired jarg2_);
  public final static native long ArActionTurn_getDesired(long jarg1, ArActionTurn jarg1_);
  public final static native long new_ArAnalogGyro(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArAnalogGyro(long jarg1);
  public final static native boolean ArAnalogGyro_isActive(long jarg1, ArAnalogGyro jarg1_);
  public final static native void ArAnalogGyro_activate(long jarg1, ArAnalogGyro jarg1_);
  public final static native void ArAnalogGyro_deactivate(long jarg1, ArAnalogGyro jarg1_);
  public final static native boolean ArAnalogGyro_hasGyroOnlyMode(long jarg1, ArAnalogGyro jarg1_);
  public final static native boolean ArAnalogGyro_isGyroOnlyActive(long jarg1, ArAnalogGyro jarg1_);
  public final static native void ArAnalogGyro_activateGyroOnly(long jarg1, ArAnalogGyro jarg1_);
  public final static native boolean ArAnalogGyro_hasNoInternalData(long jarg1, ArAnalogGyro jarg1_);
  public final static native boolean ArAnalogGyro_haveGottenData(long jarg1, ArAnalogGyro jarg1_);
  public final static native double ArAnalogGyro_getHeading(long jarg1, ArAnalogGyro jarg1_);
  public final static native int ArAnalogGyro_getTemperature(long jarg1, ArAnalogGyro jarg1_);
  public final static native void ArAnalogGyro_setFilterModel(long jarg1, ArAnalogGyro jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native int ArAnalogGyro_getPacCount(long jarg1, ArAnalogGyro jarg1_);
  public final static native double ArAnalogGyro_getAverage(long jarg1, ArAnalogGyro jarg1_);
  public final static native long ArAnalogGyro_getAverageTaken(long jarg1, ArAnalogGyro jarg1_);
  public final static native double ArAnalogGyro_getScalingFactor(long jarg1, ArAnalogGyro jarg1_);
  public final static native void ArAnalogGyro_setScalingFactor(long jarg1, ArAnalogGyro jarg1_, double jarg2);
  public final static native boolean ArAnalogGyro_handleGyroPacket(long jarg1, ArAnalogGyro jarg1_, long jarg2, ArRobotPacket jarg2_);
  public final static native double ArAnalogGyro_encoderCorrect(long jarg1, ArAnalogGyro jarg1_, long jarg2, ArPoseWithTime jarg2_);
  public final static native void ArAnalogGyro_stabilizingCallback(long jarg1, ArAnalogGyro jarg1_);
  public final static native void ArAnalogGyro_userTaskCallback(long jarg1, ArAnalogGyro jarg1_);
  public final static native void ArAnalogGyro_setLogAnomalies(long jarg1, ArAnalogGyro jarg1_, boolean jarg2);
  public final static native int ArArg_LAST_TYPE_get();
  public final static native int ArArg_TYPE_COUNT_get();
  public final static native long new_ArArg__SWIG_0();
  public final static native long new_ArArg__SWIG_1(String jarg1, long jarg2, String jarg3, int jarg4, int jarg5);
  public final static native long new_ArArg__SWIG_2(String jarg1, long jarg2, String jarg3, int jarg4);
  public final static native long new_ArArg__SWIG_3(String jarg1, long jarg2, String jarg3);
  public final static native long new_ArArg__SWIG_4(String jarg1, long jarg2);
  public final static native long new_ArArg__SWIG_5(String jarg1, long jarg2, String jarg3, double jarg4, double jarg5);
  public final static native long new_ArArg__SWIG_6(String jarg1, long jarg2, String jarg3, double jarg4);
  public final static native long new_ArArg__SWIG_7(String jarg1, long jarg2, String jarg3);
  public final static native long new_ArArg__SWIG_8(String jarg1, long jarg2);
  public final static native long new_ArArg__SWIG_9(String jarg1, long jarg2, String jarg3);
  public final static native long new_ArArg__SWIG_10(String jarg1, long jarg2);
  public final static native long new_ArArg__SWIG_11(String jarg1, long jarg2, ArPose jarg2_, String jarg3);
  public final static native long new_ArArg__SWIG_12(String jarg1, long jarg2, ArPose jarg2_);
  public final static native long new_ArArg__SWIG_13(String jarg1, String jarg2, String jarg3, long jarg4);
  public final static native long new_ArArg__SWIG_14(String jarg1, long jarg2, ArRetFunctor1_Bool_ArgumentBuilderP jarg2_, long jarg3, String jarg4);
  public final static native long new_ArArg__SWIG_15(String jarg1);
  public final static native long new_ArArg__SWIG_16(long jarg1, ArArg jarg1_);
  public final static native void delete_ArArg(long jarg1);
  public final static native int ArArg_getType(long jarg1, ArArg jarg1_);
  public final static native String ArArg_getName(long jarg1, ArArg jarg1_);
  public final static native String ArArg_getDescription(long jarg1, ArArg jarg1_);
  public final static native boolean ArArg_setInt(long jarg1, ArArg jarg1_, int jarg2);
  public final static native boolean ArArg_setDouble(long jarg1, ArArg jarg1_, double jarg2);
  public final static native boolean ArArg_setBool(long jarg1, ArArg jarg1_, boolean jarg2);
  public final static native boolean ArArg_setPose(long jarg1, ArArg jarg1_, long jarg2, ArPose jarg2_);
  public final static native boolean ArArg_setString(long jarg1, ArArg jarg1_, String jarg2);
  public final static native boolean ArArg_setArgWithFunctor(long jarg1, ArArg jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native int ArArg_getInt(long jarg1, ArArg jarg1_);
  public final static native double ArArg_getDouble(long jarg1, ArArg jarg1_);
  public final static native boolean ArArg_getBool(long jarg1, ArArg jarg1_);
  public final static native long ArArg_getPose(long jarg1, ArArg jarg1_);
  public final static native String ArArg_getString(long jarg1, ArArg jarg1_);
  public final static native long ArArg_getArgsWithFunctor(long jarg1, ArArg jarg1_);
  public final static native void ArArg_log(long jarg1, ArArg jarg1_);
  public final static native int ArArg_getMinInt(long jarg1, ArArg jarg1_);
  public final static native int ArArg_getMaxInt(long jarg1, ArArg jarg1_);
  public final static native double ArArg_getMinDouble(long jarg1, ArArg jarg1_);
  public final static native double ArArg_getMaxDouble(long jarg1, ArArg jarg1_);
  public final static native boolean ArArg_getConfigPrioritySet(long jarg1, ArArg jarg1_);
  public final static native int ArArg_getConfigPriority(long jarg1, ArArg jarg1_);
  public final static native void ArArg_setConfigPriority(long jarg1, ArArg jarg1_, int jarg2);
  public final static native long new_ArArgumentBuilder__SWIG_0(long jarg1, char jarg2, boolean jarg3, boolean jarg4);
  public final static native long new_ArArgumentBuilder__SWIG_1(long jarg1, char jarg2, boolean jarg3);
  public final static native long new_ArArgumentBuilder__SWIG_2(long jarg1, char jarg2);
  public final static native long new_ArArgumentBuilder__SWIG_3(long jarg1);
  public final static native long new_ArArgumentBuilder__SWIG_4();
  public final static native long new_ArArgumentBuilder__SWIG_5(long jarg1, ArArgumentBuilder jarg1_);
  public final static native void delete_ArArgumentBuilder(long jarg1);
  public final static native void ArArgumentBuilder_addPlain__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, String jarg2, int jarg3);
  public final static native void ArArgumentBuilder_addPlain__SWIG_1(long jarg1, ArArgumentBuilder jarg1_, String jarg2);
  public final static native void ArArgumentBuilder_addPlainAsIs__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, String jarg2, int jarg3);
  public final static native void ArArgumentBuilder_addPlainAsIs__SWIG_1(long jarg1, ArArgumentBuilder jarg1_, String jarg2);
  public final static native void ArArgumentBuilder_addStrings__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void ArArgumentBuilder_addStrings__SWIG_1(long jarg1, ArArgumentBuilder jarg1_, long jarg2, int jarg3);
  public final static native void ArArgumentBuilder_addStrings__SWIG_2(long jarg1, ArArgumentBuilder jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native void ArArgumentBuilder_addStrings__SWIG_3(long jarg1, ArArgumentBuilder jarg1_, int jarg2, long jarg3);
  public final static native void ArArgumentBuilder_addStringsAsIs__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native void ArArgumentBuilder_addStringsAsIs__SWIG_1(long jarg1, ArArgumentBuilder jarg1_, int jarg2, long jarg3);
  public final static native String ArArgumentBuilder_getFullString(long jarg1, ArArgumentBuilder jarg1_);
  public final static native void ArArgumentBuilder_setFullString(long jarg1, ArArgumentBuilder jarg1_, String jarg2);
  public final static native String ArArgumentBuilder_getExtraString(long jarg1, ArArgumentBuilder jarg1_);
  public final static native void ArArgumentBuilder_setExtraString(long jarg1, ArArgumentBuilder jarg1_, String jarg2);
  public final static native void ArArgumentBuilder_log(long jarg1, ArArgumentBuilder jarg1_);
  public final static native long ArArgumentBuilder_getArgc(long jarg1, ArArgumentBuilder jarg1_);
  public final static native long ArArgumentBuilder_getArgv(long jarg1, ArArgumentBuilder jarg1_);
  public final static native String ArArgumentBuilder_getArg(long jarg1, ArArgumentBuilder jarg1_, long jarg2);
  public final static native boolean ArArgumentBuilder_isArgBool(long jarg1, ArArgumentBuilder jarg1_, long jarg2);
  public final static native boolean ArArgumentBuilder_getArgBool__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, long jarg2, long jarg3);
  public final static native boolean ArArgumentBuilder_getArgBool__SWIG_1(long jarg1, ArArgumentBuilder jarg1_, long jarg2);
  public final static native boolean ArArgumentBuilder_isArgInt__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, long jarg2, boolean jarg3);
  public final static native boolean ArArgumentBuilder_isArgInt__SWIG_1(long jarg1, ArArgumentBuilder jarg1_, long jarg2);
  public final static native int ArArgumentBuilder_getArgInt__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, long jarg2, long jarg3, boolean jarg4);
  public final static native int ArArgumentBuilder_getArgInt__SWIG_1(long jarg1, ArArgumentBuilder jarg1_, long jarg2, long jarg3);
  public final static native int ArArgumentBuilder_getArgInt__SWIG_2(long jarg1, ArArgumentBuilder jarg1_, long jarg2);
  public final static native boolean ArArgumentBuilder_isArgLongLongInt(long jarg1, ArArgumentBuilder jarg1_, long jarg2);
  public final static native int ArArgumentBuilder_getArgLongLongInt__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, long jarg2, long jarg3);
  public final static native int ArArgumentBuilder_getArgLongLongInt__SWIG_1(long jarg1, ArArgumentBuilder jarg1_, long jarg2);
  public final static native boolean ArArgumentBuilder_isArgDouble(long jarg1, ArArgumentBuilder jarg1_, long jarg2);
  public final static native double ArArgumentBuilder_getArgDouble__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, long jarg2, long jarg3);
  public final static native double ArArgumentBuilder_getArgDouble__SWIG_1(long jarg1, ArArgumentBuilder jarg1_, long jarg2);
  public final static native void ArArgumentBuilder_removeArg__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, long jarg2, boolean jarg3);
  public final static native void ArArgumentBuilder_removeArg__SWIG_1(long jarg1, ArArgumentBuilder jarg1_, long jarg2);
  public final static native void ArArgumentBuilder_compressQuoted__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, boolean jarg2);
  public final static native void ArArgumentBuilder_compressQuoted__SWIG_1(long jarg1, ArArgumentBuilder jarg1_);
  public final static native void ArArgumentBuilder_setQuiet(long jarg1, ArArgumentBuilder jarg1_, boolean jarg2);
  public final static native long new_ArArgumentBuilderCompareOp();
  public final static native void delete_ArArgumentBuilderCompareOp(long jarg1);
  public final static native long new_ArArgumentParser__SWIG_0(java.lang.String[] jarg1);
  public final static native long new_ArArgumentParser__SWIG_1(long jarg1, ArArgumentBuilder jarg1_);
  public final static native void delete_ArArgumentParser(long jarg1);
  public final static native void ArArgumentParser_setWasReallySetOnlyTrue(long jarg1, ArArgumentParser jarg1_, boolean jarg2);
  public final static native boolean ArArgumentParser_getWasReallySetOnlyTrue(long jarg1, ArArgumentParser jarg1_);
  public final static native boolean ArArgumentParser_checkArgument(long jarg1, ArArgumentParser jarg1_, String jarg2);
  public final static native String ArArgumentParser_checkParameterArgument__SWIG_0(long jarg1, ArArgumentParser jarg1_, String jarg2, boolean jarg3);
  public final static native String ArArgumentParser_checkParameterArgument__SWIG_1(long jarg1, ArArgumentParser jarg1_, String jarg2);
  public final static native boolean ArArgumentParser_checkParameterArgumentString__SWIG_0(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native boolean ArArgumentParser_checkParameterArgumentString__SWIG_1(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native boolean ArArgumentParser_checkParameterArgumentString__SWIG_2(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3);
  public final static native boolean ArArgumentParser_checkParameterArgumentInteger__SWIG_0(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native boolean ArArgumentParser_checkParameterArgumentInteger__SWIG_1(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native boolean ArArgumentParser_checkParameterArgumentInteger__SWIG_2(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3);
  public final static native boolean ArArgumentParser_checkParameterArgumentBool__SWIG_0(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native boolean ArArgumentParser_checkParameterArgumentBool__SWIG_1(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native boolean ArArgumentParser_checkParameterArgumentBool__SWIG_2(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3);
  public final static native boolean ArArgumentParser_checkParameterArgumentFloat__SWIG_0(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native boolean ArArgumentParser_checkParameterArgumentFloat__SWIG_1(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native boolean ArArgumentParser_checkParameterArgumentFloat__SWIG_2(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3);
  public final static native boolean ArArgumentParser_checkParameterArgumentDouble__SWIG_0(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native boolean ArArgumentParser_checkParameterArgumentDouble__SWIG_1(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native boolean ArArgumentParser_checkParameterArgumentDouble__SWIG_2(long jarg1, ArArgumentParser jarg1_, String jarg2, long jarg3);
  public final static native void ArArgumentParser_addDefaultArgument__SWIG_0(long jarg1, ArArgumentParser jarg1_, String jarg2, int jarg3);
  public final static native void ArArgumentParser_addDefaultArgument__SWIG_1(long jarg1, ArArgumentParser jarg1_, String jarg2);
  public final static native void ArArgumentParser_addDefaultArgumentAsIs__SWIG_0(long jarg1, ArArgumentParser jarg1_, String jarg2, int jarg3);
  public final static native void ArArgumentParser_addDefaultArgumentAsIs__SWIG_1(long jarg1, ArArgumentParser jarg1_, String jarg2);
  public final static native void ArArgumentParser_loadDefaultArguments__SWIG_0(long jarg1, ArArgumentParser jarg1_, int jarg2);
  public final static native void ArArgumentParser_loadDefaultArguments__SWIG_1(long jarg1, ArArgumentParser jarg1_);
  public final static native boolean ArArgumentParser_checkHelpAndWarnUnparsed__SWIG_0(long jarg1, ArArgumentParser jarg1_, long jarg2);
  public final static native boolean ArArgumentParser_checkHelpAndWarnUnparsed__SWIG_1(long jarg1, ArArgumentParser jarg1_);
  public final static native long ArArgumentParser_getArgc(long jarg1, ArArgumentParser jarg1_);
  public final static native long ArArgumentParser_getArgv(long jarg1, ArArgumentParser jarg1_);
  public final static native long ArArgumentParser_getArgumentBuilder(long jarg1, ArArgumentParser jarg1_);
  public final static native String ArArgumentParser_getArg(long jarg1, ArArgumentParser jarg1_, long jarg2);
  public final static native void ArArgumentParser_log(long jarg1, ArArgumentParser jarg1_);
  public final static native String ArArgumentParser_getStartingArguments(long jarg1, ArArgumentParser jarg1_);
  public final static native void ArArgumentParser_removeArg(long jarg1, ArArgumentParser jarg1_, long jarg2);
  public final static native void ArArgumentParser_addDefaultArgumentFile(String jarg1);
  public final static native void ArArgumentParser_addDefaultArgumentEnv(String jarg1);
  public final static native void ArArgumentParser_logDefaultArgumentLocations();
  public final static native long new_ArBumpers__SWIG_0(long jarg1, long jarg2, String jarg3, int jarg4, double jarg5);
  public final static native long new_ArBumpers__SWIG_1(long jarg1, long jarg2, String jarg3, int jarg4);
  public final static native long new_ArBumpers__SWIG_2(long jarg1, long jarg2, String jarg3);
  public final static native long new_ArBumpers__SWIG_3(long jarg1, long jarg2);
  public final static native long new_ArBumpers__SWIG_4(long jarg1);
  public final static native long new_ArBumpers__SWIG_5();
  public final static native void delete_ArBumpers(long jarg1);
  public final static native void ArBumpers_setRobot(long jarg1, ArBumpers jarg1_, long jarg2, ArRobot jarg2_);
  public final static native void ArBumpers_processReadings(long jarg1, ArBumpers jarg1_);
  public final static native void ArBumpers_addBumpToBuffer(long jarg1, ArBumpers jarg1_, int jarg2, int jarg3);
  public final static native long new_ArCameraCollection();
  public final static native void delete_ArCameraCollection(long jarg1);
  public final static native boolean ArCameraCollection_addCamera(long jarg1, ArCameraCollection jarg1_, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native boolean ArCameraCollection_removeCamera(long jarg1, ArCameraCollection jarg1_, String jarg2);
  public final static native boolean ArCameraCollection_addCameraCommand__SWIG_0(long jarg1, ArCameraCollection jarg1_, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native boolean ArCameraCollection_addCameraCommand__SWIG_1(long jarg1, ArCameraCollection jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native boolean ArCameraCollection_removeCameraCommand(long jarg1, ArCameraCollection jarg1_, String jarg2, String jarg3);
  public final static native boolean ArCameraCollection_addParameter(long jarg1, ArCameraCollection jarg1_, String jarg2, long jarg3, ArCameraParameterSource jarg3_, long jarg4, ArConfigArg jarg4_);
  public final static native boolean ArCameraCollection_removeParameter(long jarg1, ArCameraCollection jarg1_, String jarg2, String jarg3);
  public final static native void ArCameraCollection_getCameraNames(long jarg1, ArCameraCollection jarg1_, long jarg2);
  public final static native String ArCameraCollection_getCameraType(long jarg1, ArCameraCollection jarg1_, String jarg2);
  public final static native String ArCameraCollection_getDisplayName(long jarg1, ArCameraCollection jarg1_, String jarg2);
  public final static native String ArCameraCollection_getDisplayType(long jarg1, ArCameraCollection jarg1_, String jarg2);
  public final static native void ArCameraCollection_getCameraCommands(long jarg1, ArCameraCollection jarg1_, String jarg2, long jarg3);
  public final static native String ArCameraCollection_getCommandName(long jarg1, ArCameraCollection jarg1_, String jarg2, String jarg3);
  public final static native int ArCameraCollection_getRequestInterval(long jarg1, ArCameraCollection jarg1_, String jarg2, String jarg3);
  public final static native void ArCameraCollection_getParameterNames(long jarg1, ArCameraCollection jarg1_, String jarg2, long jarg3);
  public final static native boolean ArCameraCollection_getParameter(long jarg1, ArCameraCollection jarg1_, String jarg2, String jarg3, long jarg4, ArConfigArg jarg4_);
  public final static native boolean ArCameraCollection_setParameter(long jarg1, ArCameraCollection jarg1_, String jarg2, long jarg3, ArConfigArg jarg3_);
  public final static native boolean ArCameraCollection_exists__SWIG_0(long jarg1, ArCameraCollection jarg1_, String jarg2);
  public final static native boolean ArCameraCollection_exists__SWIG_1(long jarg1, ArCameraCollection jarg1_, String jarg2, String jarg3);
  public final static native boolean ArCameraCollection_parameterExists(long jarg1, ArCameraCollection jarg1_, String jarg2, String jarg3);
  public final static native boolean ArCameraCollection_addModifiedCB__SWIG_0(long jarg1, ArCameraCollection jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native boolean ArCameraCollection_addModifiedCB__SWIG_1(long jarg1, ArCameraCollection jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native boolean ArCameraCollection_removeModifiedCB(long jarg1, ArCameraCollection jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArCameraCollection_startUpdate(long jarg1, ArCameraCollection jarg1_);
  public final static native void ArCameraCollection_endUpdate(long jarg1, ArCameraCollection jarg1_);
  public final static native int ArCameraCollection_lock(long jarg1, ArCameraCollection jarg1_);
  public final static native int ArCameraCollection_tryLock(long jarg1, ArCameraCollection jarg1_);
  public final static native int ArCameraCollection_unlock(long jarg1, ArCameraCollection jarg1_);
  public final static native void delete_ArCameraCollectionItem(long jarg1);
  public final static native String ArCameraCollectionItem_getCameraName(long jarg1, ArCameraCollectionItem jarg1_);
  public final static native void ArCameraCollectionItem_addToCameraCollection(long jarg1, ArCameraCollectionItem jarg1_, long jarg2, ArCameraCollection jarg2_);
  public final static native void delete_ArCameraParameterSource(long jarg1);
  public final static native boolean ArCameraParameterSource_getParameter(long jarg1, ArCameraParameterSource jarg1_, String jarg2, long jarg3, ArConfigArg jarg3_);
  public final static native boolean ArCameraParameterSource_setParameter(long jarg1, ArCameraParameterSource jarg1_, long jarg2, ArConfigArg jarg2_);
  public final static native void ArCameraCommands_GET_CAMERA_DATA_set(String jarg1);
  public final static native String ArCameraCommands_GET_CAMERA_DATA_get();
  public final static native void ArCameraCommands_GET_CAMERA_INFO_set(String jarg1);
  public final static native String ArCameraCommands_GET_CAMERA_INFO_get();
  public final static native void ArCameraCommands_GET_PICTURE_set(String jarg1);
  public final static native String ArCameraCommands_GET_PICTURE_get();
  public final static native void ArCameraCommands_GET_PICTURE_OPTIM_set(String jarg1);
  public final static native String ArCameraCommands_GET_PICTURE_OPTIM_get();
  public final static native void ArCameraCommands_GET_SNAPSHOT_set(String jarg1);
  public final static native String ArCameraCommands_GET_SNAPSHOT_get();
  public final static native void ArCameraCommands_GET_DISPLAY_set(String jarg1);
  public final static native String ArCameraCommands_GET_DISPLAY_get();
  public final static native void ArCameraCommands_SET_CAMERA_ABS_set(String jarg1);
  public final static native String ArCameraCommands_SET_CAMERA_ABS_get();
  public final static native void ArCameraCommands_SET_CAMERA_PCT_set(String jarg1);
  public final static native String ArCameraCommands_SET_CAMERA_PCT_get();
  public final static native void ArCameraCommands_SET_CAMERA_REL_set(String jarg1);
  public final static native String ArCameraCommands_SET_CAMERA_REL_get();
  public final static native void ArCameraCommands_GET_CAMERA_MODE_LIST_set(String jarg1);
  public final static native String ArCameraCommands_GET_CAMERA_MODE_LIST_get();
  public final static native void ArCameraCommands_CAMERA_MODE_UPDATED_set(String jarg1);
  public final static native String ArCameraCommands_CAMERA_MODE_UPDATED_get();
  public final static native void ArCameraCommands_SET_CAMERA_MODE_set(String jarg1);
  public final static native String ArCameraCommands_SET_CAMERA_MODE_get();
  public final static native void ArCameraCommands_RESET_CAMERA_set(String jarg1);
  public final static native String ArCameraCommands_RESET_CAMERA_get();
  public final static native void ArCameraCommands_GET_CAMERA_DATA_INT_set(String jarg1);
  public final static native String ArCameraCommands_GET_CAMERA_DATA_INT_get();
  public final static native void ArCameraCommands_GET_CAMERA_INFO_INT_set(String jarg1);
  public final static native String ArCameraCommands_GET_CAMERA_INFO_INT_get();
  public final static native void ArCameraCommands_SET_CAMERA_ABS_INT_set(String jarg1);
  public final static native String ArCameraCommands_SET_CAMERA_ABS_INT_get();
  public final static native void ArCameraCommands_SET_CAMERA_REL_INT_set(String jarg1);
  public final static native String ArCameraCommands_SET_CAMERA_REL_INT_get();
  public final static native void ArCameraCommands_SET_CAMERA_PCT_INT_set(String jarg1);
  public final static native String ArCameraCommands_SET_CAMERA_PCT_INT_get();
  public final static native void ArCameraCommands_GET_VIDEO_set(String jarg1);
  public final static native String ArCameraCommands_GET_VIDEO_get();
  public final static native void ArCameraCommands_GET_SNAPSHOT_PLAIN_set(String jarg1);
  public final static native String ArCameraCommands_GET_SNAPSHOT_PLAIN_get();
  public final static native long new_ArCameraCommands();
  public final static native void delete_ArCameraCommands(long jarg1);
  public final static native int ArCommands_PULSE_get();
  public final static native int ArCommands_OPEN_get();
  public final static native int ArCommands_CLOSE_get();
  public final static native int ArCommands_POLLING_get();
  public final static native int ArCommands_ENABLE_get();
  public final static native int ArCommands_SETA_get();
  public final static native int ArCommands_SETV_get();
  public final static native int ArCommands_SETO_get();
  public final static native int ArCommands_MOVE_get();
  public final static native int ArCommands_ROTATE_get();
  public final static native int ArCommands_SETRV_get();
  public final static native int ArCommands_VEL_get();
  public final static native int ArCommands_HEAD_get();
  public final static native int ArCommands_DHEAD_get();
  public final static native int ArCommands_SAY_get();
  public final static native int ArCommands_JOYINFO_get();
  public final static native int ArCommands_CONFIG_get();
  public final static native int ArCommands_ENCODER_get();
  public final static native int ArCommands_SETRVDIR_get();
  public final static native int ArCommands_RVEL_get();
  public final static native int ArCommands_DCHEAD_get();
  public final static native int ArCommands_SETRA_get();
  public final static native int ArCommands_SONAR_get();
  public final static native int ArCommands_STOP_get();
  public final static native int ArCommands_DIGOUT_get();
  public final static native int ArCommands_VEL2_get();
  public final static native int ArCommands_GRIPPER_get();
  public final static native int ArCommands_ADSEL_get();
  public final static native int ArCommands_GRIPPERVAL_get();
  public final static native int ArCommands_GRIPPERPACREQUEST_get();
  public final static native int ArCommands_IOREQUEST_get();
  public final static native int ArCommands_PTUPOS_get();
  public final static native int ArCommands_TTY2_get();
  public final static native int ArCommands_GETAUX_get();
  public final static native int ArCommands_BUMPSTALL_get();
  public final static native int ArCommands_TCM2_get();
  public final static native int ArCommands_JOYDRIVE_get();
  public final static native int ArCommands_MOVINGBLINK_get();
  public final static native int ArCommands_HOSTBAUD_get();
  public final static native int ArCommands_AUX1BAUD_get();
  public final static native int ArCommands_AUX2BAUD_get();
  public final static native int ArCommands_ESTOP_get();
  public final static native int ArCommands_ESTALL_get();
  public final static native int ArCommands_GYRO_get();
  public final static native int ArCommands_TTY4_get();
  public final static native int ArCommands_GETAUX3_get();
  public final static native int ArCommands_BATTERYINFO_get();
  public final static native int ArCommands_TTY3_get();
  public final static native int ArCommands_GETAUX2_get();
  public final static native int ArCommands_BATTEST_get();
  public final static native int ArCommands_LOADPARAM_get();
  public final static native int ArCommands_OLDSIM_LOADPARAM_get();
  public final static native int ArCommands_ENDSIM_get();
  public final static native int ArCommands_OLDSIM_EXIT_get();
  public final static native int ArCommands_LOADWORLD_get();
  public final static native int ArCommands_OLDSIM_LOADWORLD_get();
  public final static native int ArCommands_STEP_get();
  public final static native int ArCommands_OLDSIM_STEP_get();
  public final static native int ArCommands_CALCOMP_get();
  public final static native int ArCommands_SETSIMORIGINTH_get();
  public final static native int ArCommands_OLDSIM_SETORIGINTH_get();
  public final static native int ArCommands_RESETSIMTOORIGIN_get();
  public final static native int ArCommands_OLDSIM_RESETTOORIGIN_get();
  public final static native int ArCommands_SOUND_get();
  public final static native int ArCommands_PLAYLIST_get();
  public final static native int ArCommands_SOUNDTOG_get();
  public final static native int ArCommands_POWER_PC_get();
  public final static native int ArCommands_POWER_LRF_get();
  public final static native int ArCommands_POWER_5V_get();
  public final static native int ArCommands_POWER_12V_get();
  public final static native int ArCommands_POWER_24V_get();
  public final static native int ArCommands_POWER_AUX_PC_get();
  public final static native int ArCommands_POWER_TOUCHSCREEN_get();
  public final static native int ArCommands_POWER_PTZ_get();
  public final static native int ArCommands_POWER_AUDIO_get();
  public final static native int ArCommands_POWER_LRF2_get();
  public final static native int ArCommands_LATVEL_get();
  public final static native int ArCommands_LATACCEL_get();
  public final static native int ArCommands_SETLATV_get();
  public final static native int ArCommands_SRECORD_get();
  public final static native int ArCommands_MARCDEBUG_get();
  public final static native int ArCommands_WHEEL_LIGHT_get();
  public final static native int ArCommands_ABSOLUTE_MAXES_get();
  public final static native int ArCommands_SAFETY_STATE_INFO_get();
  public final static native int ArCommands_SAFETY_SET_STATE_get();
  public final static native int ArCommands_SAFETY_DISABLE_POWER_OFF_TIMER_get();
  public final static native int ArCommands_SIM_SET_POSE_get();
  public final static native int ArCommands_SIM_RESET_get();
  public final static native int ArCommands_SIM_LRF_ENABLE_get();
  public final static native int ArCommands_SIM_LRF_SET_FOV_START_get();
  public final static native int ArCommands_SIM_LRF_SET_FOV_END_get();
  public final static native int ArCommands_SIM_LRF_SET_RES_get();
  public final static native int ArCommands_SIM_CTRL_get();
  public final static native int ArCommands_SIM_STAT_get();
  public final static native int ArCommands_SIM_MESSAGE_get();
  public final static native int ArCommands_SIM_EXIT_get();
  public final static native long new_ArCommands();
  public final static native void delete_ArCommands(long jarg1);
  public final static native int ArCondition_STATUS_FAILED_get();
  public final static native int ArCondition_STATUS_FAILED_DESTROY_get();
  public final static native int ArCondition_STATUS_FAILED_INIT_get();
  public final static native int ArCondition_STATUS_WAIT_TIMEDOUT_get();
  public final static native int ArCondition_STATUS_WAIT_INTR_get();
  public final static native int ArCondition_STATUS_MUTEX_FAILED_INIT_get();
  public final static native int ArCondition_STATUS_MUTEX_FAILED_get();
  public final static native long new_ArCondition();
  public final static native void delete_ArCondition(long jarg1);
  public final static native int ArCondition_signal(long jarg1, ArCondition jarg1_);
  public final static native int ArCondition_broadcast(long jarg1, ArCondition jarg1_);
  public final static native int ArCondition_waitFor(long jarg1, ArCondition jarg1_);
  public final static native int ArCondition_timedWait(long jarg1, ArCondition jarg1_, long jarg2);
  public final static native String ArCondition_getError(long jarg1, ArCondition jarg1_, int jarg2);
  public final static native void ArCondition_setLogName(long jarg1, ArCondition jarg1_, String jarg2);
  public final static native String ArCondition_getLogName(long jarg1, ArCondition jarg1_);
  public final static native void ArConfig_CATEGORY_ROBOT_INTERFACE_set(String jarg1);
  public final static native String ArConfig_CATEGORY_ROBOT_INTERFACE_get();
  public final static native void ArConfig_CATEGORY_ROBOT_OPERATION_set(String jarg1);
  public final static native String ArConfig_CATEGORY_ROBOT_OPERATION_get();
  public final static native void ArConfig_CATEGORY_ROBOT_PHYSICAL_set(String jarg1);
  public final static native String ArConfig_CATEGORY_ROBOT_PHYSICAL_get();
  public final static native void ArConfig_CATEGORY_FLEET_set(String jarg1);
  public final static native String ArConfig_CATEGORY_FLEET_get();
  public final static native void ArConfig_CATEGORY_SECURITY_set(String jarg1);
  public final static native String ArConfig_CATEGORY_SECURITY_get();
  public final static native void ArConfig_CATEGORY_DEBUG_set(String jarg1);
  public final static native String ArConfig_CATEGORY_DEBUG_get();
  public final static native String ArConfig_toCategoryName(String jarg1);
  public final static native long new_ArConfig__SWIG_0(String jarg1, boolean jarg2, boolean jarg3, boolean jarg4, boolean jarg5);
  public final static native long new_ArConfig__SWIG_1(String jarg1, boolean jarg2, boolean jarg3, boolean jarg4);
  public final static native long new_ArConfig__SWIG_2(String jarg1, boolean jarg2, boolean jarg3);
  public final static native long new_ArConfig__SWIG_3(String jarg1, boolean jarg2);
  public final static native long new_ArConfig__SWIG_4(String jarg1);
  public final static native long new_ArConfig__SWIG_5();
  public final static native void delete_ArConfig(long jarg1);
  public final static native long new_ArConfig__SWIG_6(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_copyAndDetach(long jarg1, ArConfig jarg1_, long jarg2, ArConfig jarg2_);
  public final static native void ArConfig_setConfigName__SWIG_0(long jarg1, ArConfig jarg1_, String jarg2, String jarg3);
  public final static native void ArConfig_setConfigName__SWIG_1(long jarg1, ArConfig jarg1_, String jarg2);
  public final static native void ArConfig_setQuiet(long jarg1, ArConfig jarg1_, boolean jarg2);
  public final static native void ArConfig_setTranslator(long jarg1, ArConfig jarg1_, long jarg2, ArConfig jarg2_);
  public final static native long ArConfig_getTranslator(long jarg1, ArConfig jarg1_);
  public final static native boolean ArConfig_parseFile__SWIG_0(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, boolean jarg4, String jarg5, long jarg6, long jarg7, int jarg8, int jarg9, long jarg10);
  public final static native boolean ArConfig_parseFile__SWIG_1(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, boolean jarg4, String jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native boolean ArConfig_parseFile__SWIG_2(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, boolean jarg4, String jarg5, long jarg6, long jarg7, int jarg8);
  public final static native boolean ArConfig_parseFile__SWIG_3(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, boolean jarg4, String jarg5, long jarg6, long jarg7);
  public final static native boolean ArConfig_parseFile__SWIG_4(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, boolean jarg4, String jarg5, long jarg6);
  public final static native boolean ArConfig_parseFile__SWIG_5(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, boolean jarg4, String jarg5);
  public final static native boolean ArConfig_parseFile__SWIG_6(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, boolean jarg4);
  public final static native boolean ArConfig_parseFile__SWIG_7(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3);
  public final static native boolean ArConfig_parseFile__SWIG_8(long jarg1, ArConfig jarg1_, String jarg2);
  public final static native boolean ArConfig_writeFile__SWIG_0(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, long jarg4, boolean jarg5, long jarg6, int jarg7, int jarg8);
  public final static native boolean ArConfig_writeFile__SWIG_1(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, long jarg4, boolean jarg5, long jarg6, int jarg7);
  public final static native boolean ArConfig_writeFile__SWIG_2(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, long jarg4, boolean jarg5, long jarg6);
  public final static native boolean ArConfig_writeFile__SWIG_3(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, long jarg4, boolean jarg5);
  public final static native boolean ArConfig_writeFile__SWIG_4(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, long jarg4);
  public final static native boolean ArConfig_writeFile__SWIG_5(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3);
  public final static native boolean ArConfig_writeFile__SWIG_6(long jarg1, ArConfig jarg1_, String jarg2);
  public final static native boolean ArConfig_parseText__SWIG_0(long jarg1, ArConfig jarg1_, long jarg2, boolean jarg3, long jarg4, long jarg5, String jarg6, long jarg7, long jarg8, int jarg9, int jarg10, long jarg11);
  public final static native boolean ArConfig_parseText__SWIG_1(long jarg1, ArConfig jarg1_, long jarg2, boolean jarg3, long jarg4, long jarg5, String jarg6, long jarg7, long jarg8, int jarg9, int jarg10);
  public final static native boolean ArConfig_parseText__SWIG_2(long jarg1, ArConfig jarg1_, long jarg2, boolean jarg3, long jarg4, long jarg5, String jarg6, long jarg7, long jarg8, int jarg9);
  public final static native boolean ArConfig_parseText__SWIG_3(long jarg1, ArConfig jarg1_, long jarg2, boolean jarg3, long jarg4, long jarg5, String jarg6, long jarg7, long jarg8);
  public final static native boolean ArConfig_parseText__SWIG_4(long jarg1, ArConfig jarg1_, long jarg2, boolean jarg3, long jarg4, long jarg5, String jarg6, long jarg7);
  public final static native boolean ArConfig_parseText__SWIG_5(long jarg1, ArConfig jarg1_, long jarg2, boolean jarg3, long jarg4, long jarg5, String jarg6);
  public final static native boolean ArConfig_parseText__SWIG_6(long jarg1, ArConfig jarg1_, long jarg2, boolean jarg3, long jarg4, long jarg5);
  public final static native boolean ArConfig_parseText__SWIG_7(long jarg1, ArConfig jarg1_, long jarg2, boolean jarg3, long jarg4);
  public final static native boolean ArConfig_parseText__SWIG_8(long jarg1, ArConfig jarg1_, long jarg2, boolean jarg3);
  public final static native boolean ArConfig_parseText__SWIG_9(long jarg1, ArConfig jarg1_, long jarg2);
  public final static native boolean ArConfig_parseResourceFile__SWIG_0(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, String jarg4, long jarg5, long jarg6);
  public final static native boolean ArConfig_parseResourceFile__SWIG_1(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, String jarg4, long jarg5);
  public final static native boolean ArConfig_parseResourceFile__SWIG_2(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, String jarg4);
  public final static native boolean ArConfig_parseResourceFile__SWIG_3(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3);
  public final static native boolean ArConfig_parseResourceFile__SWIG_4(long jarg1, ArConfig jarg1_, String jarg2);
  public final static native void ArConfig_parseResourceFile__SWIG_5(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native boolean ArConfig_writeResourceFile__SWIG_0(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, long jarg4, long jarg5);
  public final static native boolean ArConfig_writeResourceFile__SWIG_1(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3, long jarg4);
  public final static native boolean ArConfig_writeResourceFile__SWIG_2(long jarg1, ArConfig jarg1_, String jarg2, boolean jarg3);
  public final static native boolean ArConfig_writeResourceFile__SWIG_3(long jarg1, ArConfig jarg1_, String jarg2);
  public final static native void ArConfig_writeResourceFile__SWIG_4(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native boolean ArConfig_addSection(long jarg1, ArConfig jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native boolean ArConfig_addParam__SWIG_0(long jarg1, ArConfig jarg1_, long jarg2, ArConfigArg jarg2_, String jarg3, int jarg4, String jarg5, int jarg6);
  public final static native boolean ArConfig_addParam__SWIG_1(long jarg1, ArConfig jarg1_, long jarg2, ArConfigArg jarg2_, String jarg3, int jarg4, String jarg5);
  public final static native boolean ArConfig_addParam__SWIG_2(long jarg1, ArConfig jarg1_, long jarg2, ArConfigArg jarg2_, String jarg3, int jarg4);
  public final static native boolean ArConfig_addParam__SWIG_3(long jarg1, ArConfig jarg1_, long jarg2, ArConfigArg jarg2_, String jarg3);
  public final static native boolean ArConfig_addParam__SWIG_4(long jarg1, ArConfig jarg1_, long jarg2, ArConfigArg jarg2_);
  public final static native boolean ArConfig_addComment__SWIG_0(long jarg1, ArConfig jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native boolean ArConfig_addComment__SWIG_1(long jarg1, ArConfig jarg1_, String jarg2, String jarg3);
  public final static native boolean ArConfig_addComment__SWIG_2(long jarg1, ArConfig jarg1_, String jarg2);
  public final static native boolean ArConfig_addParamAsIs__SWIG_0(long jarg1, ArConfig jarg1_, long jarg2, ArConfigArg jarg2_, String jarg3);
  public final static native boolean ArConfig_addParamAsIs__SWIG_1(long jarg1, ArConfig jarg1_, long jarg2, ArConfigArg jarg2_);
  public final static native void ArConfig_setSectionComment(long jarg1, ArConfig jarg1_, String jarg2, String jarg3);
  public final static native void ArConfig_useArgumentParser(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentParser jarg2_);
  public final static native boolean ArConfig_processFile(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_addProcessFileCB__SWIG_0(long jarg1, ArConfig jarg1_, long jarg2, ArRetFunctor_Bool jarg2_, int jarg3);
  public final static native void ArConfig_addProcessFileCB__SWIG_1(long jarg1, ArConfig jarg1_, long jarg2, ArRetFunctor_Bool jarg2_);
  public final static native void ArConfig_addProcessFileCB__SWIG_2(long jarg1, ArConfig jarg1_, long jarg2, int jarg3);
  public final static native void ArConfig_addProcessFileCB__SWIG_3(long jarg1, ArConfig jarg1_, long jarg2);
  public final static native void ArConfig_addProcessFileWithErrorCB__SWIG_0(long jarg1, ArConfig jarg1_, long jarg2, int jarg3);
  public final static native void ArConfig_addProcessFileWithErrorCB__SWIG_1(long jarg1, ArConfig jarg1_, long jarg2);
  public final static native void ArConfig_remProcessFileCB__SWIG_0(long jarg1, ArConfig jarg1_, long jarg2, ArRetFunctor_Bool jarg2_);
  public final static native void ArConfig_remProcessFileCB__SWIG_1(long jarg1, ArConfig jarg1_, long jarg2);
  public final static native boolean ArConfig_callProcessFileCallBacks__SWIG_0(long jarg1, ArConfig jarg1_, boolean jarg2, String jarg3, long jarg4);
  public final static native boolean ArConfig_callProcessFileCallBacks__SWIG_1(long jarg1, ArConfig jarg1_, boolean jarg2, String jarg3);
  public final static native boolean ArConfig_callProcessFileCallBacks__SWIG_2(long jarg1, ArConfig jarg1_, boolean jarg2);
  public final static native boolean ArConfig_parseArgument__SWIG_0(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4);
  public final static native boolean ArConfig_parseArgument__SWIG_1(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3);
  public final static native boolean ArConfig_parseArgument__SWIG_2(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native boolean ArConfig_parseVersion__SWIG_0(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4);
  public final static native boolean ArConfig_parseVersion__SWIG_1(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3);
  public final static native boolean ArConfig_parseVersion__SWIG_2(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native boolean ArConfig_parseSection__SWIG_0(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4);
  public final static native boolean ArConfig_parseSection__SWIG_1(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3);
  public final static native boolean ArConfig_parseSection__SWIG_2(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native boolean ArConfig_parseListBegin(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4);
  public final static native boolean ArConfig_parseListEnd(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4);
  public final static native boolean ArConfig_parseUnknown__SWIG_0(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4);
  public final static native boolean ArConfig_parseUnknown__SWIG_1(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3);
  public final static native boolean ArConfig_parseUnknown__SWIG_2(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native int ArConfig_getRestartLevelNeeded(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_resetRestartLevelNeeded(long jarg1, ArConfig jarg1_);
  public final static native String ArConfig_getBaseDirectory(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_setBaseDirectory(long jarg1, ArConfig jarg1_, String jarg2);
  public final static native String ArConfig_getFileName(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_setNoBlanksBetweenParams(long jarg1, ArConfig jarg1_, boolean jarg2);
  public final static native boolean ArConfig_getNoBlanksBetweenParams(long jarg1, ArConfig jarg1_);
  public final static native boolean ArConfig_parseArgumentParser__SWIG_0(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentParser jarg2_, boolean jarg3, String jarg4, long jarg5);
  public final static native boolean ArConfig_parseArgumentParser__SWIG_1(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentParser jarg2_, boolean jarg3, String jarg4);
  public final static native boolean ArConfig_parseArgumentParser__SWIG_2(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentParser jarg2_, boolean jarg3);
  public final static native boolean ArConfig_parseArgumentParser__SWIG_3(long jarg1, ArConfig jarg1_, long jarg2, ArArgumentParser jarg2_);
  public final static native long ArConfig_getCategoryNames(long jarg1, ArConfig jarg1_);
  public final static native long ArConfig_getSectionNamesInCategory(long jarg1, ArConfig jarg1_, String jarg2);
  public final static native long ArConfig_getSectionNames(long jarg1, ArConfig jarg1_);
  public final static native long ArConfig_getSections(long jarg1, ArConfig jarg1_);
  public final static native long ArConfig_findSection(long jarg1, ArConfig jarg1_, String jarg2);
  public final static native void ArConfig_setProcessFileCallbacksLogLevel(long jarg1, ArConfig jarg1_, int jarg2);
  public final static native int ArConfig_getProcessFileCallbacksLogLevel(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_setSaveUnknown(long jarg1, ArConfig jarg1_, boolean jarg2);
  public final static native boolean ArConfig_getSaveUnknown(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_clearSections(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_clearAll(long jarg1, ArConfig jarg1_);
  public final static native boolean ArConfig_addSectionFlags(long jarg1, ArConfig jarg1_, String jarg2, String jarg3);
  public final static native boolean ArConfig_remSectionFlag(long jarg1, ArConfig jarg1_, String jarg2, String jarg3);
  public final static native void ArConfig_clearAllValueSet(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_removeAllUnsetValues(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_removeAllUnsetSections(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_log__SWIG_0(long jarg1, ArConfig jarg1_, boolean jarg2, long jarg3, String jarg4);
  public final static native void ArConfig_log__SWIG_1(long jarg1, ArConfig jarg1_, boolean jarg2, long jarg3);
  public final static native void ArConfig_log__SWIG_2(long jarg1, ArConfig jarg1_, boolean jarg2);
  public final static native void ArConfig_log__SWIG_3(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_setPermissions__SWIG_0(long jarg1, ArConfig jarg1_, boolean jarg2, boolean jarg3);
  public final static native void ArConfig_setPermissions__SWIG_1(long jarg1, ArConfig jarg1_, boolean jarg2);
  public final static native void ArConfig_setPermissions__SWIG_2(long jarg1, ArConfig jarg1_);
  public final static native void ArConfig_addSectionNotToParse(long jarg1, ArConfig jarg1_, String jarg2);
  public final static native void ArConfig_remSectionNotToParse(long jarg1, ArConfig jarg1_, String jarg2);
  public final static native void ArConfig_addListNamesToParser(long jarg1, ArConfig jarg1_, long jarg2, ArConfigArg jarg2_);
  public final static native long new_ArConfigSection__SWIG_0(String jarg1, String jarg2, boolean jarg3, String jarg4);
  public final static native long new_ArConfigSection__SWIG_1(String jarg1, String jarg2, boolean jarg3);
  public final static native long new_ArConfigSection__SWIG_2(String jarg1, String jarg2);
  public final static native long new_ArConfigSection__SWIG_3(String jarg1);
  public final static native long new_ArConfigSection__SWIG_4();
  public final static native void delete_ArConfigSection(long jarg1);
  public final static native long new_ArConfigSection__SWIG_5(long jarg1, ArConfigSection jarg1_);
  public final static native void ArConfigSection_copyAndDetach(long jarg1, ArConfigSection jarg1_, long jarg2, ArConfigSection jarg2_);
  public final static native String ArConfigSection_getName(long jarg1, ArConfigSection jarg1_);
  public final static native String ArConfigSection_getComment(long jarg1, ArConfigSection jarg1_);
  public final static native String ArConfigSection_getCategoryName(long jarg1, ArConfigSection jarg1_);
  public final static native String ArConfigSection_getFlags(long jarg1, ArConfigSection jarg1_);
  public final static native boolean ArConfigSection_hasFlag(long jarg1, ArConfigSection jarg1_, String jarg2);
  public final static native long ArConfigSection_getParams(long jarg1, ArConfigSection jarg1_);
  public final static native void ArConfigSection_setName(long jarg1, ArConfigSection jarg1_, String jarg2);
  public final static native void ArConfigSection_setComment(long jarg1, ArConfigSection jarg1_, String jarg2);
  public final static native boolean ArConfigSection_addFlags__SWIG_0(long jarg1, ArConfigSection jarg1_, String jarg2, boolean jarg3);
  public final static native boolean ArConfigSection_addFlags__SWIG_1(long jarg1, ArConfigSection jarg1_, String jarg2);
  public final static native boolean ArConfigSection_remFlag(long jarg1, ArConfigSection jarg1_, String jarg2);
  public final static native long ArConfigSection_findParam__SWIG_0(long jarg1, ArConfigSection jarg1_, String jarg2, boolean jarg3);
  public final static native long ArConfigSection_findParam__SWIG_1(long jarg1, ArConfigSection jarg1_, String jarg2);
  public final static native long ArConfigSection_findParam__SWIG_2(long jarg1, ArConfigSection jarg1_, long jarg2, boolean jarg3);
  public final static native long ArConfigSection_findParam__SWIG_3(long jarg1, ArConfigSection jarg1_, long jarg2);
  public final static native long ArConfigSection_findParam__SWIG_4(long jarg1, ArConfigSection jarg1_, long jarg2, int jarg3, boolean jarg4);
  public final static native long ArConfigSection_findParam__SWIG_5(long jarg1, ArConfigSection jarg1_, long jarg2, int jarg3);
  public final static native boolean ArConfigSection_containsParamsOfPriority(long jarg1, ArConfigSection jarg1_, int jarg2, int jarg3);
  public final static native boolean ArConfigSection_remStringHolder(long jarg1, ArConfigSection jarg1_, String jarg2);
  public final static native void ArConfigSection_setQuiet(long jarg1, ArConfigSection jarg1_, boolean jarg2);
  public final static native int ArConfigArg_LAST_TYPE_get();
  public final static native int ArConfigArg_LAST_RESTART_LEVEL_get();
  public final static native int ArConfigArg_DEFAULT_DOUBLE_PRECISION_get();
  public final static native int ArConfigArg_TYPE_COUNT_get();
  public final static native int ArConfigArg_RESTART_LEVEL_COUNT_get();
  public final static native int ArConfigArg_SOCKET_INDEX_OF_SECTION_NAME_get();
  public final static native int ArConfigArg_SOCKET_INDEX_OF_ARG_NAME_get();
  public final static native int ArConfigArg_SOCKET_INDEX_OF_DESCRIPTION_get();
  public final static native int ArConfigArg_SOCKET_INDEX_OF_PRIORITY_get();
  public final static native int ArConfigArg_SOCKET_INDEX_OF_TYPE_get();
  public final static native int ArConfigArg_SOCKET_INDEX_OF_VALUE_get();
  public final static native int ArConfigArg_SOCKET_INDEX_OF_MIN_VALUE_get();
  public final static native int ArConfigArg_SOCKET_INDEX_OF_MAX_VALUE_get();
  public final static native int ArConfigArg_SOCKET_INDEX_OF_DISPLAY_get();
  public final static native int ArConfigArg_SOCKET_INDEX_OF_PARENT_PATH_get();
  public final static native int ArConfigArg_SOCKET_INDEX_OF_SERIALIZABLE_get();
  public final static native int ArConfigArg_RESOURCE_INDEX_OF_SECTION_NAME_get();
  public final static native int ArConfigArg_RESOURCE_INDEX_OF_ARG_NAME_get();
  public final static native int ArConfigArg_RESOURCE_INDEX_OF_TYPE_get();
  public final static native int ArConfigArg_RESOURCE_INDEX_OF_PRIORITY_get();
  public final static native int ArConfigArg_RESOURCE_INDEX_OF_RESTART_LEVEL_get();
  public final static native int ArConfigArg_RESOURCE_INDEX_OF_PARENT_PATH_get();
  public final static native int ArConfigArg_RESOURCE_INDEX_OF_DESCRIPTION_get();
  public final static native int ArConfigArg_RESOURCE_INDEX_OF_EXTRA_get();
  public final static native int ArConfigArg_RESOURCE_INDEX_OF_DISPLAY_get();
  public final static native int ArConfigArg_RESOURCE_INDEX_OF_NEW_get();
  public final static native void ArConfigArg_LIST_BEGIN_TAG_set(String jarg1);
  public final static native String ArConfigArg_LIST_BEGIN_TAG_get();
  public final static native void ArConfigArg_LIST_END_TAG_set(String jarg1);
  public final static native String ArConfigArg_LIST_END_TAG_get();
  public final static native void ArConfigArg_NULL_TAG_set(String jarg1);
  public final static native String ArConfigArg_NULL_TAG_get();
  public final static native void ArConfigArg_NEW_RESOURCE_TAG_set(String jarg1);
  public final static native String ArConfigArg_NEW_RESOURCE_TAG_get();
  public final static native String ArConfigArg_toString__SWIG_0(int jarg1);
  public final static native String ArConfigArg_toString__SWIG_1(int jarg1);
  public final static native int ArConfigArg_typeFromString(String jarg1);
  public final static native int ArConfigArg_restartLevelFromString(String jarg1);
  public final static native String ArConfigArg_parseResourceSectionName__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, String jarg2);
  public final static native String ArConfigArg_parseResourceSectionName__SWIG_1(long jarg1, ArArgumentBuilder jarg1_);
  public final static native String ArConfigArg_parseResourceArgName__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, String jarg2);
  public final static native String ArConfigArg_parseResourceArgName__SWIG_1(long jarg1, ArArgumentBuilder jarg1_);
  public final static native int ArConfigArg_parseResourceType__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, String jarg2);
  public final static native int ArConfigArg_parseResourceType__SWIG_1(long jarg1, ArArgumentBuilder jarg1_);
  public final static native boolean ArConfigArg_isResourceTopLevel__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, String jarg2);
  public final static native boolean ArConfigArg_isResourceTopLevel__SWIG_1(long jarg1, ArArgumentBuilder jarg1_);
  public final static native long ArConfigArg_parseResourceParentPath__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, char jarg2, String jarg3);
  public final static native long ArConfigArg_parseResourceParentPath__SWIG_1(long jarg1, ArArgumentBuilder jarg1_, char jarg2);
  public final static native long ArConfigArg_parseResourceParentPath__SWIG_2(long jarg1, ArArgumentBuilder jarg1_);
  public final static native String ArConfigArg_parseResourceDescription__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, String jarg2);
  public final static native String ArConfigArg_parseResourceDescription__SWIG_1(long jarg1, ArArgumentBuilder jarg1_);
  public final static native String ArConfigArg_parseResourceExtra__SWIG_0(long jarg1, ArArgumentBuilder jarg1_, String jarg2);
  public final static native String ArConfigArg_parseResourceExtra__SWIG_1(long jarg1, ArArgumentBuilder jarg1_);
  public final static native long new_ArConfigArg__SWIG_0();
  public final static native long new_ArConfigArg__SWIG_1(String jarg1, long jarg2, String jarg3, int jarg4);
  public final static native long new_ArConfigArg__SWIG_2(String jarg1, long jarg2, String jarg3);
  public final static native long new_ArConfigArg__SWIG_3(String jarg1, long jarg2);
  public final static native long new_ArConfigArg__SWIG_4(String jarg1, long jarg2, String jarg3, int jarg4);
  public final static native long new_ArConfigArg__SWIG_5(String jarg1, long jarg2, String jarg3);
  public final static native long new_ArConfigArg__SWIG_6(String jarg1, long jarg2);
  public final static native long new_ArConfigArg__SWIG_7(String jarg1, long jarg2, String jarg3, int jarg4);
  public final static native long new_ArConfigArg__SWIG_8(String jarg1, long jarg2, String jarg3);
  public final static native long new_ArConfigArg__SWIG_9(String jarg1, long jarg2);
  public final static native long new_ArConfigArg__SWIG_10(String jarg1, long jarg2, String jarg3, int jarg4);
  public final static native long new_ArConfigArg__SWIG_11(String jarg1, long jarg2, String jarg3);
  public final static native long new_ArConfigArg__SWIG_12(String jarg1, long jarg2);
  public final static native long new_ArConfigArg__SWIG_13(String jarg1, long jarg2, String jarg3, double jarg4, double jarg5, int jarg6);
  public final static native long new_ArConfigArg__SWIG_14(String jarg1, long jarg2, String jarg3, double jarg4);
  public final static native long new_ArConfigArg__SWIG_15(String jarg1, long jarg2, String jarg3);
  public final static native long new_ArConfigArg__SWIG_16(String jarg1, long jarg2);
  public final static native long new_ArConfigArg__SWIG_17(String jarg1, long jarg2);
  public final static native long new_ArConfigArg__SWIG_18(String jarg1, String jarg2, String jarg3, long jarg4);
  public final static native long new_ArConfigArg__SWIG_19(String jarg1, String jarg2, String jarg3);
  public final static native long new_ArConfigArg__SWIG_20(String jarg1, long jarg2, String jarg3);
  public final static native long new_ArConfigArg__SWIG_21(String jarg1, int jarg2, String jarg3, int jarg4, int jarg5);
  public final static native long new_ArConfigArg__SWIG_22(String jarg1, int jarg2, String jarg3, int jarg4);
  public final static native long new_ArConfigArg__SWIG_23(String jarg1, int jarg2, String jarg3);
  public final static native long new_ArConfigArg__SWIG_24(String jarg1, int jarg2);
  public final static native long new_ArConfigArg__SWIG_25(String jarg1, double jarg2, String jarg3, double jarg4, double jarg5, int jarg6);
  public final static native long new_ArConfigArg__SWIG_26(String jarg1, double jarg2, String jarg3, double jarg4, double jarg5);
  public final static native long new_ArConfigArg__SWIG_27(String jarg1, double jarg2, String jarg3, double jarg4);
  public final static native long new_ArConfigArg__SWIG_28(String jarg1, double jarg2, String jarg3);
  public final static native long new_ArConfigArg__SWIG_29(String jarg1, double jarg2);
  public final static native long new_ArConfigArg__SWIG_30(String jarg1, boolean jarg2, String jarg3);
  public final static native long new_ArConfigArg__SWIG_31(String jarg1, boolean jarg2);
  public final static native long new_ArConfigArg__SWIG_32(String jarg1, long jarg2, ArRetFunctor1_Bool_ArgumentBuilderP jarg2_, long jarg3, String jarg4);
  public final static native long new_ArConfigArg__SWIG_33(String jarg1, int jarg2);
  public final static native long new_ArConfigArg__SWIG_34(String jarg1);
  public final static native long new_ArConfigArg__SWIG_35(String jarg1, String jarg2);
  public final static native long new_ArConfigArg__SWIG_36(int jarg1, String jarg2, String jarg3);
  public final static native long new_ArConfigArg__SWIG_37(int jarg1);
  public final static native void delete_ArConfigArg(long jarg1);
  public final static native long new_ArConfigArg__SWIG_38(String jarg1, long jarg2, ArConfigArg jarg2_);
  public final static native long new_ArConfigArg__SWIG_39(long jarg1, ArConfigArg jarg1_);
  public final static native void ArConfigArg_copyAndDetach(long jarg1, ArConfigArg jarg1_, long jarg2, ArConfigArg jarg2_);
  public final static native boolean ArConfigArg_copyTranslation(long jarg1, ArConfigArg jarg1_, long jarg2, ArConfigArg jarg2_);
  public final static native boolean ArConfigArg_promoteList(long jarg1, ArConfigArg jarg1_, long jarg2, ArConfigArg jarg2_);
  public final static native boolean ArConfigArg_isListType(long jarg1, ArConfigArg jarg1_);
  public final static native int ArConfigArg_getType(long jarg1, ArConfigArg jarg1_);
  public final static native String ArConfigArg_getName(long jarg1, ArConfigArg jarg1_);
  public final static native String ArConfigArg_getDescription(long jarg1, ArConfigArg jarg1_);
  public final static native void ArConfigArg_setDescription(long jarg1, ArConfigArg jarg1_, String jarg2);
  public final static native void ArConfigArg_setExtraExplanation(long jarg1, ArConfigArg jarg1_, String jarg2);
  public final static native String ArConfigArg_getExtraExplanation(long jarg1, ArConfigArg jarg1_);
  public final static native boolean ArConfigArg_setInt__SWIG_0(long jarg1, ArConfigArg jarg1_, int jarg2, String jarg3, long jarg4, boolean jarg5);
  public final static native boolean ArConfigArg_setInt__SWIG_1(long jarg1, ArConfigArg jarg1_, int jarg2, String jarg3, long jarg4);
  public final static native boolean ArConfigArg_setInt__SWIG_2(long jarg1, ArConfigArg jarg1_, int jarg2, String jarg3);
  public final static native boolean ArConfigArg_setInt__SWIG_3(long jarg1, ArConfigArg jarg1_, int jarg2);
  public final static native boolean ArConfigArg_setDouble__SWIG_0(long jarg1, ArConfigArg jarg1_, double jarg2, String jarg3, long jarg4, boolean jarg5);
  public final static native boolean ArConfigArg_setDouble__SWIG_1(long jarg1, ArConfigArg jarg1_, double jarg2, String jarg3, long jarg4);
  public final static native boolean ArConfigArg_setDouble__SWIG_2(long jarg1, ArConfigArg jarg1_, double jarg2, String jarg3);
  public final static native boolean ArConfigArg_setDouble__SWIG_3(long jarg1, ArConfigArg jarg1_, double jarg2);
  public final static native boolean ArConfigArg_setBool__SWIG_0(long jarg1, ArConfigArg jarg1_, boolean jarg2, String jarg3, long jarg4, boolean jarg5);
  public final static native boolean ArConfigArg_setBool__SWIG_1(long jarg1, ArConfigArg jarg1_, boolean jarg2, String jarg3, long jarg4);
  public final static native boolean ArConfigArg_setBool__SWIG_2(long jarg1, ArConfigArg jarg1_, boolean jarg2, String jarg3);
  public final static native boolean ArConfigArg_setBool__SWIG_3(long jarg1, ArConfigArg jarg1_, boolean jarg2);
  public final static native boolean ArConfigArg_setString__SWIG_0(long jarg1, ArConfigArg jarg1_, String jarg2, String jarg3, long jarg4, boolean jarg5);
  public final static native boolean ArConfigArg_setString__SWIG_1(long jarg1, ArConfigArg jarg1_, String jarg2, String jarg3, long jarg4);
  public final static native boolean ArConfigArg_setString__SWIG_2(long jarg1, ArConfigArg jarg1_, String jarg2, String jarg3);
  public final static native boolean ArConfigArg_setString__SWIG_3(long jarg1, ArConfigArg jarg1_, String jarg2);
  public final static native boolean ArConfigArg_setCppString__SWIG_0(long jarg1, ArConfigArg jarg1_, String jarg2, String jarg3, long jarg4, boolean jarg5);
  public final static native boolean ArConfigArg_setCppString__SWIG_1(long jarg1, ArConfigArg jarg1_, String jarg2, String jarg3, long jarg4);
  public final static native boolean ArConfigArg_setCppString__SWIG_2(long jarg1, ArConfigArg jarg1_, String jarg2, String jarg3);
  public final static native boolean ArConfigArg_setCppString__SWIG_3(long jarg1, ArConfigArg jarg1_, String jarg2);
  public final static native boolean ArConfigArg_setArgWithFunctor__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4, boolean jarg5);
  public final static native boolean ArConfigArg_setArgWithFunctor__SWIG_1(long jarg1, ArConfigArg jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4);
  public final static native boolean ArConfigArg_setArgWithFunctor__SWIG_2(long jarg1, ArConfigArg jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3);
  public final static native boolean ArConfigArg_setArgWithFunctor__SWIG_3(long jarg1, ArConfigArg jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native int ArConfigArg_getInt__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native int ArConfigArg_getInt__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native int ArConfigArg_getMinInt__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native int ArConfigArg_getMinInt__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native int ArConfigArg_getMaxInt__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native int ArConfigArg_getMaxInt__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native double ArConfigArg_getDouble__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native double ArConfigArg_getDouble__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native double ArConfigArg_getMinDouble__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native double ArConfigArg_getMinDouble__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native double ArConfigArg_getMaxDouble__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native double ArConfigArg_getMaxDouble__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native int ArConfigArg_getDoublePrecision__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native int ArConfigArg_getDoublePrecision__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native boolean ArConfigArg_getBool__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native boolean ArConfigArg_getBool__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native String ArConfigArg_getString__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native String ArConfigArg_getString__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native long ArConfigArg_getArgsWithFunctor__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native long ArConfigArg_getArgsWithFunctor__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native String ArConfigArg_getCppString__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native String ArConfigArg_getCppString__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native long ArConfigArg_getCppStringPtr__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native long ArConfigArg_getCppStringPtr__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native boolean ArConfigArg_addArg(long jarg1, ArConfigArg jarg1_, long jarg2, ArConfigArg jarg2_);
  public final static native boolean ArConfigArg_removeArg(long jarg1, ArConfigArg jarg1_, long jarg2, ArConfigArg jarg2_);
  public final static native boolean ArConfigArg_hasArgs(long jarg1, ArConfigArg jarg1_);
  public final static native long ArConfigArg_getArgCount(long jarg1, ArConfigArg jarg1_);
  public final static native long ArConfigArg_getDescendantArgCount(long jarg1, ArConfigArg jarg1_);
  public final static native long ArConfigArg_getArgs__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native long ArConfigArg_getArgs__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native long ArConfigArg_getArg__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native long ArConfigArg_findArg__SWIG_0(long jarg1, ArConfigArg jarg1_, String jarg2);
  public final static native boolean ArConfigArg_getAncestorList(long jarg1, ArConfigArg jarg1_, long jarg2);
  public final static native long ArConfigArg_getTopLevelArg(long jarg1, ArConfigArg jarg1_);
  public final static native int ArConfigArg_getConfigPriority(long jarg1, ArConfigArg jarg1_);
  public final static native void ArConfigArg_setConfigPriority(long jarg1, ArConfigArg jarg1_, int jarg2);
  public final static native String ArConfigArg_getDisplayHint(long jarg1, ArConfigArg jarg1_);
  public final static native void ArConfigArg_setDisplayHint(long jarg1, ArConfigArg jarg1_, String jarg2);
  public final static native int ArConfigArg_getRestartLevel(long jarg1, ArConfigArg jarg1_);
  public final static native void ArConfigArg_setRestartLevel(long jarg1, ArConfigArg jarg1_, int jarg2);
  public final static native boolean ArConfigArg_getSuppressChanges(long jarg1, ArConfigArg jarg1_);
  public final static native void ArConfigArg_setSuppressChanges(long jarg1, ArConfigArg jarg1_, boolean jarg2);
  public final static native boolean ArConfigArg_isSerializable(long jarg1, ArConfigArg jarg1_);
  public final static native void ArConfigArg_setSerializable(long jarg1, ArConfigArg jarg1_, boolean jarg2);
  public final static native long ArConfigArg_getParentArg(long jarg1, ArConfigArg jarg1_);
  public final static native String ArConfigArg_getParentPathName__SWIG_0(long jarg1, ArConfigArg jarg1_, char jarg2);
  public final static native String ArConfigArg_getParentPathName__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native long ArConfigArg_splitParentPathName__SWIG_0(String jarg1, char jarg2);
  public final static native long ArConfigArg_splitParentPathName__SWIG_1(String jarg1);
  public final static native void ArConfigArg_replaceSpacesInName(long jarg1, ArConfigArg jarg1_);
  public final static native boolean ArConfigArg_hasMinBound(long jarg1, ArConfigArg jarg1_);
  public final static native boolean ArConfigArg_hasMaxBound(long jarg1, ArConfigArg jarg1_);
  public final static native void ArConfigArg_setIgnoreBounds__SWIG_0(long jarg1, ArConfigArg jarg1_, boolean jarg2);
  public final static native void ArConfigArg_setIgnoreBounds__SWIG_1(long jarg1, ArConfigArg jarg1_);
  public final static native boolean ArConfigArg_hasExternalDataReference(long jarg1, ArConfigArg jarg1_);
  public final static native boolean ArConfigArg_isPlaceholder(long jarg1, ArConfigArg jarg1_);
  public final static native boolean ArConfigArg_addToFileParser__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2, ArFileParser jarg2_, long jarg3, String jarg4, boolean jarg5);
  public final static native boolean ArConfigArg_addToFileParser__SWIG_1(long jarg1, ArConfigArg jarg1_, long jarg2, ArFileParser jarg2_, long jarg3, String jarg4);
  public final static native boolean ArConfigArg_addToFileParser__SWIG_2(long jarg1, ArConfigArg jarg1_, long jarg2, ArFileParser jarg2_, long jarg3);
  public final static native boolean ArConfigArg_parseArgument__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4, String jarg5, boolean jarg6, long jarg7);
  public final static native boolean ArConfigArg_parseArgument__SWIG_1(long jarg1, ArConfigArg jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4, String jarg5, boolean jarg6);
  public final static native boolean ArConfigArg_parseArgument__SWIG_2(long jarg1, ArConfigArg jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4, String jarg5);
  public final static native boolean ArConfigArg_parseArgument__SWIG_3(long jarg1, ArConfigArg jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4);
  public final static native boolean ArConfigArg_writeArguments__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2, String jarg3, int jarg4, int jarg5, boolean jarg6, String jarg7, int jarg8);
  public final static native boolean ArConfigArg_writeArguments__SWIG_1(long jarg1, ArConfigArg jarg1_, long jarg2, String jarg3, int jarg4, int jarg5, boolean jarg6, String jarg7);
  public final static native boolean ArConfigArg_writeArguments__SWIG_2(long jarg1, ArConfigArg jarg1_, long jarg2, String jarg3, int jarg4, int jarg5, boolean jarg6);
  public final static native boolean ArConfigArg_writeArguments__SWIG_3(long jarg1, ArConfigArg jarg1_, long jarg2, String jarg3, int jarg4, int jarg5);
  public final static native boolean ArConfigArg_writeName(long jarg1, ArConfigArg jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native boolean ArConfigArg_writeBounds__SWIG_0(long jarg1, ArConfigArg jarg1_, String jarg2, long jarg3, String jarg4);
  public final static native boolean ArConfigArg_writeBounds__SWIG_1(long jarg1, ArConfigArg jarg1_, String jarg2, long jarg3);
  public final static native boolean ArConfigArg_isNone(String jarg1);
  public final static native boolean ArConfigArg_parseSocket(long jarg1, ArConfigArg jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4);
  public final static native boolean ArConfigArg_writeValue(long jarg1, ArConfigArg jarg1_, long jarg2, ArSocket jarg2_, String jarg3);
  public final static native boolean ArConfigArg_writeInfo(long jarg1, ArConfigArg jarg1_, long jarg2, ArSocket jarg2_, String jarg3);
  public final static native void ArConfigArg_log__SWIG_0(long jarg1, ArConfigArg jarg1_, boolean jarg2, int jarg3, String jarg4);
  public final static native void ArConfigArg_log__SWIG_1(long jarg1, ArConfigArg jarg1_, boolean jarg2, int jarg3);
  public final static native void ArConfigArg_log__SWIG_2(long jarg1, ArConfigArg jarg1_, boolean jarg2);
  public final static native void ArConfigArg_log__SWIG_3(long jarg1, ArConfigArg jarg1_);
  public final static native boolean ArConfigArg_isValueEqual(long jarg1, ArConfigArg jarg1_, long jarg2, ArConfigArg jarg2_);
  public final static native boolean ArConfigArg_setValue__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2, ArConfigArg jarg2_, boolean jarg3);
  public final static native boolean ArConfigArg_setValue__SWIG_1(long jarg1, ArConfigArg jarg1_, long jarg2, ArConfigArg jarg2_);
  public final static native boolean ArConfigArg_isValueSet(long jarg1, ArConfigArg jarg1_);
  public final static native void ArConfigArg_clearValueSet(long jarg1, ArConfigArg jarg1_);
  public final static native void ArConfigArg_setValueSet(long jarg1, ArConfigArg jarg1_);
  public final static native boolean ArConfigArg_isTranslated(long jarg1, ArConfigArg jarg1_);
  public final static native void ArConfigArg_setTranslated(long jarg1, ArConfigArg jarg1_, boolean jarg2);
  public final static native int ArConfigArg_MAX_RESOURCE_ARG_TEXT_LENGTH_get();
  public final static native boolean ArConfigArg_parseResource__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4, String jarg5, boolean jarg6);
  public final static native boolean ArConfigArg_parseResource__SWIG_1(long jarg1, ArConfigArg jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4, String jarg5);
  public final static native boolean ArConfigArg_parseResource__SWIG_2(long jarg1, ArConfigArg jarg1_, long jarg2, ArArgumentBuilder jarg2_, String jarg3, long jarg4);
  public final static native boolean ArConfigArg_parseResourceArgText(String jarg1, String jarg2, long jarg3);
  public final static native boolean ArConfigArg_writeResource__SWIG_0(long jarg1, ArConfigArg jarg1_, long jarg2, String jarg3, int jarg4, char jarg5, String jarg6, String jarg7);
  public final static native boolean ArConfigArg_writeResource__SWIG_1(long jarg1, ArConfigArg jarg1_, long jarg2, String jarg3, int jarg4, char jarg5, String jarg6);
  public final static native int ArConfigArg_writeResourceHeader__SWIG_0(long jarg1, String jarg2, int jarg3, char jarg4, String jarg5, String jarg6);
  public final static native int ArConfigArg_writeResourceHeader__SWIG_1(long jarg1, String jarg2, int jarg3, char jarg4, String jarg5);
  public final static native int ArConfigArg_writeResourceSectionHeader__SWIG_0(long jarg1, String jarg2, int jarg3, char jarg4, String jarg5, String jarg6, String jarg7, String jarg8, boolean jarg9, String jarg10);
  public final static native int ArConfigArg_writeResourceSectionHeader__SWIG_1(long jarg1, String jarg2, int jarg3, char jarg4, String jarg5, String jarg6, String jarg7, String jarg8, boolean jarg9);
  public final static native long new_ArConfigGroup__SWIG_0(String jarg1);
  public final static native long new_ArConfigGroup__SWIG_1();
  public final static native void delete_ArConfigGroup(long jarg1);
  public final static native void ArConfigGroup_addConfig(long jarg1, ArConfigGroup jarg1_, long jarg2, ArConfig jarg2_);
  public final static native void ArConfigGroup_remConfig(long jarg1, ArConfigGroup jarg1_, long jarg2, ArConfig jarg2_);
  public final static native boolean ArConfigGroup_parseFile__SWIG_0(long jarg1, ArConfigGroup jarg1_, String jarg2, boolean jarg3);
  public final static native boolean ArConfigGroup_parseFile__SWIG_1(long jarg1, ArConfigGroup jarg1_, String jarg2);
  public final static native boolean ArConfigGroup_reloadFile__SWIG_0(long jarg1, ArConfigGroup jarg1_, boolean jarg2);
  public final static native boolean ArConfigGroup_reloadFile__SWIG_1(long jarg1, ArConfigGroup jarg1_);
  public final static native boolean ArConfigGroup_writeFile(long jarg1, ArConfigGroup jarg1_, String jarg2);
  public final static native void ArConfigGroup_setBaseDirectory(long jarg1, ArConfigGroup jarg1_, String jarg2);
  public final static native String ArConfigGroup_getBaseDirectory(long jarg1, ArConfigGroup jarg1_);
  public final static native long new_ArDataLogger__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2);
  public final static native long new_ArDataLogger__SWIG_1(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArDataLogger(long jarg1);
  public final static native void ArDataLogger_addToConfig(long jarg1, ArDataLogger jarg1_, long jarg2, ArConfig jarg2_);
  public final static native void ArDataLogger_addString(long jarg1, ArDataLogger jarg1_, String jarg2, int jarg3, long jarg4);
  public final static native long ArDataLogger_getAddStringFunctor(long jarg1, ArDataLogger jarg1_);
  public final static native int ArDPPTUCommands_DELIM_get();
  public final static native int ArDPPTUCommands_INIT_get();
  public final static native int ArDPPTUCommands_ACCEL_get();
  public final static native int ArDPPTUCommands_BASE_get();
  public final static native int ArDPPTUCommands_CONTROL_get();
  public final static native int ArDPPTUCommands_DISABLE_get();
  public final static native int ArDPPTUCommands_ENABLE_get();
  public final static native int ArDPPTUCommands_FACTORY_get();
  public final static native int ArDPPTUCommands_HALT_get();
  public final static native int ArDPPTUCommands_IMMED_get();
  public final static native int ArDPPTUCommands_LIMIT_get();
  public final static native int ArDPPTUCommands_MONITOR_get();
  public final static native int ArDPPTUCommands_OFFSET_get();
  public final static native int ArDPPTUCommands_PAN_get();
  public final static native int ArDPPTUCommands_RESET_get();
  public final static native int ArDPPTUCommands_SPEED_get();
  public final static native int ArDPPTUCommands_TILT_get();
  public final static native int ArDPPTUCommands_UPPER_get();
  public final static native int ArDPPTUCommands_VELOCITY_get();
  public final static native long new_ArDPPTUCommands();
  public final static native void delete_ArDPPTUCommands(long jarg1);
  public final static native long new_ArDPPTUPacket__SWIG_0(int jarg1);
  public final static native long new_ArDPPTUPacket__SWIG_1();
  public final static native void delete_ArDPPTUPacket(long jarg1);
  public final static native void ArDPPTUPacket_byte2ToBuf(long jarg1, ArDPPTUPacket jarg1_, int jarg2);
  public final static native void ArDPPTUPacket_finalizePacket(long jarg1, ArDPPTUPacket jarg1_);
  public final static native int ArDPPTU_PAN_get();
  public final static native int ArDPPTU_TILT_get();
  public final static native long new_ArDPPTU__SWIG_0(long jarg1, ArRobot jarg1_, int jarg2, int jarg3);
  public final static native long new_ArDPPTU__SWIG_1(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long new_ArDPPTU__SWIG_2(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArDPPTU(long jarg1);
  public final static native boolean ArDPPTU_init(long jarg1, ArDPPTU jarg1_);
  public final static native String ArDPPTU_getTypeName(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_canZoom(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_canGetRealPanTilt(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_blank(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_resetCalib(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_disableReset(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_resetTilt(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_resetPan(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_resetAll(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_enMon(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_disMon(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_saveSet(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_restoreSet(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_factorySet(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_awaitExec(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_haltAll(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_haltPan(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_haltTilt(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_initMon(long jarg1, ArDPPTU jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native boolean ArDPPTU_limitEnforce(long jarg1, ArDPPTU jarg1_, boolean jarg2);
  public final static native boolean ArDPPTU_immedExec(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_slaveExec(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getMaxPanSlew(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getMaxPanSpeed(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getMinPanSlew(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getMaxTiltSlew(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getMaxTiltSpeed(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getMinTiltSlew(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getMaxPanAccel(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getMinPanAccel(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getMaxTiltAccel(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getMinTiltAccel(long jarg1, ArDPPTU jarg1_);
  public final static native int ArDPPTU_OFF_get();
  public final static native int ArDPPTU_LOW_get();
  public final static native int ArDPPTU_NORMAL_get();
  public final static native int ArDPPTU_HIGH_get();
  public final static native boolean ArDPPTU_setMovePower(long jarg1, ArDPPTU jarg1_, int jarg2, int jarg3);
  public final static native boolean ArDPPTU_setHoldPower(long jarg1, ArDPPTU jarg1_, int jarg2, int jarg3);
  public final static native boolean ArDPPTU_offStatPower(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_regStatPower(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_lowStatPower(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_highMotPower(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_regMotPower(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_lowMotPower(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_panAccel(long jarg1, ArDPPTU jarg1_, double jarg2);
  public final static native boolean ArDPPTU_tiltAccel(long jarg1, ArDPPTU jarg1_, double jarg2);
  public final static native boolean ArDPPTU_basePanSlew(long jarg1, ArDPPTU jarg1_, double jarg2);
  public final static native boolean ArDPPTU_baseTiltSlew(long jarg1, ArDPPTU jarg1_, double jarg2);
  public final static native boolean ArDPPTU_upperPanSlew(long jarg1, ArDPPTU jarg1_, double jarg2);
  public final static native boolean ArDPPTU_lowerPanSlew(long jarg1, ArDPPTU jarg1_, double jarg2);
  public final static native boolean ArDPPTU_upperTiltSlew(long jarg1, ArDPPTU jarg1_, double jarg2);
  public final static native boolean ArDPPTU_lowerTiltSlew(long jarg1, ArDPPTU jarg1_, double jarg2);
  public final static native boolean ArDPPTU_indepMove(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_velMove(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_panSlew(long jarg1, ArDPPTU jarg1_, double jarg2);
  public final static native boolean ArDPPTU_tiltSlew(long jarg1, ArDPPTU jarg1_, double jarg2);
  public final static native boolean ArDPPTU_canPanTiltSlew(long jarg1, ArDPPTU jarg1_);
  public final static native boolean ArDPPTU_panSlewRel(long jarg1, ArDPPTU jarg1_, double jarg2);
  public final static native boolean ArDPPTU_tiltSlewRel(long jarg1, ArDPPTU jarg1_, double jarg2);
  public final static native double ArDPPTU_getLastPanRequest(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getLastTiltRequest(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getPanSlew(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getTiltSlew(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getBasePanSlew(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getBaseTiltSlew(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getPanAccel(long jarg1, ArDPPTU jarg1_);
  public final static native double ArDPPTU_getTiltAccel(long jarg1, ArDPPTU jarg1_);
  public final static native void ArDPPTU_query(long jarg1, ArDPPTU jarg1_);
  public final static native void delete_ArDeviceConnection(long jarg1);
  public final static native int ArDeviceConnection_read__SWIG_0(long jarg1, ArDeviceConnection jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native int ArDeviceConnection_read__SWIG_1(long jarg1, ArDeviceConnection jarg1_, String jarg2, long jarg3);
  public final static native int ArDeviceConnection_writePacket(long jarg1, ArDeviceConnection jarg1_, long jarg2, ArBasePacket jarg2_);
  public final static native int ArDeviceConnection_write(long jarg1, ArDeviceConnection jarg1_, String jarg2, long jarg3);
  public final static native int ArDeviceConnection_getStatus(long jarg1, ArDeviceConnection jarg1_);
  public final static native String ArDeviceConnection_getStatusMessage(long jarg1, ArDeviceConnection jarg1_, int jarg2);
  public final static native boolean ArDeviceConnection_openSimple(long jarg1, ArDeviceConnection jarg1_);
  public final static native boolean ArDeviceConnection_close(long jarg1, ArDeviceConnection jarg1_);
  public final static native String ArDeviceConnection_getOpenMessage(long jarg1, ArDeviceConnection jarg1_, int jarg2);
  public final static native int ArDeviceConnection_STATUS_NEVER_OPENED_get();
  public final static native long ArDeviceConnection_getTimeRead(long jarg1, ArDeviceConnection jarg1_, int jarg2);
  public final static native boolean ArDeviceConnection_isTimeStamping(long jarg1, ArDeviceConnection jarg1_);
  public final static native String ArDeviceConnection_getPortName(long jarg1, ArDeviceConnection jarg1_);
  public final static native String ArDeviceConnection_getPortType(long jarg1, ArDeviceConnection jarg1_);
  public final static native void ArDeviceConnection_setDeviceName(long jarg1, ArDeviceConnection jarg1_, String jarg2);
  public final static native String ArDeviceConnection_getDeviceName(long jarg1, ArDeviceConnection jarg1_);
  public final static native void ArDeviceConnection_debugStartPacket(long jarg1, ArDeviceConnection jarg1_);
  public final static native void ArDeviceConnection_debugBytesRead(long jarg1, ArDeviceConnection jarg1_, int jarg2);
  public final static native void ArDeviceConnection_debugEndPacket__SWIG_0(long jarg1, ArDeviceConnection jarg1_, boolean jarg2, int jarg3);
  public final static native void ArDeviceConnection_debugEndPacket__SWIG_1(long jarg1, ArDeviceConnection jarg1_, boolean jarg2);
  public final static native boolean ArDeviceConnection_debugShouldLog(boolean jarg1);
  public final static native long new_ArColor__SWIG_0(short jarg1, short jarg2, short jarg3);
  public final static native long new_ArColor__SWIG_1();
  public final static native long new_ArColor__SWIG_2(int jarg1);
  public final static native void delete_ArColor(long jarg1);
  public final static native short ArColor_getRed(long jarg1, ArColor jarg1_);
  public final static native short ArColor_getGreen(long jarg1, ArColor jarg1_);
  public final static native short ArColor_getBlue(long jarg1, ArColor jarg1_);
  public final static native int ArColor_colorToByte4(long jarg1, ArColor jarg1_);
  public final static native int ArDrawingData_DEFAULT_REFRESH_TIME_get();
  public final static native long new_ArDrawingData__SWIG_0(String jarg1, long jarg2, ArColor jarg2_, int jarg3, int jarg4, long jarg5, String jarg6);
  public final static native long new_ArDrawingData__SWIG_1(String jarg1, long jarg2, ArColor jarg2_, int jarg3, int jarg4, long jarg5);
  public final static native long new_ArDrawingData__SWIG_2(String jarg1, long jarg2, ArColor jarg2_, int jarg3, int jarg4);
  public final static native long new_ArDrawingData__SWIG_3(String jarg1, long jarg2, ArColor jarg2_, int jarg3, int jarg4, long jarg5, long jarg6, ArColor jarg6_, String jarg7);
  public final static native long new_ArDrawingData__SWIG_4(String jarg1, long jarg2, ArColor jarg2_, int jarg3, int jarg4, long jarg5, long jarg6, ArColor jarg6_);
  public final static native void delete_ArDrawingData(long jarg1);
  public final static native String ArDrawingData_getShape(long jarg1, ArDrawingData jarg1_);
  public final static native long ArDrawingData_getPrimaryColor(long jarg1, ArDrawingData jarg1_);
  public final static native int ArDrawingData_getSize(long jarg1, ArDrawingData jarg1_);
  public final static native int ArDrawingData_getLayer(long jarg1, ArDrawingData jarg1_);
  public final static native long ArDrawingData_getDefaultRefreshTime(long jarg1, ArDrawingData jarg1_);
  public final static native long ArDrawingData_getSecondaryColor(long jarg1, ArDrawingData jarg1_);
  public final static native String ArDrawingData_getVisibility(long jarg1, ArDrawingData jarg1_);
  public final static native void ArDrawingData_setShape(long jarg1, ArDrawingData jarg1_, String jarg2);
  public final static native void ArDrawingData_setPrimaryColor(long jarg1, ArDrawingData jarg1_, long jarg2, ArColor jarg2_);
  public final static native void ArDrawingData_setSize(long jarg1, ArDrawingData jarg1_, int jarg2);
  public final static native void ArDrawingData_setLayer(long jarg1, ArDrawingData jarg1_, int jarg2);
  public final static native void ArDrawingData_setDefaultRefreshTime(long jarg1, ArDrawingData jarg1_, long jarg2);
  public final static native void ArDrawingData_setSecondaryColor(long jarg1, ArDrawingData jarg1_, long jarg2, ArColor jarg2_);
  public final static native void ArDrawingData_setVisibility(long jarg1, ArDrawingData jarg1_, String jarg2);
  public final static native long new_ArFileParser__SWIG_0(String jarg1, boolean jarg2);
  public final static native long new_ArFileParser__SWIG_1(String jarg1);
  public final static native long new_ArFileParser__SWIG_2();
  public final static native void delete_ArFileParser(long jarg1);
  public final static native boolean ArFileParser_addHandler(long jarg1, ArFileParser jarg1_, String jarg2, long jarg3, ArRetFunctor1_Bool_ArgumentBuilderP jarg3_);
  public final static native boolean ArFileParser_addHandlerWithError(long jarg1, ArFileParser jarg1_, String jarg2, long jarg3);
  public final static native boolean ArFileParser_remHandler__SWIG_0(long jarg1, ArFileParser jarg1_, String jarg2, boolean jarg3);
  public final static native boolean ArFileParser_remHandler__SWIG_1(long jarg1, ArFileParser jarg1_, String jarg2);
  public final static native boolean ArFileParser_remHandler__SWIG_2(long jarg1, ArFileParser jarg1_, long jarg2, ArRetFunctor1_Bool_ArgumentBuilderP jarg2_);
  public final static native boolean ArFileParser_remHandler__SWIG_3(long jarg1, ArFileParser jarg1_, long jarg2);
  public final static native void ArFileParser_setPreParseFunctor(long jarg1, ArFileParser jarg1_, long jarg2, ArFunctor1_CString jarg2_);
  public final static native boolean ArFileParser_parseFile__SWIG_0(long jarg1, ArFileParser jarg1_, String jarg2, boolean jarg3, boolean jarg4, String jarg5, long jarg6);
  public final static native boolean ArFileParser_parseFile__SWIG_1(long jarg1, ArFileParser jarg1_, String jarg2, boolean jarg3, boolean jarg4, String jarg5);
  public final static native boolean ArFileParser_parseFile__SWIG_2(long jarg1, ArFileParser jarg1_, String jarg2, boolean jarg3, boolean jarg4);
  public final static native boolean ArFileParser_parseFile__SWIG_3(long jarg1, ArFileParser jarg1_, String jarg2, boolean jarg3);
  public final static native boolean ArFileParser_parseFile__SWIG_4(long jarg1, ArFileParser jarg1_, String jarg2);
  public final static native boolean ArFileParser_parseFile__SWIG_5(long jarg1, ArFileParser jarg1_, long jarg2, String jarg3, int jarg4, boolean jarg5, String jarg6, long jarg7);
  public final static native boolean ArFileParser_parseFile__SWIG_6(long jarg1, ArFileParser jarg1_, long jarg2, String jarg3, int jarg4, boolean jarg5, String jarg6);
  public final static native boolean ArFileParser_parseFile__SWIG_7(long jarg1, ArFileParser jarg1_, long jarg2, String jarg3, int jarg4, boolean jarg5);
  public final static native boolean ArFileParser_parseFile__SWIG_8(long jarg1, ArFileParser jarg1_, long jarg2, String jarg3, int jarg4);
  public final static native void ArFileParser_cancelParsing(long jarg1, ArFileParser jarg1_);
  public final static native String ArFileParser_getBaseDirectory(long jarg1, ArFileParser jarg1_);
  public final static native void ArFileParser_setBaseDirectory(long jarg1, ArFileParser jarg1_, String jarg2);
  public final static native void ArFileParser_setCommentDelimiters(long jarg1, ArFileParser jarg1_, long jarg2);
  public final static native void ArFileParser_clearCommentDelimiters(long jarg1, ArFileParser jarg1_);
  public final static native boolean ArFileParser_parseLine__SWIG_0(long jarg1, ArFileParser jarg1_, String jarg2, String jarg3, long jarg4);
  public final static native boolean ArFileParser_parseLine__SWIG_1(long jarg1, ArFileParser jarg1_, String jarg2, String jarg3);
  public final static native boolean ArFileParser_parseLine__SWIG_2(long jarg1, ArFileParser jarg1_, String jarg2);
  public final static native void ArFileParser_resetCounters(long jarg1, ArFileParser jarg1_);
  public final static native void ArFileParser_setMaxNumArguments__SWIG_0(long jarg1, ArFileParser jarg1_, long jarg2);
  public final static native void ArFileParser_setMaxNumArguments__SWIG_1(long jarg1, ArFileParser jarg1_);
  public final static native void ArFileParser_setQuiet(long jarg1, ArFileParser jarg1_, boolean jarg2);
  public final static native long new_ArForbiddenRangeDevice__SWIG_0(long jarg1, ArMapInterface jarg1_, double jarg2, long jarg3, String jarg4);
  public final static native long new_ArForbiddenRangeDevice__SWIG_1(long jarg1, ArMapInterface jarg1_, double jarg2, long jarg3);
  public final static native long new_ArForbiddenRangeDevice__SWIG_2(long jarg1, ArMapInterface jarg1_, double jarg2);
  public final static native long new_ArForbiddenRangeDevice__SWIG_3(long jarg1, ArMapInterface jarg1_);
  public final static native void delete_ArForbiddenRangeDevice(long jarg1);
  public final static native void ArForbiddenRangeDevice_processMap(long jarg1, ArForbiddenRangeDevice jarg1_);
  public final static native void ArForbiddenRangeDevice_processReadings(long jarg1, ArForbiddenRangeDevice jarg1_);
  public final static native void ArForbiddenRangeDevice_setRobot(long jarg1, ArForbiddenRangeDevice jarg1_, long jarg2, ArRobot jarg2_);
  public final static native void ArForbiddenRangeDevice_enable(long jarg1, ArForbiddenRangeDevice jarg1_);
  public final static native void ArForbiddenRangeDevice_disable(long jarg1, ArForbiddenRangeDevice jarg1_);
  public final static native boolean ArForbiddenRangeDevice_isEnabled(long jarg1, ArForbiddenRangeDevice jarg1_);
  public final static native long ArForbiddenRangeDevice_getEnableCB(long jarg1, ArForbiddenRangeDevice jarg1_);
  public final static native long ArForbiddenRangeDevice_getDisableCB(long jarg1, ArForbiddenRangeDevice jarg1_);
  public final static native long new_ArFunctorASyncTask(long jarg1, ArRetFunctor1_VoidP_VoidP jarg1_);
  public final static native void delete_ArFunctorASyncTask(long jarg1);
  public final static native long ArFunctorASyncTask_runThread(long jarg1, ArFunctorASyncTask jarg1_, long jarg2);
  public final static native long new_ArGPS();
  public final static native void delete_ArGPS(long jarg1);
  public final static native void ArGPS_setDeviceConnection(long jarg1, ArGPS jarg1_, long jarg2, ArDeviceConnection jarg2_);
  public final static native long ArGPS_getDeviceConnection(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_connect__SWIG_0(long jarg1, ArGPS jarg1_, long jarg2);
  public final static native boolean ArGPS_connect__SWIG_1(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_blockingConnect__SWIG_0(long jarg1, ArGPS jarg1_, long jarg2);
  public final static native boolean ArGPS_blockingConnect__SWIG_1(long jarg1, ArGPS jarg1_);
  public final static native int ArGPS_ReadFinished_get();
  public final static native int ArGPS_ReadError_get();
  public final static native int ArGPS_ReadData_get();
  public final static native int ArGPS_ReadUpdated_get();
  public final static native void ArGPS_ReadFlags_set(long jarg1, ArGPS jarg1_, int jarg2);
  public final static native int ArGPS_ReadFlags_get(long jarg1, ArGPS jarg1_);
  public final static native int ArGPS_read__SWIG_0(long jarg1, ArGPS jarg1_, long jarg2);
  public final static native int ArGPS_read__SWIG_1(long jarg1, ArGPS jarg1_);
  public final static native int ArGPS_readWithLock(long jarg1, ArGPS jarg1_, long jarg2);
  public final static native void ArGPS_lock(long jarg1, ArGPS jarg1_);
  public final static native void ArGPS_unlock(long jarg1, ArGPS jarg1_);
  public final static native void ArGPS_setIgnoreChecksum(long jarg1, ArGPS jarg1_, boolean jarg2);
  public final static native void ArGPS_logData(long jarg1, ArGPS jarg1_);
  public final static native void ArGPS_printData__SWIG_0(long jarg1, ArGPS jarg1_, boolean jarg2);
  public final static native void ArGPS_printData__SWIG_1(long jarg1, ArGPS jarg1_);
  public final static native void ArGPS_printDataLabelsHeader(long jarg1, ArGPS jarg1_);
  public final static native int ArGPS_OmnistarConverging_get();
  public final static native int ArGPS_OmnistarConverged_get();
  public final static native long ArGPS_getCurrentDataRef(long jarg1, ArGPS jarg1_);
  public final static native int ArGPS_getFixType(long jarg1, ArGPS jarg1_);
  public final static native String ArGPS_getFixTypeName__SWIG_0(long jarg1, ArGPS jarg1_);
  public final static native String ArGPS_getFixTypeName__SWIG_1(int jarg1);
  public final static native boolean ArGPS_havePosition(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveLatitude(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveLongitude(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getLatitude(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getLongitude(long jarg1, ArGPS jarg1_);
  public final static native long ArGPS_getTimeReceivedPosition(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveSpeed(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getSpeed(long jarg1, ArGPS jarg1_);
  public final static native long ArGPS_getGPSPositionTimestamp(long jarg1, ArGPS jarg1_);
  public final static native int ArGPS_getNumSatellitesTracked(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveDGPSStation(long jarg1, ArGPS jarg1_);
  public final static native int ArGPS_getDGPSStationID(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveGarminPositionError(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getGarminPositionError(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveGarminVerticalPositionError(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getGarminVerticalPositionError(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveCompassHeadingMag(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveCompassHeadingTrue(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getCompassHeadingMag(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getCompassHeadingTrue(long jarg1, ArGPS jarg1_);
  public final static native void ArGPS_setCompassHeadingMag(long jarg1, ArGPS jarg1_, double jarg2);
  public final static native void ArGPS_setCompassHeadingTrue(long jarg1, ArGPS jarg1_, double jarg2);
  public final static native void ArGPS_setCompassHeadingMagWithLock(long jarg1, ArGPS jarg1_, double jarg2);
  public final static native void ArGPS_setCompassHeadingTrueWithLock(long jarg1, ArGPS jarg1_, double jarg2);
  public final static native boolean ArGPS_haveAltitude(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getAltitude(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveAltimeter(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getAltimeter(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveHDOP(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getHDOP(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveVDOP(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getVDOP(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_havePDOP(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getPDOP(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveSNR(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getMeanSNR(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveBeaconInfo(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getBeaconSignalStrength(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getBeaconSNR(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getBeaconFreq(long jarg1, ArGPS jarg1_);
  public final static native int ArGPS_getBecaonBPS(long jarg1, ArGPS jarg1_);
  public final static native int ArGPS_getBeaconChannel(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveErrorEllipse(long jarg1, ArGPS jarg1_);
  public final static native long ArGPS_getErrorEllipse(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveLatLonError(long jarg1, ArGPS jarg1_);
  public final static native long ArGPS_getLatLonError(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getLatitudeError(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getLongitudeError(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveAltitudeError(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getAltitudeError(long jarg1, ArGPS jarg1_);
  public final static native boolean ArGPS_haveInputsRMS(long jarg1, ArGPS jarg1_);
  public final static native double ArGPS_getInputsRMS(long jarg1, ArGPS jarg1_);
  public final static native void ArGPS_addNMEAHandler(long jarg1, ArGPS jarg1_, String jarg2, long jarg3);
  public final static native void ArGPS_removeNMEAHandler(long jarg1, ArGPS jarg1_, String jarg2);
  public final static native void ArGPS_replaceNMEAHandler(long jarg1, ArGPS jarg1_, String jarg2, long jarg3);
  public final static native long new_ArSimulatedGPS__SWIG_0(long jarg1, ArRobot jarg1_);
  public final static native long new_ArSimulatedGPS__SWIG_1();
  public final static native void delete_ArSimulatedGPS(long jarg1);
  public final static native void ArSimulatedGPS_setDummyPosition__SWIG_0(long jarg1, ArSimulatedGPS jarg1_, double jarg2, double jarg3);
  public final static native void ArSimulatedGPS_clearDummyPosition(long jarg1, ArSimulatedGPS jarg1_);
  public final static native void ArSimulatedGPS_clearPosition(long jarg1, ArSimulatedGPS jarg1_);
  public final static native void ArSimulatedGPS_setDummyPosition__SWIG_1(long jarg1, ArSimulatedGPS jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArSimulatedGPS_setDummyPosition__SWIG_2(long jarg1, ArSimulatedGPS jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native void ArSimulatedGPS_setDummyPositionFromArgs(long jarg1, ArSimulatedGPS jarg1_, long jarg2, ArArgumentBuilder jarg2_);
  public final static native boolean ArSimulatedGPS_connect__SWIG_0(long jarg1, ArSimulatedGPS jarg1_, long jarg2);
  public final static native boolean ArSimulatedGPS_connect__SWIG_1(long jarg1, ArSimulatedGPS jarg1_);
  public final static native boolean ArSimulatedGPS_initDevice(long jarg1, ArSimulatedGPS jarg1_);
  public final static native int ArSimulatedGPS_read__SWIG_0(long jarg1, ArSimulatedGPS jarg1_, long jarg2);
  public final static native int ArSimulatedGPS_read__SWIG_1(long jarg1, ArSimulatedGPS jarg1_);
  public final static native long new_ArGPSConnector(long jarg1, ArArgumentParser jarg1_);
  public final static native void delete_ArGPSConnector(long jarg1);
  public final static native boolean ArGPSConnector_parseArgs(long jarg1, ArGPSConnector jarg1_);
  public final static native long ArGPSConnector_createGPS__SWIG_0(long jarg1, ArGPSConnector jarg1_, long jarg2, ArRobot jarg2_);
  public final static native long ArGPSConnector_createGPS__SWIG_1(long jarg1, ArGPSConnector jarg1_);
  public final static native long ArGPSConnector_create__SWIG_0(long jarg1, ArGPSConnector jarg1_, long jarg2, ArRobot jarg2_);
  public final static native long ArGPSConnector_create__SWIG_1(long jarg1, ArGPSConnector jarg1_);
  public final static native int ArGPSConnector_getGPSType(long jarg1, ArGPSConnector jarg1_);
  public final static native long new_Ar3DPoint__SWIG_0();
  public final static native long new_Ar3DPoint__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native void delete_Ar3DPoint(long jarg1);
  public final static native double Ar3DPoint_dot(long jarg1, Ar3DPoint jarg1_, long jarg2, Ar3DPoint jarg2_);
  public final static native long Ar3DPoint_cross(long jarg1, Ar3DPoint jarg1_, long jarg2, Ar3DPoint jarg2_);
  public final static native void Ar3DPoint_print__SWIG_0(long jarg1, Ar3DPoint jarg1_, String jarg2);
  public final static native void Ar3DPoint_print__SWIG_1(long jarg1, Ar3DPoint jarg1_);
  public final static native double Ar3DPoint_getX(long jarg1, Ar3DPoint jarg1_);
  public final static native double Ar3DPoint_getY(long jarg1, Ar3DPoint jarg1_);
  public final static native double Ar3DPoint_getZ(long jarg1, Ar3DPoint jarg1_);
  public final static native void Ar3DPoint_setX(long jarg1, Ar3DPoint jarg1_, double jarg2);
  public final static native void Ar3DPoint_setY(long jarg1, Ar3DPoint jarg1_, double jarg2);
  public final static native void Ar3DPoint_setZ(long jarg1, Ar3DPoint jarg1_, double jarg2);
  public final static native long new_ArWGS84();
  public final static native double ArWGS84_getE();
  public final static native double ArWGS84_getA();
  public final static native double ArWGS84_getB();
  public final static native double ArWGS84_getEP();
  public final static native double ArWGS84_get1byf();
  public final static native double ArWGS84_getOmega();
  public final static native double ArWGS84_getGM();
  public final static native void delete_ArWGS84(long jarg1);
  public final static native long new_ArECEFCoords(double jarg1, double jarg2, double jarg3);
  public final static native long ArECEFCoords_ECEF2LLA(long jarg1, ArECEFCoords jarg1_);
  public final static native long ArECEFCoords_ECEF2ENU(long jarg1, ArECEFCoords jarg1_, long jarg2, ArECEFCoords jarg2_);
  public final static native void delete_ArECEFCoords(long jarg1);
  public final static native long new_ArLLACoords__SWIG_0();
  public final static native long new_ArLLACoords__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long ArLLACoords_LLA2ECEF(long jarg1, ArLLACoords jarg1_);
  public final static native double ArLLACoords_getLatitude(long jarg1, ArLLACoords jarg1_);
  public final static native double ArLLACoords_getLongitude(long jarg1, ArLLACoords jarg1_);
  public final static native double ArLLACoords_getAltitude(long jarg1, ArLLACoords jarg1_);
  public final static native void ArLLACoords_setLatitude(long jarg1, ArLLACoords jarg1_, double jarg2);
  public final static native void ArLLACoords_setLongitude(long jarg1, ArLLACoords jarg1_, double jarg2);
  public final static native void ArLLACoords_setAltitude(long jarg1, ArLLACoords jarg1_, double jarg2);
  public final static native void delete_ArLLACoords(long jarg1);
  public final static native long new_ArENUCoords(double jarg1, double jarg2, double jarg3);
  public final static native long ArENUCoords_ENU2ECEF(long jarg1, ArENUCoords jarg1_, long jarg2, ArLLACoords jarg2_);
  public final static native double ArENUCoords_getEast(long jarg1, ArENUCoords jarg1_);
  public final static native double ArENUCoords_getNorth(long jarg1, ArENUCoords jarg1_);
  public final static native double ArENUCoords_getUp(long jarg1, ArENUCoords jarg1_);
  public final static native void ArENUCoords_setEast(long jarg1, ArENUCoords jarg1_, double jarg2);
  public final static native void ArENUCoords_setNorth(long jarg1, ArENUCoords jarg1_, double jarg2);
  public final static native void ArENUCoords_setUp(long jarg1, ArENUCoords jarg1_, double jarg2);
  public final static native void delete_ArENUCoords(long jarg1);
  public final static native long new_ArMapGPSCoords__SWIG_0(long jarg1, ArLLACoords jarg1_);
  public final static native long new_ArMapGPSCoords__SWIG_1();
  public final static native boolean ArMapGPSCoords_convertMap2LLACoords(long jarg1, ArMapGPSCoords jarg1_, double jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native boolean ArMapGPSCoords_convertLLA2MapCoords__SWIG_0(long jarg1, ArMapGPSCoords jarg1_, double jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native boolean ArMapGPSCoords_convertLLA2MapCoords__SWIG_1(long jarg1, ArMapGPSCoords jarg1_, long jarg2, ArLLACoords jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native void ArMapGPSCoords_setOrigin(long jarg1, ArMapGPSCoords jarg1_, long jarg2, ArLLACoords jarg2_);
  public final static native void ArMapGPSCoords_myOriginECEF_set(long jarg1, ArMapGPSCoords jarg1_, long jarg2, ArECEFCoords jarg2_);
  public final static native long ArMapGPSCoords_myOriginECEF_get(long jarg1, ArMapGPSCoords jarg1_);
  public final static native void ArMapGPSCoords_myOriginLLA_set(long jarg1, ArMapGPSCoords jarg1_, long jarg2, ArLLACoords jarg2_);
  public final static native long ArMapGPSCoords_myOriginLLA_get(long jarg1, ArMapGPSCoords jarg1_);
  public final static native void ArMapGPSCoords_myOriginSet_set(long jarg1, ArMapGPSCoords jarg1_, boolean jarg2);
  public final static native boolean ArMapGPSCoords_myOriginSet_get(long jarg1, ArMapGPSCoords jarg1_);
  public final static native void delete_ArMapGPSCoords(long jarg1);
  public final static native int ArGripperCommands_GRIP_OPEN_get();
  public final static native int ArGripperCommands_GRIP_CLOSE_get();
  public final static native int ArGripperCommands_GRIP_STOP_get();
  public final static native int ArGripperCommands_LIFT_UP_get();
  public final static native int ArGripperCommands_LIFT_DOWN_get();
  public final static native int ArGripperCommands_LIFT_STOP_get();
  public final static native int ArGripperCommands_GRIPPER_STORE_get();
  public final static native int ArGripperCommands_GRIPPER_DEPLOY_get();
  public final static native int ArGripperCommands_GRIPPER_HALT_get();
  public final static native int ArGripperCommands_GRIP_PRESSURE_get();
  public final static native int ArGripperCommands_LIFT_CARRY_get();
  public final static native long new_ArGripperCommands();
  public final static native void delete_ArGripperCommands(long jarg1);
  public final static native long new_ArGripper__SWIG_0(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long new_ArGripper__SWIG_1(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArGripper(long jarg1);
  public final static native boolean ArGripper_gripOpen(long jarg1, ArGripper jarg1_);
  public final static native boolean ArGripper_gripClose(long jarg1, ArGripper jarg1_);
  public final static native boolean ArGripper_gripStop(long jarg1, ArGripper jarg1_);
  public final static native boolean ArGripper_liftUp(long jarg1, ArGripper jarg1_);
  public final static native boolean ArGripper_liftDown(long jarg1, ArGripper jarg1_);
  public final static native boolean ArGripper_liftStop(long jarg1, ArGripper jarg1_);
  public final static native boolean ArGripper_gripperStore(long jarg1, ArGripper jarg1_);
  public final static native boolean ArGripper_gripperDeploy(long jarg1, ArGripper jarg1_);
  public final static native boolean ArGripper_gripperHalt(long jarg1, ArGripper jarg1_);
  public final static native boolean ArGripper_gripPressure(long jarg1, ArGripper jarg1_, int jarg2);
  public final static native boolean ArGripper_liftCarry(long jarg1, ArGripper jarg1_, int jarg2);
  public final static native boolean ArGripper_isGripMoving(long jarg1, ArGripper jarg1_);
  public final static native boolean ArGripper_isLiftMoving(long jarg1, ArGripper jarg1_);
  public final static native int ArGripper_getGripState(long jarg1, ArGripper jarg1_);
  public final static native int ArGripper_getPaddleState(long jarg1, ArGripper jarg1_);
  public final static native int ArGripper_getBreakBeamState(long jarg1, ArGripper jarg1_);
  public final static native boolean ArGripper_isLiftMaxed(long jarg1, ArGripper jarg1_);
  public final static native int ArGripper_getType(long jarg1, ArGripper jarg1_);
  public final static native void ArGripper_setType(long jarg1, ArGripper jarg1_, int jarg2);
  public final static native int ArGripper_getMSecSinceLastPacket(long jarg1, ArGripper jarg1_);
  public final static native int ArGripper_getGraspTime(long jarg1, ArGripper jarg1_);
  public final static native void ArGripper_logState(long jarg1, ArGripper jarg1_);
  public final static native boolean ArGripper_packetHandler(long jarg1, ArGripper jarg1_, long jarg2, ArRobotPacket jarg2_);
  public final static native void ArGripper_connectHandler(long jarg1, ArGripper jarg1_);
  public final static native long new_ArIRs__SWIG_0(long jarg1, long jarg2, String jarg3, int jarg4);
  public final static native long new_ArIRs__SWIG_1(long jarg1, long jarg2, String jarg3);
  public final static native long new_ArIRs__SWIG_2(long jarg1, long jarg2);
  public final static native long new_ArIRs__SWIG_3(long jarg1);
  public final static native long new_ArIRs__SWIG_4();
  public final static native void delete_ArIRs(long jarg1);
  public final static native void ArIRs_setRobot(long jarg1, ArIRs jarg1_, long jarg2, ArRobot jarg2_);
  public final static native void ArIRs_processReadings(long jarg1, ArIRs jarg1_);
  public final static native long new_ArInterpolation__SWIG_0(long jarg1);
  public final static native long new_ArInterpolation__SWIG_1();
  public final static native void delete_ArInterpolation(long jarg1);
  public final static native boolean ArInterpolation_addReading(long jarg1, ArInterpolation jarg1_, long jarg2, ArTime jarg2_, long jarg3, ArPose jarg3_);
  public final static native int ArInterpolation_getPose__SWIG_0(long jarg1, ArInterpolation jarg1_, long jarg2, ArTime jarg2_, long jarg3, ArPose jarg3_, long jarg4, ArPoseWithTime jarg4_);
  public final static native int ArInterpolation_getPose__SWIG_1(long jarg1, ArInterpolation jarg1_, long jarg2, ArTime jarg2_, long jarg3, ArPose jarg3_);
  public final static native void ArInterpolation_setName(long jarg1, ArInterpolation jarg1_, String jarg2);
  public final static native String ArInterpolation_getName(long jarg1, ArInterpolation jarg1_);
  public final static native void ArInterpolation_setAllowedMSForPrediction__SWIG_0(long jarg1, ArInterpolation jarg1_, int jarg2);
  public final static native void ArInterpolation_setAllowedMSForPrediction__SWIG_1(long jarg1, ArInterpolation jarg1_);
  public final static native int ArInterpolation_getAllowedMSForPrediction(long jarg1, ArInterpolation jarg1_);
  public final static native void ArInterpolation_setAllowedPercentageForPrediction__SWIG_0(long jarg1, ArInterpolation jarg1_, int jarg2);
  public final static native void ArInterpolation_setAllowedPercentageForPrediction__SWIG_1(long jarg1, ArInterpolation jarg1_);
  public final static native int ArInterpolation_getAllowedPercentageForPrediction(long jarg1, ArInterpolation jarg1_);
  public final static native void ArInterpolation_setLogPrediction__SWIG_0(long jarg1, ArInterpolation jarg1_, boolean jarg2);
  public final static native void ArInterpolation_setLogPrediction__SWIG_1(long jarg1, ArInterpolation jarg1_);
  public final static native boolean ArInterpolation_getLogPrediction(long jarg1, ArInterpolation jarg1_);
  public final static native void ArInterpolation_setNumberOfReadings(long jarg1, ArInterpolation jarg1_, long jarg2);
  public final static native long ArInterpolation_getNumberOfReadings(long jarg1, ArInterpolation jarg1_);
  public final static native void ArInterpolation_reset(long jarg1, ArInterpolation jarg1_);
  public final static native long new_ArIrrfDevice__SWIG_0(long jarg1, long jarg2, String jarg3);
  public final static native long new_ArIrrfDevice__SWIG_1(long jarg1, long jarg2);
  public final static native long new_ArIrrfDevice__SWIG_2(long jarg1);
  public final static native long new_ArIrrfDevice__SWIG_3();
  public final static native void delete_ArIrrfDevice(long jarg1);
  public final static native boolean ArIrrfDevice_packetHandler(long jarg1, ArIrrfDevice jarg1_, long jarg2, ArRobotPacket jarg2_);
  public final static native void ArIrrfDevice_setCumulativeMaxRange(long jarg1, ArIrrfDevice jarg1_, double jarg2);
  public final static native void ArIrrfDevice_setRobot(long jarg1, ArIrrfDevice jarg1_, long jarg2, ArRobot jarg2_);
  public final static native long new_ArJoyHandler__SWIG_0(boolean jarg1, boolean jarg2);
  public final static native long new_ArJoyHandler__SWIG_1(boolean jarg1);
  public final static native long new_ArJoyHandler__SWIG_2();
  public final static native void delete_ArJoyHandler(long jarg1);
  public final static native boolean ArJoyHandler_init(long jarg1, ArJoyHandler jarg1_);
  public final static native boolean ArJoyHandler_haveJoystick(long jarg1, ArJoyHandler jarg1_);
  public final static native void ArJoyHandler_getDoubles__SWIG_0(long jarg1, ArJoyHandler jarg1_, double[] jarg2, double[] jarg3, double[] jarg4);
  public final static native void ArJoyHandler_getDoubles__SWIG_1(long jarg1, ArJoyHandler jarg1_, double[] jarg2, double[] jarg3);
  public final static native boolean ArJoyHandler_getButton(long jarg1, ArJoyHandler jarg1_, long jarg2);
  public final static native boolean ArJoyHandler_haveZAxis(long jarg1, ArJoyHandler jarg1_);
  public final static native void ArJoyHandler_setSpeeds__SWIG_0(long jarg1, ArJoyHandler jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void ArJoyHandler_setSpeeds__SWIG_1(long jarg1, ArJoyHandler jarg1_, int jarg2, int jarg3);
  public final static native void ArJoyHandler_getAdjusted__SWIG_0(long jarg1, ArJoyHandler jarg1_, int[] jarg2, int[] jarg3, int[] jarg4);
  public final static native void ArJoyHandler_getAdjusted__SWIG_1(long jarg1, ArJoyHandler jarg1_, int[] jarg2, int[] jarg3);
  public final static native long ArJoyHandler_getNumAxes(long jarg1, ArJoyHandler jarg1_);
  public final static native double ArJoyHandler_getAxis(long jarg1, ArJoyHandler jarg1_, long jarg2);
  public final static native long ArJoyHandler_getNumButtons(long jarg1, ArJoyHandler jarg1_);
  public final static native void ArJoyHandler_setUseOSCal(long jarg1, ArJoyHandler jarg1_, boolean jarg2);
  public final static native boolean ArJoyHandler_getUseOSCal(long jarg1, ArJoyHandler jarg1_);
  public final static native void ArJoyHandler_startCal(long jarg1, ArJoyHandler jarg1_);
  public final static native void ArJoyHandler_endCal(long jarg1, ArJoyHandler jarg1_);
  public final static native void ArJoyHandler_getUnfiltered__SWIG_0(long jarg1, ArJoyHandler jarg1_, int[] jarg2, int[] jarg3, int[] jarg4);
  public final static native void ArJoyHandler_getUnfiltered__SWIG_1(long jarg1, ArJoyHandler jarg1_, int[] jarg2, int[] jarg3);
  public final static native void ArJoyHandler_getStats(long jarg1, ArJoyHandler jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native void ArJoyHandler_setStats(long jarg1, ArJoyHandler jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void ArJoyHandler_getSpeeds__SWIG_0(long jarg1, ArJoyHandler jarg1_, int[] jarg2, int[] jarg3, int[] jarg4);
  public final static native long ArJoyHandler_getDoubles__SWIG_2(long jarg1, ArJoyHandler jarg1_);
  public final static native long ArJoyHandler_getAdjusted__SWIG_2(long jarg1, ArJoyHandler jarg1_);
  public final static native long ArJoyHandler_getUnfiltered__SWIG_2(long jarg1, ArJoyHandler jarg1_);
  public final static native long ArJoyHandler_getSpeeds__SWIG_1(long jarg1, ArJoyHandler jarg1_);
  public final static native long new_ArKeyHandler__SWIG_0(boolean jarg1, boolean jarg2, long jarg3, boolean jarg4);
  public final static native long new_ArKeyHandler__SWIG_1(boolean jarg1, boolean jarg2, long jarg3);
  public final static native long new_ArKeyHandler__SWIG_2(boolean jarg1, boolean jarg2);
  public final static native long new_ArKeyHandler__SWIG_3(boolean jarg1);
  public final static native long new_ArKeyHandler__SWIG_4();
  public final static native void delete_ArKeyHandler(long jarg1);
  public final static native int ArKeyHandler_UP_get();
  public final static native boolean ArKeyHandler_addKeyHandler(long jarg1, ArKeyHandler jarg1_, int jarg2, long jarg3, ArFunctor jarg3_);
  public final static native boolean ArKeyHandler_remKeyHandler__SWIG_0(long jarg1, ArKeyHandler jarg1_, int jarg2);
  public final static native boolean ArKeyHandler_remKeyHandler__SWIG_1(long jarg1, ArKeyHandler jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArKeyHandler_takeKeys__SWIG_0(long jarg1, ArKeyHandler jarg1_, boolean jarg2);
  public final static native void ArKeyHandler_takeKeys__SWIG_1(long jarg1, ArKeyHandler jarg1_);
  public final static native void ArKeyHandler_restore(long jarg1, ArKeyHandler jarg1_);
  public final static native void ArKeyHandler_checkKeys(long jarg1, ArKeyHandler jarg1_);
  public final static native int ArKeyHandler_getKey(long jarg1, ArKeyHandler jarg1_);
  public final static native long new_ArLaserConnector__SWIG_0(long jarg1, ArArgumentParser jarg1_, long jarg2, ArRobot jarg2_, long jarg3, ArRobotConnector jarg3_, boolean jarg4, int jarg5, long jarg6, long jarg7);
  public final static native long new_ArLaserConnector__SWIG_1(long jarg1, ArArgumentParser jarg1_, long jarg2, ArRobot jarg2_, long jarg3, ArRobotConnector jarg3_, boolean jarg4, int jarg5, long jarg6);
  public final static native long new_ArLaserConnector__SWIG_2(long jarg1, ArArgumentParser jarg1_, long jarg2, ArRobot jarg2_, long jarg3, ArRobotConnector jarg3_, boolean jarg4, int jarg5);
  public final static native long new_ArLaserConnector__SWIG_3(long jarg1, ArArgumentParser jarg1_, long jarg2, ArRobot jarg2_, long jarg3, ArRobotConnector jarg3_, boolean jarg4);
  public final static native long new_ArLaserConnector__SWIG_4(long jarg1, ArArgumentParser jarg1_, long jarg2, ArRobot jarg2_, long jarg3, ArRobotConnector jarg3_);
  public final static native void delete_ArLaserConnector(long jarg1);
  public final static native boolean ArLaserConnector_connectLasers__SWIG_0(long jarg1, ArLaserConnector jarg1_, boolean jarg2, boolean jarg3, boolean jarg4, boolean jarg5, boolean jarg6, long jarg7);
  public final static native boolean ArLaserConnector_connectLasers__SWIG_1(long jarg1, ArLaserConnector jarg1_, boolean jarg2, boolean jarg3, boolean jarg4, boolean jarg5, boolean jarg6);
  public final static native boolean ArLaserConnector_connectLasers__SWIG_2(long jarg1, ArLaserConnector jarg1_, boolean jarg2, boolean jarg3, boolean jarg4, boolean jarg5);
  public final static native boolean ArLaserConnector_connectLasers__SWIG_3(long jarg1, ArLaserConnector jarg1_, boolean jarg2, boolean jarg3, boolean jarg4);
  public final static native boolean ArLaserConnector_connectLasers__SWIG_4(long jarg1, ArLaserConnector jarg1_, boolean jarg2, boolean jarg3);
  public final static native boolean ArLaserConnector_connectLasers__SWIG_5(long jarg1, ArLaserConnector jarg1_, boolean jarg2);
  public final static native boolean ArLaserConnector_connectLasers__SWIG_6(long jarg1, ArLaserConnector jarg1_);
  public final static native boolean ArLaserConnector_setupLaser__SWIG_0(long jarg1, ArLaserConnector jarg1_, long jarg2, ArLaser jarg2_, int jarg3);
  public final static native boolean ArLaserConnector_setupLaser__SWIG_1(long jarg1, ArLaserConnector jarg1_, long jarg2, ArLaser jarg2_);
  public final static native boolean ArLaserConnector_connectLaser__SWIG_0(long jarg1, ArLaserConnector jarg1_, long jarg2, ArLaser jarg2_, int jarg3, boolean jarg4);
  public final static native boolean ArLaserConnector_connectLaser__SWIG_1(long jarg1, ArLaserConnector jarg1_, long jarg2, ArLaser jarg2_, int jarg3);
  public final static native boolean ArLaserConnector_connectLaser__SWIG_2(long jarg1, ArLaserConnector jarg1_, long jarg2, ArLaser jarg2_);
  public final static native boolean ArLaserConnector_addLaser__SWIG_0(long jarg1, ArLaserConnector jarg1_, long jarg2, ArLaser jarg2_, int jarg3);
  public final static native boolean ArLaserConnector_addLaser__SWIG_1(long jarg1, ArLaserConnector jarg1_, long jarg2, ArLaser jarg2_);
  public final static native boolean ArLaserConnector_addPlaceholderLaser__SWIG_0(long jarg1, ArLaserConnector jarg1_, long jarg2, ArLaser jarg2_, int jarg3, boolean jarg4);
  public final static native boolean ArLaserConnector_addPlaceholderLaser__SWIG_1(long jarg1, ArLaserConnector jarg1_, long jarg2, ArLaser jarg2_, int jarg3);
  public final static native boolean ArLaserConnector_addPlaceholderLaser__SWIG_2(long jarg1, ArLaserConnector jarg1_, long jarg2, ArLaser jarg2_);
  public final static native boolean ArLaserConnector_parseArgs__SWIG_0(long jarg1, ArLaserConnector jarg1_);
  public final static native boolean ArLaserConnector_parseArgs__SWIG_1(long jarg1, ArLaserConnector jarg1_, long jarg2, ArArgumentParser jarg2_);
  public final static native void ArLaserConnector_logOptions(long jarg1, ArLaserConnector jarg1_);
  public final static native long ArLaserConnector_getLaser(long jarg1, ArLaserConnector jarg1_, int jarg2);
  public final static native boolean ArLaserConnector_replaceLaser(long jarg1, ArLaserConnector jarg1_, long jarg2, ArLaser jarg2_, int jarg3);
  public final static native long new_ArLaserFilter__SWIG_0(long jarg1, ArLaser jarg1_, String jarg2);
  public final static native long new_ArLaserFilter__SWIG_1(long jarg1, ArLaser jarg1_);
  public final static native void delete_ArLaserFilter(long jarg1);
  public final static native void ArLaserFilter_setRobot(long jarg1, ArLaserFilter jarg1_, long jarg2, ArRobot jarg2_);
  public final static native void ArLaserFilter_addToConfig__SWIG_0(long jarg1, ArLaserFilter jarg1_, long jarg2, ArConfig jarg2_, String jarg3, String jarg4);
  public final static native void ArLaserFilter_addToConfig__SWIG_1(long jarg1, ArLaserFilter jarg1_, long jarg2, ArConfig jarg2_, String jarg3);
  public final static native boolean ArLaserFilter_blockingConnect(long jarg1, ArLaserFilter jarg1_);
  public final static native boolean ArLaserFilter_asyncConnect(long jarg1, ArLaserFilter jarg1_);
  public final static native boolean ArLaserFilter_disconnect(long jarg1, ArLaserFilter jarg1_);
  public final static native boolean ArLaserFilter_isConnected(long jarg1, ArLaserFilter jarg1_);
  public final static native boolean ArLaserFilter_isTryingToConnect(long jarg1, ArLaserFilter jarg1_);
  public final static native long ArLaserFilter_runThread(long jarg1, ArLaserFilter jarg1_, long jarg2);
  public final static native boolean ArLaserFilter_laserCheckParams(long jarg1, ArLaserFilter jarg1_);
  public final static native long ArLaserFilter_getBaseLaser(long jarg1, ArLaserFilter jarg1_);
  public final static native long new_ArLaserLogger__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_, double jarg3, double jarg4, String jarg5, boolean jarg6, long jarg7, ArJoyHandler jarg7_, String jarg8, boolean jarg9, long jarg10, ArRobotJoyHandler jarg10_, long jarg11, long jarg12);
  public final static native long new_ArLaserLogger__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_, double jarg3, double jarg4, String jarg5, boolean jarg6, long jarg7, ArJoyHandler jarg7_, String jarg8, boolean jarg9, long jarg10, ArRobotJoyHandler jarg10_, long jarg11);
  public final static native long new_ArLaserLogger__SWIG_2(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_, double jarg3, double jarg4, String jarg5, boolean jarg6, long jarg7, ArJoyHandler jarg7_, String jarg8, boolean jarg9, long jarg10, ArRobotJoyHandler jarg10_);
  public final static native long new_ArLaserLogger__SWIG_3(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_, double jarg3, double jarg4, String jarg5, boolean jarg6, long jarg7, ArJoyHandler jarg7_, String jarg8, boolean jarg9);
  public final static native long new_ArLaserLogger__SWIG_4(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_, double jarg3, double jarg4, String jarg5, boolean jarg6, long jarg7, ArJoyHandler jarg7_, String jarg8);
  public final static native long new_ArLaserLogger__SWIG_5(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_, double jarg3, double jarg4, String jarg5, boolean jarg6, long jarg7, ArJoyHandler jarg7_);
  public final static native long new_ArLaserLogger__SWIG_6(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_, double jarg3, double jarg4, String jarg5, boolean jarg6);
  public final static native long new_ArLaserLogger__SWIG_7(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_, double jarg3, double jarg4, String jarg5);
  public final static native void delete_ArLaserLogger(long jarg1);
  public final static native void ArLaserLogger_addTagToLogPlain(long jarg1, ArLaserLogger jarg1_, String jarg2);
  public final static native void ArLaserLogger_addInfoToLogPlain(long jarg1, ArLaserLogger jarg1_, String jarg2);
  public final static native void ArLaserLogger_setDistDiff(long jarg1, ArLaserLogger jarg1_, double jarg2);
  public final static native double ArLaserLogger_getDistDiff(long jarg1, ArLaserLogger jarg1_);
  public final static native void ArLaserLogger_setDegDiff(long jarg1, ArLaserLogger jarg1_, double jarg2);
  public final static native double ArLaserLogger_getDegDiff(long jarg1, ArLaserLogger jarg1_);
  public final static native void ArLaserLogger_takeReading(long jarg1, ArLaserLogger jarg1_);
  public final static native void ArLaserLogger_addGoal(long jarg1, ArLaserLogger jarg1_);
  public final static native boolean ArLaserLogger_wasFileOpenedSuccessfully(long jarg1, ArLaserLogger jarg1_);
  public final static native boolean ArLaserLogger_takingOldReadings(long jarg1, ArLaserLogger jarg1_);
  public final static native void ArLaserLogger_takeOldReadings(long jarg1, ArLaserLogger jarg1_, boolean jarg2);
  public final static native boolean ArLaserLogger_takingNewReadings(long jarg1, ArLaserLogger jarg1_);
  public final static native void ArLaserLogger_takeNewReadings(long jarg1, ArLaserLogger jarg1_, boolean jarg2);
  public final static native long new_ArLaserReflectorDevice__SWIG_0(long jarg1, ArRangeDevice jarg1_, long jarg2, ArRobot jarg2_, String jarg3);
  public final static native long new_ArLaserReflectorDevice__SWIG_1(long jarg1, ArRangeDevice jarg1_, long jarg2, ArRobot jarg2_);
  public final static native void delete_ArLaserReflectorDevice(long jarg1);
  public final static native void ArLaserReflectorDevice_processReadings(long jarg1, ArLaserReflectorDevice jarg1_);
  public final static native void ArLaserReflectorDevice_setRobot(long jarg1, ArLaserReflectorDevice jarg1_, long jarg2, ArRobot jarg2_);
  public final static native void ArLaserReflectorDevice_addToConfig(long jarg1, ArLaserReflectorDevice jarg1_, long jarg2, ArConfig jarg2_, String jarg3);
  public final static native long new_ArLineFinder(long jarg1, ArRangeDevice jarg1_);
  public final static native void delete_ArLineFinder(long jarg1);
  public final static native long ArLineFinder_getLinesAsSet(long jarg1, ArLineFinder jarg1_);
  public final static native long ArLineFinder_getNonLinePointsAsSet(long jarg1, ArLineFinder jarg1_);
  public final static native long ArLineFinder_getLinesTakenPose(long jarg1, ArLineFinder jarg1_);
  public final static native void ArLineFinder_saveLast(long jarg1, ArLineFinder jarg1_);
  public final static native void ArLineFinder_getLinesAndSaveThem(long jarg1, ArLineFinder jarg1_);
  public final static native void ArLineFinder_setVerbose(long jarg1, ArLineFinder jarg1_, boolean jarg2);
  public final static native boolean ArLineFinder_getVerbose(long jarg1, ArLineFinder jarg1_);
  public final static native void ArLineFinder_setLineCreationParams__SWIG_0(long jarg1, ArLineFinder jarg1_, int jarg2, int jarg3);
  public final static native void ArLineFinder_setLineCreationParams__SWIG_1(long jarg1, ArLineFinder jarg1_, int jarg2);
  public final static native void ArLineFinder_setLineCreationParams__SWIG_2(long jarg1, ArLineFinder jarg1_);
  public final static native void ArLineFinder_setLineCombiningParams__SWIG_0(long jarg1, ArLineFinder jarg1_, int jarg2, int jarg3);
  public final static native void ArLineFinder_setLineCombiningParams__SWIG_1(long jarg1, ArLineFinder jarg1_, int jarg2);
  public final static native void ArLineFinder_setLineCombiningParams__SWIG_2(long jarg1, ArLineFinder jarg1_);
  public final static native void ArLineFinder_setLineFilteringParams__SWIG_0(long jarg1, ArLineFinder jarg1_, int jarg2, int jarg3);
  public final static native void ArLineFinder_setLineFilteringParams__SWIG_1(long jarg1, ArLineFinder jarg1_, int jarg2);
  public final static native void ArLineFinder_setLineFilteringParams__SWIG_2(long jarg1, ArLineFinder jarg1_);
  public final static native void ArLineFinder_setLineValidParams__SWIG_0(long jarg1, ArLineFinder jarg1_, int jarg2, int jarg3);
  public final static native void ArLineFinder_setLineValidParams__SWIG_1(long jarg1, ArLineFinder jarg1_, int jarg2);
  public final static native void ArLineFinder_setLineValidParams__SWIG_2(long jarg1, ArLineFinder jarg1_);
  public final static native void ArLineFinder_setMaxDistBetweenPoints__SWIG_0(long jarg1, ArLineFinder jarg1_, int jarg2);
  public final static native void ArLineFinder_setMaxDistBetweenPoints__SWIG_1(long jarg1, ArLineFinder jarg1_);
  public final static native void ArLineFinder_addToConfig(long jarg1, ArLineFinder jarg1_, long jarg2, ArConfig jarg2_, String jarg3);
  public final static native long new_ArLineFinderSegment__SWIG_0();
  public final static native long new_ArLineFinderSegment__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4, int jarg5, int jarg6, int jarg7);
  public final static native long new_ArLineFinderSegment__SWIG_2(double jarg1, double jarg2, double jarg3, double jarg4, int jarg5, int jarg6);
  public final static native long new_ArLineFinderSegment__SWIG_3(double jarg1, double jarg2, double jarg3, double jarg4, int jarg5);
  public final static native long new_ArLineFinderSegment__SWIG_4(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native void delete_ArLineFinderSegment(long jarg1);
  public final static native void ArLineFinderSegment_newEndPoints__SWIG_0(long jarg1, ArLineFinderSegment jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, int jarg6, int jarg7, int jarg8);
  public final static native void ArLineFinderSegment_newEndPoints__SWIG_1(long jarg1, ArLineFinderSegment jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, int jarg6, int jarg7);
  public final static native void ArLineFinderSegment_newEndPoints__SWIG_2(long jarg1, ArLineFinderSegment jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, int jarg6);
  public final static native void ArLineFinderSegment_newEndPoints__SWIG_3(long jarg1, ArLineFinderSegment jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native double ArLineFinderSegment_getLineAngle(long jarg1, ArLineFinderSegment jarg1_);
  public final static native double ArLineFinderSegment_getLength(long jarg1, ArLineFinderSegment jarg1_);
  public final static native int ArLineFinderSegment_getNumPoints(long jarg1, ArLineFinderSegment jarg1_);
  public final static native int ArLineFinderSegment_getStartPoint(long jarg1, ArLineFinderSegment jarg1_);
  public final static native int ArLineFinderSegment_getEndPoint(long jarg1, ArLineFinderSegment jarg1_);
  public final static native void ArLineFinderSegment_setAveDistFromLine(long jarg1, ArLineFinderSegment jarg1_, double jarg2);
  public final static native double ArLineFinderSegment_getAveDistFromLine(long jarg1, ArLineFinderSegment jarg1_);
  public final static native void ArLog_log(int jarg1, String jarg2);
  public final static native boolean ArLog_init__SWIG_0(int jarg1, int jarg2, String jarg3, boolean jarg4, boolean jarg5, boolean jarg6);
  public final static native boolean ArLog_init__SWIG_1(int jarg1, int jarg2, String jarg3, boolean jarg4, boolean jarg5);
  public final static native boolean ArLog_init__SWIG_2(int jarg1, int jarg2, String jarg3, boolean jarg4);
  public final static native boolean ArLog_init__SWIG_3(int jarg1, int jarg2, String jarg3);
  public final static native boolean ArLog_init__SWIG_4(int jarg1, int jarg2);
  public final static native void ArLog_close();
  public final static native void ArLog_logErrorFromOS(int jarg1, String jarg2);
  public final static native void ArLog_logErrorFromOSPlain(int jarg1, String jarg2);
  public final static native void ArLog_logBacktrace(int jarg1);
  public final static native boolean ArLog_logFileContents(int jarg1, String jarg2);
  public final static native void ArLog_colbertPrint_set(long jarg1);
  public final static native long ArLog_colbertPrint_get();
  public final static native void ArLog_addToConfig(long jarg1, ArConfig jarg1_);
  public final static native void ArLog_aramInit__SWIG_0(String jarg1, int jarg2, double jarg3, boolean jarg4);
  public final static native void ArLog_aramInit__SWIG_1(String jarg1, int jarg2, double jarg3);
  public final static native void ArLog_aramInit__SWIG_2(String jarg1, int jarg2);
  public final static native void ArLog_aramInit__SWIG_3(String jarg1);
  public final static native void ArLog_setFunctor(long jarg1, ArFunctor1_CString jarg1_);
  public final static native void ArLog_clearFunctor();
  public final static native void ArLog_internalForceLockup();
  public final static native long new_ArLog();
  public final static native void delete_ArLog(long jarg1);
  public final static native long new_ArLogFileConnection();
  public final static native void delete_ArLogFileConnection(long jarg1);
  public final static native int ArLogFileConnection_open__SWIG_0(long jarg1, ArLogFileConnection jarg1_, String jarg2);
  public final static native int ArLogFileConnection_open__SWIG_1(long jarg1, ArLogFileConnection jarg1_);
  public final static native void ArLogFileConnection_setLogFile__SWIG_0(long jarg1, ArLogFileConnection jarg1_, String jarg2);
  public final static native void ArLogFileConnection_setLogFile__SWIG_1(long jarg1, ArLogFileConnection jarg1_);
  public final static native boolean ArLogFileConnection_openSimple(long jarg1, ArLogFileConnection jarg1_);
  public final static native int ArLogFileConnection_getStatus(long jarg1, ArLogFileConnection jarg1_);
  public final static native boolean ArLogFileConnection_close(long jarg1, ArLogFileConnection jarg1_);
  public final static native int ArLogFileConnection_read__SWIG_0(long jarg1, ArLogFileConnection jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native int ArLogFileConnection_read__SWIG_1(long jarg1, ArLogFileConnection jarg1_, String jarg2, long jarg3);
  public final static native int ArLogFileConnection_write(long jarg1, ArLogFileConnection jarg1_, String jarg2, long jarg3);
  public final static native String ArLogFileConnection_getOpenMessage(long jarg1, ArLogFileConnection jarg1_, int jarg2);
  public final static native long ArLogFileConnection_getTimeRead(long jarg1, ArLogFileConnection jarg1_, int jarg2);
  public final static native boolean ArLogFileConnection_isTimeStamping(long jarg1, ArLogFileConnection jarg1_);
  public final static native String ArLogFileConnection_getLogFile(long jarg1, ArLogFileConnection jarg1_);
  public final static native int ArLogFileConnection_internalOpen(long jarg1, ArLogFileConnection jarg1_);
  public final static native int ArLogFileConnection_OPEN_FILE_NOT_FOUND_get();
  public final static native void ArLogFileConnection_myPose_set(long jarg1, ArLogFileConnection jarg1_, long jarg2, ArPose jarg2_);
  public final static native long ArLogFileConnection_myPose_get(long jarg1, ArLogFileConnection jarg1_);
  public final static native void ArLogFileConnection_havePose_set(long jarg1, ArLogFileConnection jarg1_, boolean jarg2);
  public final static native boolean ArLogFileConnection_havePose_get(long jarg1, ArLogFileConnection jarg1_);
  public final static native void ArLogFileConnection_myName_set(long jarg1, ArLogFileConnection jarg1_, String jarg2);
  public final static native String ArLogFileConnection_myName_get(long jarg1, ArLogFileConnection jarg1_);
  public final static native void ArLogFileConnection_myType_set(long jarg1, ArLogFileConnection jarg1_, String jarg2);
  public final static native String ArLogFileConnection_myType_get(long jarg1, ArLogFileConnection jarg1_);
  public final static native void ArLogFileConnection_mySubtype_set(long jarg1, ArLogFileConnection jarg1_, String jarg2);
  public final static native String ArLogFileConnection_mySubtype_get(long jarg1, ArLogFileConnection jarg1_);
  public final static native int ArMD5Calculator_DIGEST_LENGTH_get();
  public final static native int ArMD5Calculator_DISPLAY_LENGTH_get();
  public final static native void ArMD5Calculator_toDisplay(long jarg1, long jarg2, String jarg3, long jarg4);
  public final static native boolean ArMD5Calculator_calculateChecksum(String jarg1, long jarg2, long jarg3);
  public final static native long new_ArMD5Calculator__SWIG_0(long jarg1, ArFunctor1_CString jarg1_);
  public final static native long new_ArMD5Calculator__SWIG_1();
  public final static native void delete_ArMD5Calculator(long jarg1);
  public final static native void ArMD5Calculator_reset(long jarg1, ArMD5Calculator jarg1_);
  public final static native void ArMD5Calculator_append(long jarg1, ArMD5Calculator jarg1_, String jarg2);
  public final static native long ArMD5Calculator_getDigest(long jarg1, ArMD5Calculator jarg1_);
  public final static native long ArMD5Calculator_getFunctor(long jarg1, ArMD5Calculator jarg1_);
  public final static native long ArMD5Calculator_getSecondFunctor(long jarg1, ArMD5Calculator jarg1_);
  public final static native void ArMD5Calculator_setSecondFunctor(long jarg1, ArMD5Calculator jarg1_, long jarg2, ArFunctor1_CString jarg2_);
  public final static native String ARMAP_DEFAULT_SCAN_TYPE_get();
  public final static native boolean ArMapScanInterface_isDefaultScanType(String jarg1);
  public final static native boolean ArMapScanInterface_isSummaryScanType(String jarg1);
  public final static native void delete_ArMapScanInterface(long jarg1);
  public final static native String ArMapScanInterface_getDisplayString__SWIG_0(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native String ArMapScanInterface_getDisplayString__SWIG_1(long jarg1, ArMapScanInterface jarg1_);
  public final static native long ArMapScanInterface_getPoints__SWIG_0(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native long ArMapScanInterface_getPoints__SWIG_1(long jarg1, ArMapScanInterface jarg1_);
  public final static native long ArMapScanInterface_getMinPose__SWIG_0(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native long ArMapScanInterface_getMinPose__SWIG_1(long jarg1, ArMapScanInterface jarg1_);
  public final static native long ArMapScanInterface_getMaxPose__SWIG_0(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native long ArMapScanInterface_getMaxPose__SWIG_1(long jarg1, ArMapScanInterface jarg1_);
  public final static native int ArMapScanInterface_getNumPoints__SWIG_0(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native int ArMapScanInterface_getNumPoints__SWIG_1(long jarg1, ArMapScanInterface jarg1_);
  public final static native boolean ArMapScanInterface_isSortedPoints__SWIG_0(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native boolean ArMapScanInterface_isSortedPoints__SWIG_1(long jarg1, ArMapScanInterface jarg1_);
  public final static native void ArMapScanInterface_setPoints__SWIG_0(long jarg1, ArMapScanInterface jarg1_, long jarg2, String jarg3, boolean jarg4, long jarg5);
  public final static native void ArMapScanInterface_setPoints__SWIG_1(long jarg1, ArMapScanInterface jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native void ArMapScanInterface_setPoints__SWIG_2(long jarg1, ArMapScanInterface jarg1_, long jarg2, String jarg3);
  public final static native void ArMapScanInterface_setPoints__SWIG_3(long jarg1, ArMapScanInterface jarg1_, long jarg2);
  public final static native long ArMapScanInterface_getLines__SWIG_0(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native long ArMapScanInterface_getLines__SWIG_1(long jarg1, ArMapScanInterface jarg1_);
  public final static native long ArMapScanInterface_getLineMinPose__SWIG_0(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native long ArMapScanInterface_getLineMinPose__SWIG_1(long jarg1, ArMapScanInterface jarg1_);
  public final static native long ArMapScanInterface_getLineMaxPose__SWIG_0(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native long ArMapScanInterface_getLineMaxPose__SWIG_1(long jarg1, ArMapScanInterface jarg1_);
  public final static native int ArMapScanInterface_getNumLines__SWIG_0(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native int ArMapScanInterface_getNumLines__SWIG_1(long jarg1, ArMapScanInterface jarg1_);
  public final static native boolean ArMapScanInterface_isSortedLines__SWIG_0(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native boolean ArMapScanInterface_isSortedLines__SWIG_1(long jarg1, ArMapScanInterface jarg1_);
  public final static native void ArMapScanInterface_setLines__SWIG_0(long jarg1, ArMapScanInterface jarg1_, long jarg2, String jarg3, boolean jarg4, long jarg5);
  public final static native void ArMapScanInterface_setLines__SWIG_1(long jarg1, ArMapScanInterface jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native void ArMapScanInterface_setLines__SWIG_2(long jarg1, ArMapScanInterface jarg1_, long jarg2, String jarg3);
  public final static native void ArMapScanInterface_setLines__SWIG_3(long jarg1, ArMapScanInterface jarg1_, long jarg2);
  public final static native int ArMapScanInterface_getResolution__SWIG_0(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native int ArMapScanInterface_getResolution__SWIG_1(long jarg1, ArMapScanInterface jarg1_);
  public final static native void ArMapScanInterface_setResolution__SWIG_0(long jarg1, ArMapScanInterface jarg1_, int jarg2, String jarg3, long jarg4);
  public final static native void ArMapScanInterface_setResolution__SWIG_1(long jarg1, ArMapScanInterface jarg1_, int jarg2, String jarg3);
  public final static native void ArMapScanInterface_setResolution__SWIG_2(long jarg1, ArMapScanInterface jarg1_, int jarg2);
  public final static native void ArMapScanInterface_writeScanToFunctor__SWIG_0(long jarg1, ArMapScanInterface jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, String jarg4);
  public final static native void ArMapScanInterface_writeScanToFunctor__SWIG_1(long jarg1, ArMapScanInterface jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMapScanInterface_writePointsToFunctor__SWIG_0(long jarg1, ArMapScanInterface jarg1_, long jarg2, String jarg3, long jarg4, ArFunctor1_CString jarg4_);
  public final static native void ArMapScanInterface_writePointsToFunctor__SWIG_1(long jarg1, ArMapScanInterface jarg1_, long jarg2, String jarg3);
  public final static native void ArMapScanInterface_writePointsToFunctor__SWIG_2(long jarg1, ArMapScanInterface jarg1_, long jarg2);
  public final static native void ArMapScanInterface_writeLinesToFunctor__SWIG_0(long jarg1, ArMapScanInterface jarg1_, long jarg2, String jarg3, long jarg4, ArFunctor1_CString jarg4_);
  public final static native void ArMapScanInterface_writeLinesToFunctor__SWIG_1(long jarg1, ArMapScanInterface jarg1_, long jarg2, String jarg3);
  public final static native void ArMapScanInterface_writeLinesToFunctor__SWIG_2(long jarg1, ArMapScanInterface jarg1_, long jarg2);
  public final static native boolean ArMapScanInterface_addToFileParser(long jarg1, ArMapScanInterface jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMapScanInterface_remFromFileParser(long jarg1, ArMapScanInterface jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMapScanInterface_readDataPoint(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native boolean ArMapScanInterface_readLineSegment(long jarg1, ArMapScanInterface jarg1_, String jarg2);
  public final static native void ArMapScanInterface_loadDataPoint(long jarg1, ArMapScanInterface jarg1_, double jarg2, double jarg3);
  public final static native void ArMapScanInterface_loadLineSegment(long jarg1, ArMapScanInterface jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void delete_ArMapObjectsInterface(long jarg1);
  public final static native long ArMapObjectsInterface_findFirstMapObject__SWIG_0(long jarg1, ArMapObjectsInterface jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ArMapObjectsInterface_findFirstMapObject__SWIG_1(long jarg1, ArMapObjectsInterface jarg1_, String jarg2, String jarg3);
  public final static native long ArMapObjectsInterface_findMapObject__SWIG_0(long jarg1, ArMapObjectsInterface jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ArMapObjectsInterface_findMapObject__SWIG_1(long jarg1, ArMapObjectsInterface jarg1_, String jarg2, String jarg3);
  public final static native long ArMapObjectsInterface_findMapObject__SWIG_2(long jarg1, ArMapObjectsInterface jarg1_, String jarg2);
  public final static native long ArMapObjectsInterface_findMapObjectsOfType__SWIG_0(long jarg1, ArMapObjectsInterface jarg1_, String jarg2, boolean jarg3);
  public final static native long ArMapObjectsInterface_findMapObjectsOfType__SWIG_1(long jarg1, ArMapObjectsInterface jarg1_, String jarg2);
  public final static native long ArMapObjectsInterface_getMapObjects(long jarg1, ArMapObjectsInterface jarg1_);
  public final static native void ArMapObjectsInterface_setMapObjects__SWIG_0(long jarg1, ArMapObjectsInterface jarg1_, long jarg2, ArMapObjectPtrList jarg2_, boolean jarg3, long jarg4);
  public final static native void ArMapObjectsInterface_setMapObjects__SWIG_1(long jarg1, ArMapObjectsInterface jarg1_, long jarg2, ArMapObjectPtrList jarg2_, boolean jarg3);
  public final static native void ArMapObjectsInterface_setMapObjects__SWIG_2(long jarg1, ArMapObjectsInterface jarg1_, long jarg2, ArMapObjectPtrList jarg2_);
  public final static native void ArMapObjectsInterface_writeObjectListToFunctor(long jarg1, ArMapObjectsInterface jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMapInfoInterface_MAP_INFO_NAME_set(String jarg1);
  public final static native String ArMapInfoInterface_MAP_INFO_NAME_get();
  public final static native void ArMapInfoInterface_META_INFO_NAME_set(String jarg1);
  public final static native String ArMapInfoInterface_META_INFO_NAME_get();
  public final static native void ArMapInfoInterface_TASK_INFO_NAME_set(String jarg1);
  public final static native String ArMapInfoInterface_TASK_INFO_NAME_get();
  public final static native void ArMapInfoInterface_ROUTE_INFO_NAME_set(String jarg1);
  public final static native String ArMapInfoInterface_ROUTE_INFO_NAME_get();
  public final static native void ArMapInfoInterface_SCHED_TASK_INFO_NAME_set(String jarg1);
  public final static native String ArMapInfoInterface_SCHED_TASK_INFO_NAME_get();
  public final static native void ArMapInfoInterface_SCHED_INFO_NAME_set(String jarg1);
  public final static native String ArMapInfoInterface_SCHED_INFO_NAME_get();
  public final static native void ArMapInfoInterface_CAIRN_INFO_NAME_set(String jarg1);
  public final static native String ArMapInfoInterface_CAIRN_INFO_NAME_get();
  public final static native void ArMapInfoInterface_CUSTOM_INFO_NAME_set(String jarg1);
  public final static native String ArMapInfoInterface_CUSTOM_INFO_NAME_get();
  public final static native void delete_ArMapInfoInterface(long jarg1);
  public final static native int ArMapInfoInterface_getInfoCount(long jarg1, ArMapInfoInterface jarg1_);
  public final static native long ArMapInfoInterface_getInfoNames(long jarg1, ArMapInfoInterface jarg1_);
  public final static native long ArMapInfoInterface_getInfo__SWIG_0(long jarg1, ArMapInfoInterface jarg1_, String jarg2);
  public final static native long ArMapInfoInterface_getInfo__SWIG_1(long jarg1, ArMapInfoInterface jarg1_, int jarg2);
  public final static native long ArMapInfoInterface_getMapInfo(long jarg1, ArMapInfoInterface jarg1_);
  public final static native boolean ArMapInfoInterface_setInfo__SWIG_0(long jarg1, ArMapInfoInterface jarg1_, String jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_, long jarg4);
  public final static native boolean ArMapInfoInterface_setInfo__SWIG_1(long jarg1, ArMapInfoInterface jarg1_, String jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_);
  public final static native boolean ArMapInfoInterface_setInfo__SWIG_2(long jarg1, ArMapInfoInterface jarg1_, int jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_, long jarg4);
  public final static native boolean ArMapInfoInterface_setInfo__SWIG_3(long jarg1, ArMapInfoInterface jarg1_, int jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_);
  public final static native boolean ArMapInfoInterface_setMapInfo__SWIG_0(long jarg1, ArMapInfoInterface jarg1_, long jarg2, ArArgumentBuilderPtrList jarg2_, long jarg3);
  public final static native boolean ArMapInfoInterface_setMapInfo__SWIG_1(long jarg1, ArMapInfoInterface jarg1_, long jarg2, ArArgumentBuilderPtrList jarg2_);
  public final static native void ArMapInfoInterface_writeInfoToFunctor(long jarg1, ArMapInfoInterface jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native int ArMapInfoInterface_FIRST_INFO_get();
  public final static native int ArMapInfoInterface_LAST_INFO_get();
  public final static native int ArMapInfoInterface_INFO_COUNT_get();
  public final static native String ArMapInfoInterface_getInfoName(long jarg1, ArMapInfoInterface jarg1_, int jarg2);
  public final static native void delete_ArMapSupplementInterface(long jarg1);
  public final static native boolean ArMapSupplementInterface_hasOriginLatLongAlt(long jarg1, ArMapSupplementInterface jarg1_);
  public final static native long ArMapSupplementInterface_getOriginLatLong(long jarg1, ArMapSupplementInterface jarg1_);
  public final static native double ArMapSupplementInterface_getOriginAltitude(long jarg1, ArMapSupplementInterface jarg1_);
  public final static native void ArMapSupplementInterface_setOriginLatLongAlt__SWIG_0(long jarg1, ArMapSupplementInterface jarg1_, boolean jarg2, long jarg3, ArPose jarg3_, double jarg4, long jarg5);
  public final static native void ArMapSupplementInterface_setOriginLatLongAlt__SWIG_1(long jarg1, ArMapSupplementInterface jarg1_, boolean jarg2, long jarg3, ArPose jarg3_, double jarg4);
  public final static native void ArMapSupplementInterface_writeSupplementToFunctor(long jarg1, ArMapSupplementInterface jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native int ArMapInterface_MAX_MAP_NAME_LENGTH_get();
  public final static native void ArMapInterface_MAP_CATEGORY_2D_set(String jarg1);
  public final static native String ArMapInterface_MAP_CATEGORY_2D_get();
  public final static native void ArMapInterface_MAP_CATEGORY_2D_MULTI_SOURCES_set(String jarg1);
  public final static native String ArMapInterface_MAP_CATEGORY_2D_MULTI_SOURCES_get();
  public final static native void ArMapInterface_MAP_CATEGORY_2D_EXTENDED_set(String jarg1);
  public final static native String ArMapInterface_MAP_CATEGORY_2D_EXTENDED_get();
  public final static native void ArMapInterface_MAP_CATEGORY_2D_COMPOSITE_set(String jarg1);
  public final static native String ArMapInterface_MAP_CATEGORY_2D_COMPOSITE_get();
  public final static native String ArMapInterface_createRealFileName__SWIG_0(String jarg1, String jarg2, boolean jarg3);
  public final static native void delete_ArMapInterface(long jarg1);
  public final static native void ArMapInterface_clear(long jarg1, ArMapInterface jarg1_);
  public final static native boolean ArMapInterface_set(long jarg1, ArMapInterface jarg1_, long jarg2, ArMapInterface jarg2_);
  public final static native long ArMapInterface_cloneMap(long jarg1, ArMapInterface jarg1_);
  public final static native long ArMapInterface_getScanTypes(long jarg1, ArMapInterface jarg1_);
  public final static native boolean ArMapInterface_setScanTypes(long jarg1, ArMapInterface jarg1_, long jarg2);
  public final static native int ArMapInterface_lock(long jarg1, ArMapInterface jarg1_);
  public final static native int ArMapInterface_tryLock(long jarg1, ArMapInterface jarg1_);
  public final static native int ArMapInterface_unlock(long jarg1, ArMapInterface jarg1_);
  public final static native void ArMapInterface_mapChanged(long jarg1, ArMapInterface jarg1_);
  public final static native void ArMapInterface_addMapChangedCBPos(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMapInterface_addMapChangedCB__SWIG_0(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMapInterface_addMapChangedCB__SWIG_1(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapInterface_remMapChangedCB(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapInterface_addPreMapChangedCBPos(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMapInterface_addPreMapChangedCB__SWIG_0(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMapInterface_addPreMapChangedCB__SWIG_1(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapInterface_remPreMapChangedCB(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapInterface_setMapChangedLogLevel(long jarg1, ArMapInterface jarg1_, int jarg2);
  public final static native int ArMapInterface_getMapChangedLogLevel(long jarg1, ArMapInterface jarg1_);
  public final static native void ArMapInterface_writeToFunctor(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMapInterface_writeObjectsToFunctor__SWIG_0(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, boolean jarg4, String jarg5);
  public final static native void ArMapInterface_writeObjectsToFunctor__SWIG_1(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, boolean jarg4);
  public final static native void ArMapInterface_writeObjectsToFunctor__SWIG_2(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMapInterface_addPreWriteFileCB__SWIG_0(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMapInterface_addPreWriteFileCB__SWIG_1(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapInterface_remPreWriteFileCB(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapInterface_addPostWriteFileCB__SWIG_0(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMapInterface_addPostWriteFileCB__SWIG_1(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapInterface_remPostWriteFileCB(long jarg1, ArMapInterface jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native boolean ArMapInterface_getMapId__SWIG_0(long jarg1, ArMapInterface jarg1_, long jarg2, ArMapId jarg2_, boolean jarg3);
  public final static native boolean ArMapInterface_getMapId__SWIG_1(long jarg1, ArMapInterface jarg1_, long jarg2, ArMapId jarg2_);
  public final static native boolean ArMapInterface_calculateChecksum(long jarg1, ArMapInterface jarg1_, long jarg2, long jarg3);
  public final static native String ArMapInterface_getBaseDirectory(long jarg1, ArMapInterface jarg1_);
  public final static native void ArMapInterface_setBaseDirectory(long jarg1, ArMapInterface jarg1_, String jarg2);
  public final static native String ArMapInterface_getTempDirectory(long jarg1, ArMapInterface jarg1_);
  public final static native void ArMapInterface_setTempDirectory(long jarg1, ArMapInterface jarg1_, String jarg2);
  public final static native String ArMapInterface_createRealFileName__SWIG_1(long jarg1, ArMapInterface jarg1_, String jarg2);
  public final static native String ArMapInterface_getFileName(long jarg1, ArMapInterface jarg1_);
  public final static native void ArMapInterface_setSourceFileName__SWIG_0(long jarg1, ArMapInterface jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void ArMapInterface_setSourceFileName__SWIG_1(long jarg1, ArMapInterface jarg1_, String jarg2, String jarg3);
  public final static native boolean ArMapInterface_refresh(long jarg1, ArMapInterface jarg1_);
  public final static native void ArMapInterface_setIgnoreEmptyFileName(long jarg1, ArMapInterface jarg1_, boolean jarg2);
  public final static native boolean ArMapInterface_getIgnoreEmptyFileName(long jarg1, ArMapInterface jarg1_);
  public final static native void ArMapInterface_setIgnoreCase__SWIG_0(long jarg1, ArMapInterface jarg1_, boolean jarg2);
  public final static native void ArMapInterface_setIgnoreCase__SWIG_1(long jarg1, ArMapInterface jarg1_);
  public final static native boolean ArMapInterface_getIgnoreCase(long jarg1, ArMapInterface jarg1_);
  public final static native long ArMapInterface_getInactiveInfo(long jarg1, ArMapInterface jarg1_);
  public final static native long ArMapInterface_getInactiveObjects(long jarg1, ArMapInterface jarg1_);
  public final static native long ArMapInterface_getChildObjects(long jarg1, ArMapInterface jarg1_);
  public final static native long ArMapInterface_findMapObjectParams(long jarg1, ArMapInterface jarg1_, String jarg2);
  public final static native boolean ArMapInterface_setMapObjectParams__SWIG_0(long jarg1, ArMapInterface jarg1_, String jarg2, long jarg3, ArArgumentBuilder jarg3_, long jarg4);
  public final static native boolean ArMapInterface_setMapObjectParams__SWIG_1(long jarg1, ArMapInterface jarg1_, String jarg2, long jarg3, ArArgumentBuilder jarg3_);
  public final static native long ArMapInterface_getRemainder(long jarg1, ArMapInterface jarg1_);
  public final static native void ArMapInterface_setQuiet(long jarg1, ArMapInterface jarg1_, boolean jarg2);
  public final static native boolean ArMapInterface_parseLine(long jarg1, ArMapInterface jarg1_, String jarg2);
  public final static native void ArMapInterface_parsingComplete(long jarg1, ArMapInterface jarg1_);
  public final static native boolean ArMapInterface_isLoadingDataStarted(long jarg1, ArMapInterface jarg1_);
  public final static native boolean ArMapInterface_isLoadingLinesAndDataStarted(long jarg1, ArMapInterface jarg1_);
  public final static native long new_ArMap__SWIG_0(String jarg1, boolean jarg2, String jarg3, String jarg4, String jarg5, boolean jarg6, int jarg7, String jarg8, int jarg9);
  public final static native long new_ArMap__SWIG_1(String jarg1, boolean jarg2, String jarg3, String jarg4, String jarg5, boolean jarg6, int jarg7, String jarg8);
  public final static native long new_ArMap__SWIG_2(String jarg1, boolean jarg2, String jarg3, String jarg4, String jarg5, boolean jarg6, int jarg7);
  public final static native long new_ArMap__SWIG_3(String jarg1, boolean jarg2, String jarg3, String jarg4, String jarg5, boolean jarg6);
  public final static native long new_ArMap__SWIG_4(String jarg1, boolean jarg2, String jarg3, String jarg4, String jarg5);
  public final static native long new_ArMap__SWIG_5(String jarg1, boolean jarg2, String jarg3, String jarg4);
  public final static native long new_ArMap__SWIG_6(String jarg1, boolean jarg2, String jarg3);
  public final static native long new_ArMap__SWIG_7(String jarg1, boolean jarg2);
  public final static native long new_ArMap__SWIG_8(String jarg1);
  public final static native long new_ArMap__SWIG_9();
  public final static native long new_ArMap__SWIG_10(long jarg1, ArMap jarg1_);
  public final static native void delete_ArMap(long jarg1);
  public final static native long ArMap_getScanTypes(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getScanTypesSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_setScanTypes(long jarg1, ArMap jarg1_, long jarg2);
  public final static native boolean ArMap_setScanTypesSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2);
  public final static native int ArMap_lock(long jarg1, ArMap jarg1_);
  public final static native int ArMap_lockSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native int ArMap_tryLock(long jarg1, ArMap jarg1_);
  public final static native int ArMap_tryLockSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native int ArMap_unlock(long jarg1, ArMap jarg1_);
  public final static native int ArMap_unlockSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native String ArMap_getDisplayString__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native String ArMap_getDisplayStringSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native String ArMap_getDisplayString__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native String ArMap_getDisplayStringSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getPoints__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getPointsSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getPoints__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getPointsSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getMinPose__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getMinPoseSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getMinPose__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getMinPoseSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getMaxPose__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getMaxPoseSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getMaxPose__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getMaxPoseSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native int ArMap_getNumPoints__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native int ArMap_getNumPointsSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native int ArMap_getNumPoints__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native int ArMap_getNumPointsSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_isSortedPoints__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native boolean ArMap_isSortedPointsSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native boolean ArMap_isSortedPoints__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_isSortedPointsSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native void ArMap_setPoints__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, String jarg3, boolean jarg4, long jarg5);
  public final static native void ArMap_setPointsSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, String jarg3, boolean jarg4, long jarg5);
  public final static native void ArMap_setPoints__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native void ArMap_setPointsSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native void ArMap_setPoints__SWIG_2(long jarg1, ArMap jarg1_, long jarg2, String jarg3);
  public final static native void ArMap_setPointsSwigExplicitArMap__SWIG_2(long jarg1, ArMap jarg1_, long jarg2, String jarg3);
  public final static native void ArMap_setPoints__SWIG_3(long jarg1, ArMap jarg1_, long jarg2);
  public final static native void ArMap_setPointsSwigExplicitArMap__SWIG_3(long jarg1, ArMap jarg1_, long jarg2);
  public final static native long ArMap_getLines__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getLinesSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getLines__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getLinesSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getLineMinPose__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getLineMinPoseSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getLineMinPose__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getLineMinPoseSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getLineMaxPose__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getLineMaxPoseSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getLineMaxPose__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getLineMaxPoseSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native int ArMap_getNumLines__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native int ArMap_getNumLinesSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native int ArMap_getNumLines__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native int ArMap_getNumLinesSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_isSortedLines__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native boolean ArMap_isSortedLinesSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native boolean ArMap_isSortedLines__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_isSortedLinesSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native void ArMap_setLines__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, String jarg3, boolean jarg4, long jarg5);
  public final static native void ArMap_setLinesSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, String jarg3, boolean jarg4, long jarg5);
  public final static native void ArMap_setLines__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native void ArMap_setLinesSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native void ArMap_setLines__SWIG_2(long jarg1, ArMap jarg1_, long jarg2, String jarg3);
  public final static native void ArMap_setLinesSwigExplicitArMap__SWIG_2(long jarg1, ArMap jarg1_, long jarg2, String jarg3);
  public final static native void ArMap_setLines__SWIG_3(long jarg1, ArMap jarg1_, long jarg2);
  public final static native void ArMap_setLinesSwigExplicitArMap__SWIG_3(long jarg1, ArMap jarg1_, long jarg2);
  public final static native int ArMap_getResolution__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native int ArMap_getResolutionSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native int ArMap_getResolution__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native int ArMap_getResolutionSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native void ArMap_setResolution__SWIG_0(long jarg1, ArMap jarg1_, int jarg2, String jarg3, long jarg4);
  public final static native void ArMap_setResolutionSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, int jarg2, String jarg3, long jarg4);
  public final static native void ArMap_setResolution__SWIG_1(long jarg1, ArMap jarg1_, int jarg2, String jarg3);
  public final static native void ArMap_setResolutionSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, int jarg2, String jarg3);
  public final static native void ArMap_setResolution__SWIG_2(long jarg1, ArMap jarg1_, int jarg2);
  public final static native void ArMap_setResolutionSwigExplicitArMap__SWIG_2(long jarg1, ArMap jarg1_, int jarg2);
  public final static native void ArMap_writeScanToFunctor__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, String jarg4);
  public final static native void ArMap_writeScanToFunctorSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, String jarg4);
  public final static native void ArMap_writeScanToFunctor__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMap_writeScanToFunctorSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMap_writePointsToFunctor__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, String jarg3, long jarg4, ArFunctor1_CString jarg4_);
  public final static native void ArMap_writePointsToFunctorSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, String jarg3, long jarg4, ArFunctor1_CString jarg4_);
  public final static native void ArMap_writePointsToFunctor__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, String jarg3);
  public final static native void ArMap_writePointsToFunctorSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, String jarg3);
  public final static native void ArMap_writePointsToFunctor__SWIG_2(long jarg1, ArMap jarg1_, long jarg2);
  public final static native void ArMap_writePointsToFunctorSwigExplicitArMap__SWIG_2(long jarg1, ArMap jarg1_, long jarg2);
  public final static native void ArMap_writeLinesToFunctor__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, String jarg3, long jarg4, ArFunctor1_CString jarg4_);
  public final static native void ArMap_writeLinesToFunctorSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, String jarg3, long jarg4, ArFunctor1_CString jarg4_);
  public final static native void ArMap_writeLinesToFunctor__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, String jarg3);
  public final static native void ArMap_writeLinesToFunctorSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, String jarg3);
  public final static native void ArMap_writeLinesToFunctor__SWIG_2(long jarg1, ArMap jarg1_, long jarg2);
  public final static native void ArMap_writeLinesToFunctorSwigExplicitArMap__SWIG_2(long jarg1, ArMap jarg1_, long jarg2);
  public final static native boolean ArMap_addToFileParser(long jarg1, ArMap jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMap_addToFileParserSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMap_remFromFileParser(long jarg1, ArMap jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMap_remFromFileParserSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMap_readDataPoint(long jarg1, ArMap jarg1_, String jarg2);
  public final static native boolean ArMap_readDataPointSwigExplicitArMap(long jarg1, ArMap jarg1_, String jarg2);
  public final static native boolean ArMap_readLineSegment(long jarg1, ArMap jarg1_, String jarg2);
  public final static native boolean ArMap_readLineSegmentSwigExplicitArMap(long jarg1, ArMap jarg1_, String jarg2);
  public final static native void ArMap_loadDataPoint(long jarg1, ArMap jarg1_, double jarg2, double jarg3);
  public final static native void ArMap_loadDataPointSwigExplicitArMap(long jarg1, ArMap jarg1_, double jarg2, double jarg3);
  public final static native void ArMap_loadLineSegment(long jarg1, ArMap jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void ArMap_loadLineSegmentSwigExplicitArMap(long jarg1, ArMap jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long ArMap_findFirstMapObject__SWIG_0(long jarg1, ArMap jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ArMap_findFirstMapObjectSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ArMap_findFirstMapObject__SWIG_1(long jarg1, ArMap jarg1_, String jarg2, String jarg3);
  public final static native long ArMap_findFirstMapObjectSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, String jarg2, String jarg3);
  public final static native long ArMap_findMapObject__SWIG_0(long jarg1, ArMap jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ArMap_findMapObjectSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ArMap_findMapObject__SWIG_1(long jarg1, ArMap jarg1_, String jarg2, String jarg3);
  public final static native long ArMap_findMapObjectSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, String jarg2, String jarg3);
  public final static native long ArMap_findMapObject__SWIG_2(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_findMapObjectSwigExplicitArMap__SWIG_2(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_findMapObjectsOfType__SWIG_0(long jarg1, ArMap jarg1_, String jarg2, boolean jarg3);
  public final static native long ArMap_findMapObjectsOfTypeSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2, boolean jarg3);
  public final static native long ArMap_findMapObjectsOfType__SWIG_1(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_findMapObjectsOfTypeSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getMapObjects(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getMapObjectsSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native void ArMap_setMapObjects__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArMapObjectPtrList jarg2_, boolean jarg3, long jarg4);
  public final static native void ArMap_setMapObjectsSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArMapObjectPtrList jarg2_, boolean jarg3, long jarg4);
  public final static native void ArMap_setMapObjects__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArMapObjectPtrList jarg2_, boolean jarg3);
  public final static native void ArMap_setMapObjectsSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArMapObjectPtrList jarg2_, boolean jarg3);
  public final static native void ArMap_setMapObjects__SWIG_2(long jarg1, ArMap jarg1_, long jarg2, ArMapObjectPtrList jarg2_);
  public final static native void ArMap_setMapObjectsSwigExplicitArMap__SWIG_2(long jarg1, ArMap jarg1_, long jarg2, ArMapObjectPtrList jarg2_);
  public final static native void ArMap_writeObjectListToFunctor(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMap_writeObjectListToFunctorSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native long ArMap_getInfo__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getInfoSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_getInfo__SWIG_1(long jarg1, ArMap jarg1_, int jarg2);
  public final static native long ArMap_getInfoSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, int jarg2);
  public final static native long ArMap_getMapInfo(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getMapInfoSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native int ArMap_getInfoCount(long jarg1, ArMap jarg1_);
  public final static native int ArMap_getInfoCountSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getInfoNames(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getInfoNamesSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_setInfo__SWIG_0(long jarg1, ArMap jarg1_, String jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_, long jarg4);
  public final static native boolean ArMap_setInfoSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_, long jarg4);
  public final static native boolean ArMap_setInfo__SWIG_1(long jarg1, ArMap jarg1_, String jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_);
  public final static native boolean ArMap_setInfoSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, String jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_);
  public final static native boolean ArMap_setInfo__SWIG_2(long jarg1, ArMap jarg1_, int jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_, long jarg4);
  public final static native boolean ArMap_setInfoSwigExplicitArMap__SWIG_2(long jarg1, ArMap jarg1_, int jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_, long jarg4);
  public final static native boolean ArMap_setInfo__SWIG_3(long jarg1, ArMap jarg1_, int jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_);
  public final static native boolean ArMap_setInfoSwigExplicitArMap__SWIG_3(long jarg1, ArMap jarg1_, int jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_);
  public final static native boolean ArMap_setMapInfo__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArArgumentBuilderPtrList jarg2_, long jarg3);
  public final static native boolean ArMap_setMapInfoSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArArgumentBuilderPtrList jarg2_, long jarg3);
  public final static native boolean ArMap_setMapInfo__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArArgumentBuilderPtrList jarg2_);
  public final static native boolean ArMap_setMapInfoSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArArgumentBuilderPtrList jarg2_);
  public final static native String ArMap_getInfoName(long jarg1, ArMap jarg1_, int jarg2);
  public final static native String ArMap_getInfoNameSwigExplicitArMap(long jarg1, ArMap jarg1_, int jarg2);
  public final static native void ArMap_writeInfoToFunctor(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMap_writeInfoToFunctorSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native boolean ArMap_hasOriginLatLongAlt(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_hasOriginLatLongAltSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getOriginLatLong(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getOriginLatLongSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native double ArMap_getOriginAltitude(long jarg1, ArMap jarg1_);
  public final static native double ArMap_getOriginAltitudeSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native void ArMap_setOriginLatLongAlt__SWIG_0(long jarg1, ArMap jarg1_, boolean jarg2, long jarg3, ArPose jarg3_, double jarg4, long jarg5);
  public final static native void ArMap_setOriginLatLongAltSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, boolean jarg2, long jarg3, ArPose jarg3_, double jarg4, long jarg5);
  public final static native void ArMap_setOriginLatLongAlt__SWIG_1(long jarg1, ArMap jarg1_, boolean jarg2, long jarg3, ArPose jarg3_, double jarg4);
  public final static native void ArMap_setOriginLatLongAltSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, boolean jarg2, long jarg3, ArPose jarg3_, double jarg4);
  public final static native void ArMap_writeSupplementToFunctor(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMap_writeSupplementToFunctorSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMap_clear(long jarg1, ArMap jarg1_);
  public final static native void ArMap_clearSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_set(long jarg1, ArMap jarg1_, long jarg2, ArMapInterface jarg2_);
  public final static native boolean ArMap_setSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2, ArMapInterface jarg2_);
  public final static native long ArMap_cloneMap(long jarg1, ArMap jarg1_);
  public final static native long ArMap_cloneMapSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native void ArMap_mapChanged(long jarg1, ArMap jarg1_);
  public final static native void ArMap_mapChangedSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native void ArMap_addMapChangedCB__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMap_addMapChangedCBSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMap_addMapChangedCB__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_addMapChangedCBSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_remMapChangedCB(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_remMapChangedCBSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_addPreMapChangedCB__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMap_addPreMapChangedCBSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMap_addPreMapChangedCB__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_addPreMapChangedCBSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_remPreMapChangedCB(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_remPreMapChangedCBSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_setMapChangedLogLevel(long jarg1, ArMap jarg1_, int jarg2);
  public final static native void ArMap_setMapChangedLogLevelSwigExplicitArMap(long jarg1, ArMap jarg1_, int jarg2);
  public final static native int ArMap_getMapChangedLogLevel(long jarg1, ArMap jarg1_);
  public final static native int ArMap_getMapChangedLogLevelSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native void ArMap_writeToFunctor(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMap_writeToFunctorSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMap_writeObjectsToFunctor__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, boolean jarg4, String jarg5);
  public final static native void ArMap_writeObjectsToFunctorSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, boolean jarg4, String jarg5);
  public final static native void ArMap_writeObjectsToFunctor__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, boolean jarg4);
  public final static native void ArMap_writeObjectsToFunctorSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, boolean jarg4);
  public final static native void ArMap_writeObjectsToFunctor__SWIG_2(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMap_writeObjectsToFunctorSwigExplicitArMap__SWIG_2(long jarg1, ArMap jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMap_addPreWriteFileCB__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMap_addPreWriteFileCBSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMap_addPreWriteFileCB__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_addPreWriteFileCBSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_remPreWriteFileCB(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_remPreWriteFileCBSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_addPostWriteFileCB__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMap_addPostWriteFileCBSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMap_addPostWriteFileCB__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_addPostWriteFileCBSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_remPostWriteFileCB(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_remPostWriteFileCBSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMap_forceMapLoadOnConfigProcessFile(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_readFile(long jarg1, ArMap jarg1_, String jarg2);
  public final static native boolean ArMap_writeFile(long jarg1, ArMap jarg1_, String jarg2);
  public final static native boolean ArMap_writeFileSwigExplicitArMap(long jarg1, ArMap jarg1_, String jarg2);
  public final static native boolean ArMap_getMapId__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArMapId jarg2_, boolean jarg3);
  public final static native boolean ArMap_getMapIdSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, long jarg2, ArMapId jarg2_, boolean jarg3);
  public final static native boolean ArMap_getMapId__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArMapId jarg2_);
  public final static native boolean ArMap_getMapIdSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, long jarg2, ArMapId jarg2_);
  public final static native boolean ArMap_calculateChecksum(long jarg1, ArMap jarg1_, long jarg2, long jarg3);
  public final static native boolean ArMap_calculateChecksumSwigExplicitArMap(long jarg1, ArMap jarg1_, long jarg2, long jarg3);
  public final static native String ArMap_getBaseDirectory(long jarg1, ArMap jarg1_);
  public final static native String ArMap_getBaseDirectorySwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native void ArMap_setBaseDirectory(long jarg1, ArMap jarg1_, String jarg2);
  public final static native void ArMap_setBaseDirectorySwigExplicitArMap(long jarg1, ArMap jarg1_, String jarg2);
  public final static native String ArMap_getTempDirectory(long jarg1, ArMap jarg1_);
  public final static native String ArMap_getTempDirectorySwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native void ArMap_setTempDirectory(long jarg1, ArMap jarg1_, String jarg2);
  public final static native void ArMap_setTempDirectorySwigExplicitArMap(long jarg1, ArMap jarg1_, String jarg2);
  public final static native String ArMap_createRealFileName(long jarg1, ArMap jarg1_, String jarg2);
  public final static native String ArMap_createRealFileNameSwigExplicitArMap(long jarg1, ArMap jarg1_, String jarg2);
  public final static native String ArMap_getFileName(long jarg1, ArMap jarg1_);
  public final static native String ArMap_getFileNameSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native void ArMap_setSourceFileName__SWIG_0(long jarg1, ArMap jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void ArMap_setSourceFileNameSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void ArMap_setSourceFileName__SWIG_1(long jarg1, ArMap jarg1_, String jarg2, String jarg3);
  public final static native void ArMap_setSourceFileNameSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, String jarg2, String jarg3);
  public final static native boolean ArMap_refresh(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_refreshSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native void ArMap_setIgnoreEmptyFileName(long jarg1, ArMap jarg1_, boolean jarg2);
  public final static native void ArMap_setIgnoreEmptyFileNameSwigExplicitArMap(long jarg1, ArMap jarg1_, boolean jarg2);
  public final static native boolean ArMap_getIgnoreEmptyFileName(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_getIgnoreEmptyFileNameSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native void ArMap_setIgnoreCase__SWIG_0(long jarg1, ArMap jarg1_, boolean jarg2);
  public final static native void ArMap_setIgnoreCaseSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, boolean jarg2);
  public final static native void ArMap_setIgnoreCase__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native void ArMap_setIgnoreCaseSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_getIgnoreCase(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_getIgnoreCaseSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getInactiveInfo(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getInactiveInfoSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getInactiveObjects(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getInactiveObjectsSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getChildObjects(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getChildObjectsSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native long ArMap_findMapObjectParams(long jarg1, ArMap jarg1_, String jarg2);
  public final static native long ArMap_findMapObjectParamsSwigExplicitArMap(long jarg1, ArMap jarg1_, String jarg2);
  public final static native boolean ArMap_setMapObjectParams__SWIG_0(long jarg1, ArMap jarg1_, String jarg2, long jarg3, ArArgumentBuilder jarg3_, long jarg4);
  public final static native boolean ArMap_setMapObjectParamsSwigExplicitArMap__SWIG_0(long jarg1, ArMap jarg1_, String jarg2, long jarg3, ArArgumentBuilder jarg3_, long jarg4);
  public final static native boolean ArMap_setMapObjectParams__SWIG_1(long jarg1, ArMap jarg1_, String jarg2, long jarg3, ArArgumentBuilder jarg3_);
  public final static native boolean ArMap_setMapObjectParamsSwigExplicitArMap__SWIG_1(long jarg1, ArMap jarg1_, String jarg2, long jarg3, ArArgumentBuilder jarg3_);
  public final static native long ArMap_getRemainder(long jarg1, ArMap jarg1_);
  public final static native long ArMap_getRemainderSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native void ArMap_setQuiet(long jarg1, ArMap jarg1_, boolean jarg2);
  public final static native void ArMap_setQuietSwigExplicitArMap(long jarg1, ArMap jarg1_, boolean jarg2);
  public final static native boolean ArMap_parseLine(long jarg1, ArMap jarg1_, String jarg2);
  public final static native boolean ArMap_parseLineSwigExplicitArMap(long jarg1, ArMap jarg1_, String jarg2);
  public final static native void ArMap_parsingComplete(long jarg1, ArMap jarg1_);
  public final static native void ArMap_parsingCompleteSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_isLoadingDataStarted(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_isLoadingDataStartedSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_isLoadingLinesAndDataStarted(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_isLoadingLinesAndDataStartedSwigExplicitArMap(long jarg1, ArMap jarg1_);
  public final static native boolean ArMap_readFileAndChangeConfig(long jarg1, ArMap jarg1_, String jarg2);
  public final static native void ArMap_changeConfigMapName(long jarg1, ArMap jarg1_, String jarg2);
  public final static native void ArMap_director_connect(ArMap obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ArMap_change_ownership(ArMap obj, long cptr, boolean take_or_release);
  public final static native long new_ArMapScan__SWIG_0(String jarg1);
  public final static native long new_ArMapScan__SWIG_1();
  public final static native long new_ArMapScan__SWIG_2(long jarg1, ArMapScan jarg1_);
  public final static native void delete_ArMapScan(long jarg1);
  public final static native String ArMapScan_getDisplayString__SWIG_0(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native String ArMapScan_getDisplayString__SWIG_1(long jarg1, ArMapScan jarg1_);
  public final static native long ArMapScan_getPoints__SWIG_0(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native long ArMapScan_getPoints__SWIG_1(long jarg1, ArMapScan jarg1_);
  public final static native long ArMapScan_getLines__SWIG_0(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native long ArMapScan_getLines__SWIG_1(long jarg1, ArMapScan jarg1_);
  public final static native long ArMapScan_getMinPose__SWIG_0(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native long ArMapScan_getMinPose__SWIG_1(long jarg1, ArMapScan jarg1_);
  public final static native long ArMapScan_getMaxPose__SWIG_0(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native long ArMapScan_getMaxPose__SWIG_1(long jarg1, ArMapScan jarg1_);
  public final static native int ArMapScan_getNumPoints__SWIG_0(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native int ArMapScan_getNumPoints__SWIG_1(long jarg1, ArMapScan jarg1_);
  public final static native boolean ArMapScan_isSortedPoints__SWIG_0(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native boolean ArMapScan_isSortedPoints__SWIG_1(long jarg1, ArMapScan jarg1_);
  public final static native void ArMapScan_setPoints__SWIG_0(long jarg1, ArMapScan jarg1_, long jarg2, String jarg3, boolean jarg4, long jarg5);
  public final static native void ArMapScan_setPoints__SWIG_1(long jarg1, ArMapScan jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native void ArMapScan_setPoints__SWIG_2(long jarg1, ArMapScan jarg1_, long jarg2, String jarg3);
  public final static native void ArMapScan_setPoints__SWIG_3(long jarg1, ArMapScan jarg1_, long jarg2);
  public final static native long ArMapScan_getLineMinPose__SWIG_0(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native long ArMapScan_getLineMinPose__SWIG_1(long jarg1, ArMapScan jarg1_);
  public final static native long ArMapScan_getLineMaxPose__SWIG_0(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native long ArMapScan_getLineMaxPose__SWIG_1(long jarg1, ArMapScan jarg1_);
  public final static native int ArMapScan_getNumLines__SWIG_0(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native int ArMapScan_getNumLines__SWIG_1(long jarg1, ArMapScan jarg1_);
  public final static native boolean ArMapScan_isSortedLines__SWIG_0(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native boolean ArMapScan_isSortedLines__SWIG_1(long jarg1, ArMapScan jarg1_);
  public final static native void ArMapScan_setLines__SWIG_0(long jarg1, ArMapScan jarg1_, long jarg2, String jarg3, boolean jarg4, long jarg5);
  public final static native void ArMapScan_setLines__SWIG_1(long jarg1, ArMapScan jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native void ArMapScan_setLines__SWIG_2(long jarg1, ArMapScan jarg1_, long jarg2, String jarg3);
  public final static native void ArMapScan_setLines__SWIG_3(long jarg1, ArMapScan jarg1_, long jarg2);
  public final static native int ArMapScan_getResolution__SWIG_0(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native int ArMapScan_getResolution__SWIG_1(long jarg1, ArMapScan jarg1_);
  public final static native void ArMapScan_setResolution__SWIG_0(long jarg1, ArMapScan jarg1_, int jarg2, String jarg3, long jarg4);
  public final static native void ArMapScan_setResolution__SWIG_1(long jarg1, ArMapScan jarg1_, int jarg2, String jarg3);
  public final static native void ArMapScan_setResolution__SWIG_2(long jarg1, ArMapScan jarg1_, int jarg2);
  public final static native void ArMapScan_writeScanToFunctor__SWIG_0(long jarg1, ArMapScan jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, String jarg4);
  public final static native void ArMapScan_writeScanToFunctor__SWIG_1(long jarg1, ArMapScan jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMapScan_writePointsToFunctor__SWIG_0(long jarg1, ArMapScan jarg1_, long jarg2, String jarg3, long jarg4, ArFunctor1_CString jarg4_);
  public final static native void ArMapScan_writePointsToFunctor__SWIG_1(long jarg1, ArMapScan jarg1_, long jarg2, String jarg3);
  public final static native void ArMapScan_writePointsToFunctor__SWIG_2(long jarg1, ArMapScan jarg1_, long jarg2);
  public final static native void ArMapScan_writeLinesToFunctor__SWIG_0(long jarg1, ArMapScan jarg1_, long jarg2, String jarg3, long jarg4, ArFunctor1_CString jarg4_);
  public final static native void ArMapScan_writeLinesToFunctor__SWIG_1(long jarg1, ArMapScan jarg1_, long jarg2, String jarg3);
  public final static native void ArMapScan_writeLinesToFunctor__SWIG_2(long jarg1, ArMapScan jarg1_, long jarg2);
  public final static native boolean ArMapScan_addToFileParser(long jarg1, ArMapScan jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMapScan_remFromFileParser(long jarg1, ArMapScan jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMapScan_readDataPoint(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native boolean ArMapScan_readLineSegment(long jarg1, ArMapScan jarg1_, String jarg2);
  public final static native void ArMapScan_loadDataPoint(long jarg1, ArMapScan jarg1_, double jarg2, double jarg3);
  public final static native void ArMapScan_loadLineSegment(long jarg1, ArMapScan jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void ArMapScan_clear(long jarg1, ArMapScan jarg1_);
  public final static native boolean ArMapScan_unite__SWIG_0(long jarg1, ArMapScan jarg1_, long jarg2, ArMapScan jarg2_, boolean jarg3);
  public final static native boolean ArMapScan_unite__SWIG_1(long jarg1, ArMapScan jarg1_, long jarg2, ArMapScan jarg2_);
  public final static native long ArMapScan_getTimeChanged(long jarg1, ArMapScan jarg1_);
  public final static native String ArMapScan_getScanType(long jarg1, ArMapScan jarg1_);
  public final static native String ArMapScan_getPointsKeyword(long jarg1, ArMapScan jarg1_);
  public final static native String ArMapScan_getLinesKeyword(long jarg1, ArMapScan jarg1_);
  public final static native void ArMapScan_writePointsToFunctor__SWIG_3(long jarg1, ArMapScan jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, String jarg4);
  public final static native void ArMapScan_writePointsToFunctor__SWIG_4(long jarg1, ArMapScan jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMapScan_writeLinesToFunctor__SWIG_3(long jarg1, ArMapScan jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, String jarg4);
  public final static native void ArMapScan_writeLinesToFunctor__SWIG_4(long jarg1, ArMapScan jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native boolean ArMapScan_addExtraToFileParser(long jarg1, ArMapScan jarg1_, long jarg2, ArFileParser jarg2_, boolean jarg3);
  public final static native boolean ArMapScan_remExtraFromFileParser(long jarg1, ArMapScan jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native void ArMapObjects_DEFAULT_KEYWORD_set(String jarg1);
  public final static native String ArMapObjects_DEFAULT_KEYWORD_get();
  public final static native long new_ArMapObjects__SWIG_0(String jarg1);
  public final static native long new_ArMapObjects__SWIG_1();
  public final static native long new_ArMapObjects__SWIG_2(long jarg1, ArMapObjects jarg1_);
  public final static native void delete_ArMapObjects(long jarg1);
  public final static native long ArMapObjects_findFirstMapObject__SWIG_0(long jarg1, ArMapObjects jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ArMapObjects_findFirstMapObject__SWIG_1(long jarg1, ArMapObjects jarg1_, String jarg2, String jarg3);
  public final static native long ArMapObjects_findMapObject__SWIG_0(long jarg1, ArMapObjects jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ArMapObjects_findMapObject__SWIG_1(long jarg1, ArMapObjects jarg1_, String jarg2, String jarg3);
  public final static native long ArMapObjects_findMapObject__SWIG_2(long jarg1, ArMapObjects jarg1_, String jarg2);
  public final static native long ArMapObjects_findMapObjectsOfType__SWIG_0(long jarg1, ArMapObjects jarg1_, String jarg2, boolean jarg3);
  public final static native long ArMapObjects_findMapObjectsOfType__SWIG_1(long jarg1, ArMapObjects jarg1_, String jarg2);
  public final static native long ArMapObjects_getMapObjects(long jarg1, ArMapObjects jarg1_);
  public final static native void ArMapObjects_setMapObjects__SWIG_0(long jarg1, ArMapObjects jarg1_, long jarg2, ArMapObjectPtrList jarg2_, boolean jarg3, long jarg4);
  public final static native void ArMapObjects_setMapObjects__SWIG_1(long jarg1, ArMapObjects jarg1_, long jarg2, ArMapObjectPtrList jarg2_, boolean jarg3);
  public final static native void ArMapObjects_setMapObjects__SWIG_2(long jarg1, ArMapObjects jarg1_, long jarg2, ArMapObjectPtrList jarg2_);
  public final static native void ArMapObjects_writeObjectListToFunctor(long jarg1, ArMapObjects jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMapObjects_clear(long jarg1, ArMapObjects jarg1_);
  public final static native boolean ArMapObjects_addToFileParser(long jarg1, ArMapObjects jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMapObjects_remFromFileParser(long jarg1, ArMapObjects jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native long ArMapObjects_getTimeChanged(long jarg1, ArMapObjects jarg1_);
  public final static native long new_ArMapInfo__SWIG_0(long jarg1, long jarg2, String jarg3);
  public final static native long new_ArMapInfo__SWIG_1(long jarg1, long jarg2);
  public final static native long new_ArMapInfo__SWIG_2(long jarg1);
  public final static native long new_ArMapInfo__SWIG_3();
  public final static native long new_ArMapInfo__SWIG_4(long jarg1, ArMapInfo jarg1_);
  public final static native void delete_ArMapInfo(long jarg1);
  public final static native long ArMapInfo_getInfo__SWIG_0(long jarg1, ArMapInfo jarg1_, String jarg2);
  public final static native long ArMapInfo_getInfo__SWIG_1(long jarg1, ArMapInfo jarg1_, int jarg2);
  public final static native long ArMapInfo_getMapInfo(long jarg1, ArMapInfo jarg1_);
  public final static native int ArMapInfo_getInfoCount(long jarg1, ArMapInfo jarg1_);
  public final static native long ArMapInfo_getInfoNames(long jarg1, ArMapInfo jarg1_);
  public final static native boolean ArMapInfo_setInfo__SWIG_0(long jarg1, ArMapInfo jarg1_, String jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_, long jarg4);
  public final static native boolean ArMapInfo_setInfo__SWIG_1(long jarg1, ArMapInfo jarg1_, int jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_, long jarg4);
  public final static native boolean ArMapInfo_setInfo__SWIG_2(long jarg1, ArMapInfo jarg1_, int jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_);
  public final static native boolean ArMapInfo_setMapInfo__SWIG_0(long jarg1, ArMapInfo jarg1_, long jarg2, ArArgumentBuilderPtrList jarg2_, long jarg3);
  public final static native boolean ArMapInfo_setMapInfo__SWIG_1(long jarg1, ArMapInfo jarg1_, long jarg2, ArArgumentBuilderPtrList jarg2_);
  public final static native String ArMapInfo_getInfoName(long jarg1, ArMapInfo jarg1_, int jarg2);
  public final static native void ArMapInfo_writeInfoToFunctor(long jarg1, ArMapInfo jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMapInfo_clear(long jarg1, ArMapInfo jarg1_);
  public final static native boolean ArMapInfo_addToFileParser(long jarg1, ArMapInfo jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMapInfo_remFromFileParser(long jarg1, ArMapInfo jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native long ArMapInfo_getTimeChanged(long jarg1, ArMapInfo jarg1_);
  public final static native long new_ArMapSupplement__SWIG_0();
  public final static native long new_ArMapSupplement__SWIG_1(long jarg1, ArMapSupplement jarg1_);
  public final static native void delete_ArMapSupplement(long jarg1);
  public final static native boolean ArMapSupplement_hasOriginLatLongAlt(long jarg1, ArMapSupplement jarg1_);
  public final static native long ArMapSupplement_getOriginLatLong(long jarg1, ArMapSupplement jarg1_);
  public final static native double ArMapSupplement_getOriginAltitude(long jarg1, ArMapSupplement jarg1_);
  public final static native void ArMapSupplement_setOriginLatLongAlt__SWIG_0(long jarg1, ArMapSupplement jarg1_, boolean jarg2, long jarg3, ArPose jarg3_, double jarg4, long jarg5);
  public final static native void ArMapSupplement_setOriginLatLongAlt__SWIG_1(long jarg1, ArMapSupplement jarg1_, boolean jarg2, long jarg3, ArPose jarg3_, double jarg4);
  public final static native void ArMapSupplement_writeSupplementToFunctor(long jarg1, ArMapSupplement jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMapSupplement_clear(long jarg1, ArMapSupplement jarg1_);
  public final static native boolean ArMapSupplement_addToFileParser(long jarg1, ArMapSupplement jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMapSupplement_remFromFileParser(long jarg1, ArMapSupplement jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native long ArMapSupplement_getTimeChanged(long jarg1, ArMapSupplement jarg1_);
  public final static native long new_ArDataTagCaseCmpOp();
  public final static native void delete_ArDataTagCaseCmpOp(long jarg1);
  public final static native long new_ArMapSimple__SWIG_0(String jarg1, String jarg2, String jarg3);
  public final static native long new_ArMapSimple__SWIG_1(String jarg1, String jarg2);
  public final static native long new_ArMapSimple__SWIG_2(String jarg1);
  public final static native long new_ArMapSimple__SWIG_3();
  public final static native long new_ArMapSimple__SWIG_4(long jarg1, ArMapSimple jarg1_);
  public final static native void delete_ArMapSimple(long jarg1);
  public final static native void ArMapSimple_clear(long jarg1, ArMapSimple jarg1_);
  public final static native boolean ArMapSimple_set(long jarg1, ArMapSimple jarg1_, long jarg2, ArMapInterface jarg2_);
  public final static native long ArMapSimple_cloneMap(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_getScanTypes(long jarg1, ArMapSimple jarg1_);
  public final static native boolean ArMapSimple_setScanTypes(long jarg1, ArMapSimple jarg1_, long jarg2);
  public final static native int ArMapSimple_lock(long jarg1, ArMapSimple jarg1_);
  public final static native int ArMapSimple_tryLock(long jarg1, ArMapSimple jarg1_);
  public final static native int ArMapSimple_unlock(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_getInfo__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native long ArMapSimple_getInfo__SWIG_1(long jarg1, ArMapSimple jarg1_, int jarg2);
  public final static native long ArMapSimple_getMapInfo(long jarg1, ArMapSimple jarg1_);
  public final static native int ArMapSimple_getInfoCount(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_getInfoNames(long jarg1, ArMapSimple jarg1_);
  public final static native boolean ArMapSimple_setInfo__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_, long jarg4);
  public final static native boolean ArMapSimple_setInfo__SWIG_1(long jarg1, ArMapSimple jarg1_, String jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_);
  public final static native boolean ArMapSimple_setInfo__SWIG_2(long jarg1, ArMapSimple jarg1_, int jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_, long jarg4);
  public final static native boolean ArMapSimple_setInfo__SWIG_3(long jarg1, ArMapSimple jarg1_, int jarg2, long jarg3, ArArgumentBuilderPtrList jarg3_);
  public final static native boolean ArMapSimple_setMapInfo__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, ArArgumentBuilderPtrList jarg2_, long jarg3);
  public final static native boolean ArMapSimple_setMapInfo__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, ArArgumentBuilderPtrList jarg2_);
  public final static native void ArMapSimple_writeInfoToFunctor(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native String ArMapSimple_getInfoName(long jarg1, ArMapSimple jarg1_, int jarg2);
  public final static native long ArMapSimple_findFirstMapObject__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ArMapSimple_findFirstMapObject__SWIG_1(long jarg1, ArMapSimple jarg1_, String jarg2, String jarg3);
  public final static native long ArMapSimple_findMapObject__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native long ArMapSimple_findMapObject__SWIG_1(long jarg1, ArMapSimple jarg1_, String jarg2, String jarg3);
  public final static native long ArMapSimple_findMapObject__SWIG_2(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native long ArMapSimple_findMapObjectsOfType__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2, boolean jarg3);
  public final static native long ArMapSimple_findMapObjectsOfType__SWIG_1(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native long ArMapSimple_getMapObjects(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_setMapObjects__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, ArMapObjectPtrList jarg2_, boolean jarg3, long jarg4);
  public final static native void ArMapSimple_setMapObjects__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, ArMapObjectPtrList jarg2_, boolean jarg3);
  public final static native void ArMapSimple_setMapObjects__SWIG_2(long jarg1, ArMapSimple jarg1_, long jarg2, ArMapObjectPtrList jarg2_);
  public final static native void ArMapSimple_writeObjectListToFunctor(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native boolean ArMapSimple_hasOriginLatLongAlt(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_getOriginLatLong(long jarg1, ArMapSimple jarg1_);
  public final static native double ArMapSimple_getOriginAltitude(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_setOriginLatLongAlt__SWIG_0(long jarg1, ArMapSimple jarg1_, boolean jarg2, long jarg3, ArPose jarg3_, double jarg4, long jarg5);
  public final static native void ArMapSimple_setOriginLatLongAlt__SWIG_1(long jarg1, ArMapSimple jarg1_, boolean jarg2, long jarg3, ArPose jarg3_, double jarg4);
  public final static native void ArMapSimple_writeSupplementToFunctor(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native String ArMapSimple_getDisplayString__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native String ArMapSimple_getDisplayString__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_getPoints__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native long ArMapSimple_getPoints__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_getMinPose__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native long ArMapSimple_getMinPose__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_getMaxPose__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native long ArMapSimple_getMaxPose__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native int ArMapSimple_getNumPoints__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native int ArMapSimple_getNumPoints__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native boolean ArMapSimple_isSortedPoints__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native boolean ArMapSimple_isSortedPoints__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_setPoints__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, String jarg3, boolean jarg4, long jarg5);
  public final static native void ArMapSimple_setPoints__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native void ArMapSimple_setPoints__SWIG_2(long jarg1, ArMapSimple jarg1_, long jarg2, String jarg3);
  public final static native void ArMapSimple_setPoints__SWIG_3(long jarg1, ArMapSimple jarg1_, long jarg2);
  public final static native long ArMapSimple_getLines__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native long ArMapSimple_getLines__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_getLineMinPose__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native long ArMapSimple_getLineMinPose__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_getLineMaxPose__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native long ArMapSimple_getLineMaxPose__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native int ArMapSimple_getNumLines__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native int ArMapSimple_getNumLines__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native boolean ArMapSimple_isSortedLines__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native boolean ArMapSimple_isSortedLines__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_setLines__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, String jarg3, boolean jarg4, long jarg5);
  public final static native void ArMapSimple_setLines__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, String jarg3, boolean jarg4);
  public final static native void ArMapSimple_setLines__SWIG_2(long jarg1, ArMapSimple jarg1_, long jarg2, String jarg3);
  public final static native void ArMapSimple_setLines__SWIG_3(long jarg1, ArMapSimple jarg1_, long jarg2);
  public final static native int ArMapSimple_getResolution__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native int ArMapSimple_getResolution__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_setResolution__SWIG_0(long jarg1, ArMapSimple jarg1_, int jarg2, String jarg3, long jarg4);
  public final static native void ArMapSimple_setResolution__SWIG_1(long jarg1, ArMapSimple jarg1_, int jarg2, String jarg3);
  public final static native void ArMapSimple_setResolution__SWIG_2(long jarg1, ArMapSimple jarg1_, int jarg2);
  public final static native void ArMapSimple_writeScanToFunctor__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, String jarg4);
  public final static native void ArMapSimple_writeScanToFunctor__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMapSimple_writePointsToFunctor__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, String jarg3, long jarg4, ArFunctor1_CString jarg4_);
  public final static native void ArMapSimple_writePointsToFunctor__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, String jarg3);
  public final static native void ArMapSimple_writePointsToFunctor__SWIG_2(long jarg1, ArMapSimple jarg1_, long jarg2);
  public final static native void ArMapSimple_writeLinesToFunctor__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, String jarg3, long jarg4, ArFunctor1_CString jarg4_);
  public final static native void ArMapSimple_writeLinesToFunctor__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, String jarg3);
  public final static native void ArMapSimple_writeLinesToFunctor__SWIG_2(long jarg1, ArMapSimple jarg1_, long jarg2);
  public final static native boolean ArMapSimple_addToFileParser(long jarg1, ArMapSimple jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMapSimple_remFromFileParser(long jarg1, ArMapSimple jarg1_, long jarg2, ArFileParser jarg2_);
  public final static native boolean ArMapSimple_readDataPoint(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native boolean ArMapSimple_readLineSegment(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native void ArMapSimple_loadDataPoint(long jarg1, ArMapSimple jarg1_, double jarg2, double jarg3);
  public final static native void ArMapSimple_loadLineSegment(long jarg1, ArMapSimple jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void ArMapSimple_mapChanged(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_addMapChangedCB__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMapSimple_addMapChangedCB__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapSimple_remMapChangedCB(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapSimple_addPreMapChangedCB__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMapSimple_addPreMapChangedCB__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapSimple_remPreMapChangedCB(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapSimple_setMapChangedLogLevel(long jarg1, ArMapSimple jarg1_, int jarg2);
  public final static native int ArMapSimple_getMapChangedLogLevel(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_writeToFunctor(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMapSimple_writeObjectsToFunctor__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, boolean jarg4, String jarg5);
  public final static native void ArMapSimple_writeObjectsToFunctor__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3, boolean jarg4);
  public final static native void ArMapSimple_writeObjectsToFunctor__SWIG_2(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor1_CString jarg2_, String jarg3);
  public final static native void ArMapSimple_addPreWriteFileCB__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMapSimple_addPreWriteFileCB__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapSimple_remPreWriteFileCB(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapSimple_addPostWriteFileCB__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArMapSimple_addPostWriteFileCB__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArMapSimple_remPostWriteFileCB(long jarg1, ArMapSimple jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native boolean ArMapSimple_readFile__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2, String jarg3, long jarg4, long jarg5, long jarg6);
  public final static native boolean ArMapSimple_readFile__SWIG_1(long jarg1, ArMapSimple jarg1_, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native boolean ArMapSimple_readFile__SWIG_2(long jarg1, ArMapSimple jarg1_, String jarg2, String jarg3, long jarg4);
  public final static native boolean ArMapSimple_readFile__SWIG_3(long jarg1, ArMapSimple jarg1_, String jarg2, String jarg3);
  public final static native boolean ArMapSimple_readFile__SWIG_4(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native boolean ArMapSimple_writeFile__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2, boolean jarg3, long jarg4, long jarg5, long jarg6);
  public final static native boolean ArMapSimple_writeFile__SWIG_1(long jarg1, ArMapSimple jarg1_, String jarg2, boolean jarg3, long jarg4, long jarg5);
  public final static native boolean ArMapSimple_writeFile__SWIG_2(long jarg1, ArMapSimple jarg1_, String jarg2, boolean jarg3, long jarg4);
  public final static native boolean ArMapSimple_writeFile__SWIG_3(long jarg1, ArMapSimple jarg1_, String jarg2, boolean jarg3);
  public final static native boolean ArMapSimple_writeFile__SWIG_4(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native boolean ArMapSimple_getMapId__SWIG_0(long jarg1, ArMapSimple jarg1_, long jarg2, ArMapId jarg2_, boolean jarg3);
  public final static native boolean ArMapSimple_getMapId__SWIG_1(long jarg1, ArMapSimple jarg1_, long jarg2, ArMapId jarg2_);
  public final static native boolean ArMapSimple_calculateChecksum(long jarg1, ArMapSimple jarg1_, long jarg2, long jarg3);
  public final static native String ArMapSimple_getBaseDirectory(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_setBaseDirectory(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native String ArMapSimple_getTempDirectory(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_setTempDirectory(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native String ArMapSimple_createRealFileName(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native String ArMapSimple_getFileName(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_setSourceFileName__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void ArMapSimple_setSourceFileName__SWIG_1(long jarg1, ArMapSimple jarg1_, String jarg2, String jarg3);
  public final static native boolean ArMapSimple_refresh(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_setIgnoreEmptyFileName(long jarg1, ArMapSimple jarg1_, boolean jarg2);
  public final static native boolean ArMapSimple_getIgnoreEmptyFileName(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_setIgnoreCase__SWIG_0(long jarg1, ArMapSimple jarg1_, boolean jarg2);
  public final static native void ArMapSimple_setIgnoreCase__SWIG_1(long jarg1, ArMapSimple jarg1_);
  public final static native boolean ArMapSimple_getIgnoreCase(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_getInactiveInfo(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_getInactiveObjects(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_getChildObjects(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_findMapObjectParams(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native boolean ArMapSimple_setMapObjectParams__SWIG_0(long jarg1, ArMapSimple jarg1_, String jarg2, long jarg3, ArArgumentBuilder jarg3_, long jarg4);
  public final static native boolean ArMapSimple_setMapObjectParams__SWIG_1(long jarg1, ArMapSimple jarg1_, String jarg2, long jarg3, ArArgumentBuilder jarg3_);
  public final static native long ArMapSimple_getRemainder(long jarg1, ArMapSimple jarg1_);
  public final static native void ArMapSimple_setQuiet(long jarg1, ArMapSimple jarg1_, boolean jarg2);
  public final static native boolean ArMapSimple_parseLine(long jarg1, ArMapSimple jarg1_, String jarg2);
  public final static native void ArMapSimple_parsingComplete(long jarg1, ArMapSimple jarg1_);
  public final static native boolean ArMapSimple_isLoadingDataStarted(long jarg1, ArMapSimple jarg1_);
  public final static native boolean ArMapSimple_isLoadingLinesAndDataStarted(long jarg1, ArMapSimple jarg1_);
  public final static native long ArMapSimple_findMapObjectParamInfo(String jarg1, long jarg2, ArArgumentBuilderPtrList jarg2_);
  public final static native long ArMapObject_createMapObject(long jarg1, ArArgumentBuilder jarg1_);
  public final static native int ArMapObject_TYPE_ARG_INDEX_get();
  public final static native int ArMapObject_POSE_X_ARG_INDEX_get();
  public final static native int ArMapObject_POSE_Y_ARG_INDEX_get();
  public final static native int ArMapObject_TH_ARG_INDEX_get();
  public final static native int ArMapObject_DESC_ARG_INDEX_get();
  public final static native int ArMapObject_ICON_ARG_INDEX_get();
  public final static native int ArMapObject_NAME_ARG_INDEX_get();
  public final static native int ArMapObject_LAST_POSE_ARG_INDEX_get();
  public final static native int ArMapObject_FROM_X_ARG_INDEX_get();
  public final static native int ArMapObject_FROM_Y_ARG_INDEX_get();
  public final static native int ArMapObject_TO_X_ARG_INDEX_get();
  public final static native int ArMapObject_TO_Y_ARG_INDEX_get();
  public final static native int ArMapObject_LAST_ARG_INDEX_get();
  public final static native int ArMapObject_ARG_INDEX_COUNT_get();
  public final static native long new_ArMapObject__SWIG_0(String jarg1, long jarg2, ArPose jarg2_, String jarg3, String jarg4, String jarg5, boolean jarg6, long jarg7, ArPose jarg7_, long jarg8, ArPose jarg8_);
  public final static native long new_ArMapObject__SWIG_1(long jarg1, ArMapObject jarg1_);
  public final static native void delete_ArMapObject(long jarg1);
  public final static native String ArMapObject_getType(long jarg1, ArMapObject jarg1_);
  public final static native String ArMapObject_getBaseType(long jarg1, ArMapObject jarg1_);
  public final static native String ArMapObject_getName(long jarg1, ArMapObject jarg1_);
  public final static native String ArMapObject_getDescription(long jarg1, ArMapObject jarg1_);
  public final static native String ArMapObject_getIconName(long jarg1, ArMapObject jarg1_);
  public final static native int ArMapObject_getId(long jarg1, ArMapObject jarg1_);
  public final static native void ArMapObject_setDescription(long jarg1, ArMapObject jarg1_, String jarg2);
  public final static native long ArMapObject_getPose(long jarg1, ArMapObject jarg1_);
  public final static native boolean ArMapObject_hasFromTo(long jarg1, ArMapObject jarg1_);
  public final static native long ArMapObject_getFromPose(long jarg1, ArMapObject jarg1_);
  public final static native long ArMapObject_getToPose(long jarg1, ArMapObject jarg1_);
  public final static native double ArMapObject_getFromToRotation(long jarg1, ArMapObject jarg1_);
  public final static native long ArMapObject_getFromToSegments(long jarg1, ArMapObject jarg1_);
  public final static native long ArMapObject_getFromToSegment(long jarg1, ArMapObject jarg1_);
  public final static native long ArMapObject_findCenter(long jarg1, ArMapObject jarg1_);
  public final static native String ArMapObject_toString(long jarg1, ArMapObject jarg1_);
  public final static native String ArMapObject_getStringRepresentation(long jarg1, ArMapObject jarg1_);
  public final static native void ArMapObject_log__SWIG_0(long jarg1, ArMapObject jarg1_, String jarg2);
  public final static native void ArMapObject_log__SWIG_1(long jarg1, ArMapObject jarg1_);
  public final static native String ArMapObject_getFileName(long jarg1, ArMapObject jarg1_);
  public final static native boolean ArMapId_create(String jarg1, long jarg2, ArMapId jarg2_);
  public final static native boolean ArMapId_toPacket(long jarg1, ArMapId jarg1_, long jarg2, ArBasePacket jarg2_);
  public final static native boolean ArMapId_fromPacket(long jarg1, ArBasePacket jarg1_, long jarg2, ArMapId jarg2_);
  public final static native long new_ArMapId__SWIG_0();
  public final static native long new_ArMapId__SWIG_1(String jarg1, String jarg2, long jarg3, long jarg4, int jarg5, long jarg6);
  public final static native long new_ArMapId__SWIG_2(long jarg1, ArMapId jarg1_);
  public final static native void delete_ArMapId(long jarg1);
  public final static native boolean ArMapId_isNull(long jarg1, ArMapId jarg1_);
  public final static native String ArMapId_getSourceName(long jarg1, ArMapId jarg1_);
  public final static native String ArMapId_getFileName(long jarg1, ArMapId jarg1_);
  public final static native long ArMapId_getChecksum(long jarg1, ArMapId jarg1_);
  public final static native long ArMapId_getChecksumLength(long jarg1, ArMapId jarg1_);
  public final static native String ArMapId_getDisplayChecksum(long jarg1, ArMapId jarg1_);
  public final static native int ArMapId_getSize(long jarg1, ArMapId jarg1_);
  public final static native long ArMapId_getTimestamp(long jarg1, ArMapId jarg1_);
  public final static native void ArMapId_clear(long jarg1, ArMapId jarg1_);
  public final static native void ArMapId_setSourceName(long jarg1, ArMapId jarg1_, String jarg2);
  public final static native void ArMapId_setFileName(long jarg1, ArMapId jarg1_, String jarg2);
  public final static native void ArMapId_setChecksum(long jarg1, ArMapId jarg1_, long jarg2, long jarg3);
  public final static native void ArMapId_setSize(long jarg1, ArMapId jarg1_, int jarg2);
  public final static native void ArMapId_setTimestamp(long jarg1, ArMapId jarg1_, long jarg2);
  public final static native boolean ArMapId_isSameFile(long jarg1, ArMapId jarg1_, long jarg2, ArMapId jarg2_);
  public final static native boolean ArMapId_isVersionOfSameFile(long jarg1, ArMapId jarg1_, long jarg2, ArMapId jarg2_);
  public final static native boolean ArMapId_isValidTimestamp(long jarg1, ArMapId jarg1_);
  public final static native void ArMapId_log(long jarg1, ArMapId jarg1_, String jarg2);
  public final static native void delete_ArMode(long jarg1);
  public final static native String ArMode_getName(long jarg1, ArMode jarg1_);
  public final static native void ArMode_activate(long jarg1, ArMode jarg1_);
  public final static native void ArMode_deactivate(long jarg1, ArMode jarg1_);
  public final static native void ArMode_userTask(long jarg1, ArMode jarg1_);
  public final static native void ArMode_help(long jarg1, ArMode jarg1_);
  public final static native boolean ArMode_baseActivate(long jarg1, ArMode jarg1_);
  public final static native boolean ArMode_baseDeactivate(long jarg1, ArMode jarg1_);
  public final static native void ArMode_baseHelp();
  public final static native char ArMode_getKey(long jarg1, ArMode jarg1_);
  public final static native char ArMode_getKey2(long jarg1, ArMode jarg1_);
  public final static native long new_ArModeTeleop(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModeTeleop(long jarg1);
  public final static native void ArModeTeleop_activate(long jarg1, ArModeTeleop jarg1_);
  public final static native void ArModeTeleop_deactivate(long jarg1, ArModeTeleop jarg1_);
  public final static native void ArModeTeleop_help(long jarg1, ArModeTeleop jarg1_);
  public final static native void ArModeTeleop_userTask(long jarg1, ArModeTeleop jarg1_);
  public final static native long new_ArModeUnguardedTeleop(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModeUnguardedTeleop(long jarg1);
  public final static native void ArModeUnguardedTeleop_activate(long jarg1, ArModeUnguardedTeleop jarg1_);
  public final static native void ArModeUnguardedTeleop_deactivate(long jarg1, ArModeUnguardedTeleop jarg1_);
  public final static native void ArModeUnguardedTeleop_help(long jarg1, ArModeUnguardedTeleop jarg1_);
  public final static native void ArModeUnguardedTeleop_userTask(long jarg1, ArModeUnguardedTeleop jarg1_);
  public final static native long new_ArModeWander(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModeWander(long jarg1);
  public final static native void ArModeWander_activate(long jarg1, ArModeWander jarg1_);
  public final static native void ArModeWander_deactivate(long jarg1, ArModeWander jarg1_);
  public final static native void ArModeWander_help(long jarg1, ArModeWander jarg1_);
  public final static native void ArModeWander_userTask(long jarg1, ArModeWander jarg1_);
  public final static native long new_ArModeGripper(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModeGripper(long jarg1);
  public final static native void ArModeGripper_activate(long jarg1, ArModeGripper jarg1_);
  public final static native void ArModeGripper_deactivate(long jarg1, ArModeGripper jarg1_);
  public final static native void ArModeGripper_userTask(long jarg1, ArModeGripper jarg1_);
  public final static native void ArModeGripper_help(long jarg1, ArModeGripper jarg1_);
  public final static native void ArModeGripper_open(long jarg1, ArModeGripper jarg1_);
  public final static native void ArModeGripper_close(long jarg1, ArModeGripper jarg1_);
  public final static native void ArModeGripper_up(long jarg1, ArModeGripper jarg1_);
  public final static native void ArModeGripper_down(long jarg1, ArModeGripper jarg1_);
  public final static native void ArModeGripper_stop(long jarg1, ArModeGripper jarg1_);
  public final static native void ArModeGripper_exercise(long jarg1, ArModeGripper jarg1_);
  public final static native long new_ArModeCamera(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModeCamera(long jarg1);
  public final static native void ArModeCamera_activate(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_deactivate(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_userTask(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_help(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_up(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_down(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_left(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_right(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_center(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_zoomIn(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_zoomOut(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_exercise(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_toggleAutoFocus(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_sony(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_canon(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_dpptu(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_amptu(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_canonInverted(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_sonySerial(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_canonSerial(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_dpptuSerial(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_amptuSerial(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_canonInvertedSerial(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_rvisionSerial(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_com1(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_com2(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_com3(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_com4(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_aux1(long jarg1, ArModeCamera jarg1_);
  public final static native void ArModeCamera_aux2(long jarg1, ArModeCamera jarg1_);
  public final static native long new_ArModeSonar(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModeSonar(long jarg1);
  public final static native void ArModeSonar_activate(long jarg1, ArModeSonar jarg1_);
  public final static native void ArModeSonar_deactivate(long jarg1, ArModeSonar jarg1_);
  public final static native void ArModeSonar_userTask(long jarg1, ArModeSonar jarg1_);
  public final static native void ArModeSonar_help(long jarg1, ArModeSonar jarg1_);
  public final static native void ArModeSonar_allSonar(long jarg1, ArModeSonar jarg1_);
  public final static native void ArModeSonar_firstSonar(long jarg1, ArModeSonar jarg1_);
  public final static native void ArModeSonar_secondSonar(long jarg1, ArModeSonar jarg1_);
  public final static native void ArModeSonar_thirdSonar(long jarg1, ArModeSonar jarg1_);
  public final static native void ArModeSonar_fourthSonar(long jarg1, ArModeSonar jarg1_);
  public final static native long new_ArModeBumps(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModeBumps(long jarg1);
  public final static native void ArModeBumps_activate(long jarg1, ArModeBumps jarg1_);
  public final static native void ArModeBumps_deactivate(long jarg1, ArModeBumps jarg1_);
  public final static native void ArModeBumps_userTask(long jarg1, ArModeBumps jarg1_);
  public final static native void ArModeBumps_help(long jarg1, ArModeBumps jarg1_);
  public final static native long new_ArModePosition__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4, long jarg5, ArAnalogGyro jarg5_);
  public final static native long new_ArModePosition__SWIG_1(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModePosition(long jarg1);
  public final static native void ArModePosition_activate(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_deactivate(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_userTask(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_help(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_up(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_down(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_left(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_right(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_stop(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_reset(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_mode(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_gyro(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_incDistance(long jarg1, ArModePosition jarg1_);
  public final static native void ArModePosition_decDistance(long jarg1, ArModePosition jarg1_);
  public final static native long new_ArModeIO(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModeIO(long jarg1);
  public final static native void ArModeIO_activate(long jarg1, ArModeIO jarg1_);
  public final static native void ArModeIO_deactivate(long jarg1, ArModeIO jarg1_);
  public final static native void ArModeIO_userTask(long jarg1, ArModeIO jarg1_);
  public final static native void ArModeIO_help(long jarg1, ArModeIO jarg1_);
  public final static native long new_ArModeLaser__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4, long jarg5);
  public final static native long new_ArModeLaser__SWIG_1(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModeLaser(long jarg1);
  public final static native void ArModeLaser_activate(long jarg1, ArModeLaser jarg1_);
  public final static native void ArModeLaser_deactivate(long jarg1, ArModeLaser jarg1_);
  public final static native void ArModeLaser_userTask(long jarg1, ArModeLaser jarg1_);
  public final static native void ArModeLaser_help(long jarg1, ArModeLaser jarg1_);
  public final static native void ArModeLaser_switchToLaser(long jarg1, ArModeLaser jarg1_, int jarg2);
  public final static native long new_ArModeActs__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4, long jarg5, ArACTS_1_2 jarg5_);
  public final static native long new_ArModeActs__SWIG_1(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModeActs(long jarg1);
  public final static native void ArModeActs_activate(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_deactivate(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_help(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_userTask(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_channel1(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_channel2(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_channel3(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_channel4(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_channel5(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_channel6(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_channel7(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_channel8(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_stop(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_start(long jarg1, ArModeActs jarg1_);
  public final static native void ArModeActs_toggleAcquire(long jarg1, ArModeActs jarg1_);
  public final static native long new_ArModeCommand(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModeCommand(long jarg1);
  public final static native void ArModeCommand_activate(long jarg1, ArModeCommand jarg1_);
  public final static native void ArModeCommand_deactivate(long jarg1, ArModeCommand jarg1_);
  public final static native void ArModeCommand_help(long jarg1, ArModeCommand jarg1_);
  public final static native long new_ArModeTCM2__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4, long jarg5, ArTCM2 jarg5_);
  public final static native long new_ArModeTCM2__SWIG_1(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void delete_ArModeTCM2(long jarg1);
  public final static native void ArModeTCM2_activate(long jarg1, ArModeTCM2 jarg1_);
  public final static native void ArModeTCM2_deactivate(long jarg1, ArModeTCM2 jarg1_);
  public final static native void ArModeTCM2_help(long jarg1, ArModeTCM2 jarg1_);
  public final static native void ArModeTCM2_userTask(long jarg1, ArModeTCM2 jarg1_);
  public final static native long new_ArModeConfig(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void ArModeConfig_activate(long jarg1, ArModeConfig jarg1_);
  public final static native void ArModeConfig_deactivate(long jarg1, ArModeConfig jarg1_);
  public final static native void ArModeConfig_help(long jarg1, ArModeConfig jarg1_);
  public final static native void delete_ArModeConfig(long jarg1);
  public final static native long new_ArModeRobotStatus(long jarg1, ArRobot jarg1_, String jarg2, char jarg3, char jarg4);
  public final static native void ArModeRobotStatus_activate(long jarg1, ArModeRobotStatus jarg1_);
  public final static native void ArModeRobotStatus_deactivate(long jarg1, ArModeRobotStatus jarg1_);
  public final static native void ArModeRobotStatus_help(long jarg1, ArModeRobotStatus jarg1_);
  public final static native void ArModeRobotStatus_userTask(long jarg1, ArModeRobotStatus jarg1_);
  public final static native void delete_ArModeRobotStatus(long jarg1);
  public final static native void delete_ArModule(long jarg1);
  public final static native boolean ArModule_init__SWIG_0(long jarg1, ArModule jarg1_, long jarg2, ArRobot jarg2_, long jarg3);
  public final static native boolean ArModule_init__SWIG_1(long jarg1, ArModule jarg1_, long jarg2, ArRobot jarg2_);
  public final static native boolean ArModule_exit(long jarg1, ArModule jarg1_);
  public final static native long ArModule_getRobot(long jarg1, ArModule jarg1_);
  public final static native void ArModule_setRobot(long jarg1, ArModule jarg1_, long jarg2, ArRobot jarg2_);
  public final static native int ArModuleLoader_STATUS_SUCCESS_get();
  public final static native int ArModuleLoader_load__SWIG_0(String jarg1, long jarg2, ArRobot jarg2_, long jarg3, boolean jarg4);
  public final static native int ArModuleLoader_load__SWIG_1(String jarg1, long jarg2, ArRobot jarg2_, long jarg3);
  public final static native int ArModuleLoader_load__SWIG_2(String jarg1, long jarg2, ArRobot jarg2_);
  public final static native int ArModuleLoader_reload__SWIG_0(String jarg1, long jarg2, ArRobot jarg2_, long jarg3, boolean jarg4);
  public final static native int ArModuleLoader_reload__SWIG_1(String jarg1, long jarg2, ArRobot jarg2_, long jarg3);
  public final static native int ArModuleLoader_reload__SWIG_2(String jarg1, long jarg2, ArRobot jarg2_);
  public final static native int ArModuleLoader_close__SWIG_0(String jarg1, boolean jarg2);
  public final static native int ArModuleLoader_close__SWIG_1(String jarg1);
  public final static native void ArModuleLoader_closeAll();
  public final static native long new_ArModuleLoader();
  public final static native void delete_ArModuleLoader(long jarg1);
  public final static native int ArMutex_STATUS_FAILED_INIT_get();
  public final static native long new_ArMutex__SWIG_0(boolean jarg1);
  public final static native long new_ArMutex__SWIG_1();
  public final static native void delete_ArMutex(long jarg1);
  public final static native long new_ArMutex__SWIG_2(long jarg1, ArMutex jarg1_);
  public final static native int ArMutex_lock(long jarg1, ArMutex jarg1_);
  public final static native int ArMutex_tryLock(long jarg1, ArMutex jarg1_);
  public final static native int ArMutex_unlock(long jarg1, ArMutex jarg1_);
  public final static native String ArMutex_getError(long jarg1, ArMutex jarg1_, int jarg2);
  public final static native void ArMutex_setLog(long jarg1, ArMutex jarg1_, boolean jarg2);
  public final static native void ArMutex_setLogName(long jarg1, ArMutex jarg1_, String jarg2);
  public final static native long ArMutex_getMutex(long jarg1, ArMutex jarg1_);
  public final static native void ArMutex_setLockWarningTime(double jarg1);
  public final static native double ArMutex_getLockWarningTime();
  public final static native void ArMutex_setUnlockWarningTime(double jarg1);
  public final static native double ArMutex_getUnlockWarningTime();
  public final static native long new_ArNMEAParser__SWIG_0(String jarg1);
  public final static native long new_ArNMEAParser__SWIG_1();
  public final static native int ArNMEAParser_ParseFinished_get();
  public final static native int ArNMEAParser_ParseError_get();
  public final static native int ArNMEAParser_ParseData_get();
  public final static native int ArNMEAParser_ParseUpdated_get();
  public final static native void ArNMEAParser_ParseFlags_set(long jarg1, ArNMEAParser jarg1_, int jarg2);
  public final static native int ArNMEAParser_ParseFlags_get(long jarg1, ArNMEAParser jarg1_);
  public final static native void ArNMEAParser_setIgnoreChecksum(long jarg1, ArNMEAParser jarg1_, boolean jarg2);
  public final static native void ArNMEAParser_addHandler(long jarg1, ArNMEAParser jarg1_, String jarg2, long jarg3);
  public final static native void ArNMEAParser_removeHandler(long jarg1, ArNMEAParser jarg1_, String jarg2);
  public final static native int ArNMEAParser_parse__SWIG_0(long jarg1, ArNMEAParser jarg1_, long jarg2, ArDeviceConnection jarg2_);
  public final static native int ArNMEAParser_parse__SWIG_1(long jarg1, ArNMEAParser jarg1_, String jarg2, int jarg3);
  public final static native long ArNMEAParser_getHandlersRef(long jarg1, ArNMEAParser jarg1_);
  public final static native void delete_ArNMEAParser(long jarg1);
  public final static native void ArNMEAParser_Message_message_set(long jarg1, ArNMEAParser_Message jarg1_, long jarg2);
  public final static native long ArNMEAParser_Message_message_get(long jarg1, ArNMEAParser_Message jarg1_);
  public final static native void ArNMEAParser_Message_timeParseStarted_set(long jarg1, ArNMEAParser_Message jarg1_, long jarg2, ArTime jarg2_);
  public final static native long ArNMEAParser_Message_timeParseStarted_get(long jarg1, ArNMEAParser_Message jarg1_);
  public final static native long new_ArNMEAParser_Message();
  public final static native void delete_ArNMEAParser_Message(long jarg1);
  public final static native long new_ArNetServer__SWIG_0(boolean jarg1, boolean jarg2, String jarg3, long jarg4, ArNetServer jarg4_);
  public final static native long new_ArNetServer__SWIG_1(boolean jarg1, boolean jarg2, String jarg3);
  public final static native long new_ArNetServer__SWIG_2(boolean jarg1, boolean jarg2);
  public final static native long new_ArNetServer__SWIG_3(boolean jarg1);
  public final static native long new_ArNetServer__SWIG_4();
  public final static native void delete_ArNetServer(long jarg1);
  public final static native boolean ArNetServer_open__SWIG_0(long jarg1, ArNetServer jarg1_, long jarg2, ArRobot jarg2_, long jarg3, String jarg4, boolean jarg5, String jarg6);
  public final static native boolean ArNetServer_open__SWIG_1(long jarg1, ArNetServer jarg1_, long jarg2, ArRobot jarg2_, long jarg3, String jarg4, boolean jarg5);
  public final static native boolean ArNetServer_open__SWIG_2(long jarg1, ArNetServer jarg1_, long jarg2, ArRobot jarg2_, long jarg3, String jarg4);
  public final static native void ArNetServer_close(long jarg1, ArNetServer jarg1_);
  public final static native boolean ArNetServer_addCommand(long jarg1, ArNetServer jarg1_, String jarg2, long jarg3, String jarg4);
  public final static native boolean ArNetServer_remCommand(long jarg1, ArNetServer jarg1_, String jarg2);
  public final static native String ArNetServer_getName(long jarg1, ArNetServer jarg1_);
  public final static native void ArNetServer_sendToAllClientsPlain(long jarg1, ArNetServer jarg1_, String jarg2);
  public final static native void ArNetServer_sendToAllClientsNextCyclePlain(long jarg1, ArNetServer jarg1_, String jarg2);
  public final static native boolean ArNetServer_sendToAllClientsNextCyclePlainBool(long jarg1, ArNetServer jarg1_, String jarg2);
  public final static native void ArNetServer_sendToClientPlain(long jarg1, ArNetServer jarg1_, long jarg2, ArSocket jarg2_, String jarg3, String jarg4);
  public final static native boolean ArNetServer_isOpen(long jarg1, ArNetServer jarg1_);
  public final static native void ArNetServer_setLoggingDataSent(long jarg1, ArNetServer jarg1_, boolean jarg2);
  public final static native boolean ArNetServer_getLoggingDataSent(long jarg1, ArNetServer jarg1_);
  public final static native void ArNetServer_setLoggingDataReceived(long jarg1, ArNetServer jarg1_, boolean jarg2);
  public final static native boolean ArNetServer_getLoggingDataReceived(long jarg1, ArNetServer jarg1_);
  public final static native void ArNetServer_setUseWrongEndChars(long jarg1, ArNetServer jarg1_, boolean jarg2);
  public final static native boolean ArNetServer_getUseWrongEndChars(long jarg1, ArNetServer jarg1_);
  public final static native void ArNetServer_runOnce(long jarg1, ArNetServer jarg1_);
  public final static native void ArNetServer_internalGreeting(long jarg1, ArNetServer jarg1_, long jarg2, ArSocket jarg2_);
  public final static native void ArNetServer_internalHelp__SWIG_0(long jarg1, ArNetServer jarg1_, long jarg2, ArSocket jarg2_);
  public final static native void ArNetServer_internalHelp__SWIG_1(long jarg1, ArNetServer jarg1_, long jarg2, int jarg3, long jarg4, ArSocket jarg4_);
  public final static native void ArNetServer_internalEcho(long jarg1, ArNetServer jarg1_, long jarg2, int jarg3, long jarg4, ArSocket jarg4_);
  public final static native void ArNetServer_internalQuit(long jarg1, ArNetServer jarg1_, long jarg2, int jarg3, long jarg4, ArSocket jarg4_);
  public final static native void ArNetServer_internalShutdownServer(long jarg1, ArNetServer jarg1_, long jarg2, int jarg3, long jarg4, ArSocket jarg4_);
  public final static native void ArNetServer_parseCommandOnSocket__SWIG_0(long jarg1, ArNetServer jarg1_, long jarg2, ArArgumentBuilder jarg2_, long jarg3, ArSocket jarg3_, boolean jarg4);
  public final static native void ArNetServer_parseCommandOnSocket__SWIG_1(long jarg1, ArNetServer jarg1_, long jarg2, ArArgumentBuilder jarg2_, long jarg3, ArSocket jarg3_);
  public final static native void ArNetServer_internalAddSocketToList(long jarg1, ArNetServer jarg1_, long jarg2, ArSocket jarg2_);
  public final static native void ArNetServer_internalAddSocketToDeleteList(long jarg1, ArNetServer jarg1_, long jarg2, ArSocket jarg2_);
  public final static native void ArNetServer_squelchNormal(long jarg1, ArNetServer jarg1_);
  public final static native void ArNetServer_setExtraString(long jarg1, ArNetServer jarg1_, String jarg2);
  public final static native String ArNetServer_getExtraString(long jarg1, ArNetServer jarg1_);
  public final static native int ArNetServer_lock(long jarg1, ArNetServer jarg1_);
  public final static native int ArNetServer_tryLock(long jarg1, ArNetServer jarg1_);
  public final static native int ArNetServer_unlock(long jarg1, ArNetServer jarg1_);
  public final static native long new_ArNovatelGPS();
  public final static native void delete_ArNovatelGPS(long jarg1);
  public final static native void ArNovatelSPAN_GPSLatitude_set(long jarg1, ArNovatelSPAN jarg1_, double jarg2);
  public final static native double ArNovatelSPAN_GPSLatitude_get(long jarg1, ArNovatelSPAN jarg1_);
  public final static native void ArNovatelSPAN_GPSLongitude_set(long jarg1, ArNovatelSPAN jarg1_, double jarg2);
  public final static native double ArNovatelSPAN_GPSLongitude_get(long jarg1, ArNovatelSPAN jarg1_);
  public final static native void ArNovatelSPAN_haveGPSPosition_set(long jarg1, ArNovatelSPAN jarg1_, boolean jarg2);
  public final static native boolean ArNovatelSPAN_haveGPSPosition_get(long jarg1, ArNovatelSPAN jarg1_);
  public final static native void ArNovatelSPAN_GPSValidFlag_set(long jarg1, ArNovatelSPAN jarg1_, boolean jarg2);
  public final static native boolean ArNovatelSPAN_GPSValidFlag_get(long jarg1, ArNovatelSPAN jarg1_);
  public final static native void ArNovatelSPAN_timeGotGPSPosition_set(long jarg1, ArNovatelSPAN jarg1_, long jarg2, ArTime jarg2_);
  public final static native long ArNovatelSPAN_timeGotGPSPosition_get(long jarg1, ArNovatelSPAN jarg1_);
  public final static native void ArNovatelSPAN_GPSTimestamp_set(long jarg1, ArNovatelSPAN jarg1_, long jarg2, ArTime jarg2_);
  public final static native long ArNovatelSPAN_GPSTimestamp_get(long jarg1, ArNovatelSPAN jarg1_);
  public final static native long new_ArNovatelSPAN();
  public final static native void delete_ArNovatelSPAN(long jarg1);
  public final static native long new_P2ArmJoint();
  public final static native void delete_P2ArmJoint(long jarg1);
  public final static native void P2ArmJoint_myPos_set(long jarg1, P2ArmJoint jarg1_, short jarg2);
  public final static native short P2ArmJoint_myPos_get(long jarg1, P2ArmJoint jarg1_);
  public final static native void P2ArmJoint_myVel_set(long jarg1, P2ArmJoint jarg1_, short jarg2);
  public final static native short P2ArmJoint_myVel_get(long jarg1, P2ArmJoint jarg1_);
  public final static native void P2ArmJoint_myHome_set(long jarg1, P2ArmJoint jarg1_, short jarg2);
  public final static native short P2ArmJoint_myHome_get(long jarg1, P2ArmJoint jarg1_);
  public final static native void P2ArmJoint_myMin_set(long jarg1, P2ArmJoint jarg1_, short jarg2);
  public final static native short P2ArmJoint_myMin_get(long jarg1, P2ArmJoint jarg1_);
  public final static native void P2ArmJoint_myCenter_set(long jarg1, P2ArmJoint jarg1_, short jarg2);
  public final static native short P2ArmJoint_myCenter_get(long jarg1, P2ArmJoint jarg1_);
  public final static native void P2ArmJoint_myMax_set(long jarg1, P2ArmJoint jarg1_, short jarg2);
  public final static native short P2ArmJoint_myMax_get(long jarg1, P2ArmJoint jarg1_);
  public final static native void P2ArmJoint_myTicksPer90_set(long jarg1, P2ArmJoint jarg1_, short jarg2);
  public final static native short P2ArmJoint_myTicksPer90_get(long jarg1, P2ArmJoint jarg1_);
  public final static native int ArP2Arm_StatusOff_get();
  public final static native int ArP2Arm_StatusSingle_get();
  public final static native int ArP2Arm_StatusContinuous_get();
  public final static native int ArP2Arm_ArmJoint1_get();
  public final static native int ArP2Arm_ArmJoint2_get();
  public final static native int ArP2Arm_ArmJoint3_get();
  public final static native int ArP2Arm_ArmJoint4_get();
  public final static native int ArP2Arm_ArmJoint5_get();
  public final static native int ArP2Arm_ArmJoint6_get();
  public final static native int ArP2Arm_ArmGood_get();
  public final static native int ArP2Arm_ArmInited_get();
  public final static native int ArP2Arm_ArmPower_get();
  public final static native int ArP2Arm_ArmHoming_get();
  public final static native void ArP2Arm_NumJoints_set(int jarg1);
  public final static native int ArP2Arm_NumJoints_get();
  public final static native long new_ArP2Arm();
  public final static native void delete_ArP2Arm(long jarg1);
  public final static native void ArP2Arm_setRobot(long jarg1, ArP2Arm jarg1_, long jarg2, ArRobot jarg2_);
  public final static native int ArP2Arm_init(long jarg1, ArP2Arm jarg1_);
  public final static native int ArP2Arm_uninit(long jarg1, ArP2Arm jarg1_);
  public final static native int ArP2Arm_powerOn__SWIG_0(long jarg1, ArP2Arm jarg1_, boolean jarg2);
  public final static native int ArP2Arm_powerOn__SWIG_1(long jarg1, ArP2Arm jarg1_);
  public final static native int ArP2Arm_powerOff(long jarg1, ArP2Arm jarg1_);
  public final static native int ArP2Arm_requestInfo(long jarg1, ArP2Arm jarg1_);
  public final static native int ArP2Arm_requestStatus(long jarg1, ArP2Arm jarg1_, int jarg2);
  public final static native int ArP2Arm_requestInit(long jarg1, ArP2Arm jarg1_);
  public final static native int ArP2Arm_checkArm__SWIG_0(long jarg1, ArP2Arm jarg1_, boolean jarg2);
  public final static native int ArP2Arm_checkArm__SWIG_1(long jarg1, ArP2Arm jarg1_);
  public final static native int ArP2Arm_home__SWIG_0(long jarg1, ArP2Arm jarg1_, int jarg2);
  public final static native int ArP2Arm_home__SWIG_1(long jarg1, ArP2Arm jarg1_);
  public final static native int ArP2Arm_park(long jarg1, ArP2Arm jarg1_);
  public final static native int ArP2Arm_moveTo__SWIG_0(long jarg1, ArP2Arm jarg1_, int jarg2, float jarg3, short jarg4);
  public final static native int ArP2Arm_moveTo__SWIG_1(long jarg1, ArP2Arm jarg1_, int jarg2, float jarg3);
  public final static native int ArP2Arm_moveToTicks(long jarg1, ArP2Arm jarg1_, int jarg2, short jarg3);
  public final static native int ArP2Arm_moveStep__SWIG_0(long jarg1, ArP2Arm jarg1_, int jarg2, float jarg3, short jarg4);
  public final static native int ArP2Arm_moveStep__SWIG_1(long jarg1, ArP2Arm jarg1_, int jarg2, float jarg3);
  public final static native int ArP2Arm_moveStepTicks(long jarg1, ArP2Arm jarg1_, int jarg2, byte jarg3);
  public final static native int ArP2Arm_moveVel(long jarg1, ArP2Arm jarg1_, int jarg2, int jarg3);
  public final static native int ArP2Arm_stop(long jarg1, ArP2Arm jarg1_);
  public final static native int ArP2Arm_setAutoParkTimer(long jarg1, ArP2Arm jarg1_, int jarg2);
  public final static native int ArP2Arm_setGripperParkTimer(long jarg1, ArP2Arm jarg1_, int jarg2);
  public final static native void ArP2Arm_setStoppedCB(long jarg1, ArP2Arm jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArP2Arm_setPacketCB(long jarg1, ArP2Arm jarg1_, long jarg2);
  public final static native String ArP2Arm_getArmVersion(long jarg1, ArP2Arm jarg1_);
  public final static native float ArP2Arm_getJointPos(long jarg1, ArP2Arm jarg1_, int jarg2);
  public final static native short ArP2Arm_getJointPosTicks(long jarg1, ArP2Arm jarg1_, int jarg2);
  public final static native boolean ArP2Arm_getMoving__SWIG_0(long jarg1, ArP2Arm jarg1_, int jarg2);
  public final static native boolean ArP2Arm_getMoving__SWIG_1(long jarg1, ArP2Arm jarg1_);
  public final static native boolean ArP2Arm_isPowered(long jarg1, ArP2Arm jarg1_);
  public final static native boolean ArP2Arm_isGood(long jarg1, ArP2Arm jarg1_);
  public final static native int ArP2Arm_getStatus(long jarg1, ArP2Arm jarg1_);
  public final static native long ArP2Arm_getLastStatusTime(long jarg1, ArP2Arm jarg1_);
  public final static native long ArP2Arm_getRobot(long jarg1, ArP2Arm jarg1_);
  public final static native long ArP2Arm_getJoint(long jarg1, ArP2Arm jarg1_, int jarg2);
  public final static native boolean ArP2Arm_convertDegToTicks(long jarg1, ArP2Arm jarg1_, int jarg2, float jarg3, long jarg4);
  public final static native boolean ArP2Arm_convertTicksToDeg(long jarg1, ArP2Arm jarg1_, int jarg2, short jarg3, long jarg4);
  public final static native long new_ArPriorityResolver();
  public final static native void delete_ArPriorityResolver(long jarg1);
  public final static native long ArPriorityResolver_resolve__SWIG_0(long jarg1, ArPriorityResolver jarg1_, long jarg2, long jarg3, ArRobot jarg3_, boolean jarg4);
  public final static native long ArPriorityResolver_resolve__SWIG_1(long jarg1, ArPriorityResolver jarg1_, long jarg2, long jarg3, ArRobot jarg3_);
  public final static native long new_ArRangeBuffer(int jarg1);
  public final static native void delete_ArRangeBuffer(long jarg1);
  public final static native long ArRangeBuffer_getSize(long jarg1, ArRangeBuffer jarg1_);
  public final static native void ArRangeBuffer_setSize(long jarg1, ArRangeBuffer jarg1_, long jarg2);
  public final static native long ArRangeBuffer_getPoseTaken(long jarg1, ArRangeBuffer jarg1_);
  public final static native void ArRangeBuffer_setPoseTaken(long jarg1, ArRangeBuffer jarg1_, long jarg2, ArPose jarg2_);
  public final static native long ArRangeBuffer_getEncoderPoseTaken(long jarg1, ArRangeBuffer jarg1_);
  public final static native void ArRangeBuffer_setEncoderPoseTaken(long jarg1, ArRangeBuffer jarg1_, long jarg2, ArPose jarg2_);
  public final static native void ArRangeBuffer_addReading(long jarg1, ArRangeBuffer jarg1_, double jarg2, double jarg3);
  public final static native void ArRangeBuffer_addReadingConditional__SWIG_0(long jarg1, ArRangeBuffer jarg1_, double jarg2, double jarg3, double jarg4, long jarg5);
  public final static native void ArRangeBuffer_addReadingConditional__SWIG_1(long jarg1, ArRangeBuffer jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArRangeBuffer_beginInvalidationSweep(long jarg1, ArRangeBuffer jarg1_);
  public final static native void ArRangeBuffer_invalidateReading(long jarg1, ArRangeBuffer jarg1_, long jarg2);
  public final static native void ArRangeBuffer_endInvalidationSweep(long jarg1, ArRangeBuffer jarg1_);
  public final static native long ArRangeBuffer_getBuffer(long jarg1, ArRangeBuffer jarg1_);
  public final static native double ArRangeBuffer_getClosestPolar__SWIG_0(long jarg1, ArRangeBuffer jarg1_, double jarg2, double jarg3, long jarg4, ArPose jarg4_, long jarg5, long jarg6);
  public final static native double ArRangeBuffer_getClosestPolar__SWIG_1(long jarg1, ArRangeBuffer jarg1_, double jarg2, double jarg3, long jarg4, ArPose jarg4_, long jarg5);
  public final static native double ArRangeBuffer_getClosestBox__SWIG_0(long jarg1, ArRangeBuffer jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6, ArPose jarg6_, long jarg7, long jarg8, ArPose jarg8_, long jarg9, ArPose jarg9_);
  public final static native double ArRangeBuffer_getClosestBox__SWIG_1(long jarg1, ArRangeBuffer jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6, ArPose jarg6_, long jarg7, long jarg8, ArPose jarg8_);
  public final static native double ArRangeBuffer_getClosestBox__SWIG_2(long jarg1, ArRangeBuffer jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6, ArPose jarg6_, long jarg7);
  public final static native void ArRangeBuffer_applyTransform(long jarg1, ArRangeBuffer jarg1_, long jarg2, ArTransform jarg2_);
  public final static native void ArRangeBuffer_clear(long jarg1, ArRangeBuffer jarg1_);
  public final static native void ArRangeBuffer_clearOlderThan(long jarg1, ArRangeBuffer jarg1_, int jarg2);
  public final static native void ArRangeBuffer_clearOlderThanSeconds(long jarg1, ArRangeBuffer jarg1_, int jarg2);
  public final static native void ArRangeBuffer_reset(long jarg1, ArRangeBuffer jarg1_);
  public final static native void ArRangeBuffer_beginRedoBuffer(long jarg1, ArRangeBuffer jarg1_);
  public final static native void ArRangeBuffer_redoReading(long jarg1, ArRangeBuffer jarg1_, double jarg2, double jarg3);
  public final static native void ArRangeBuffer_endRedoBuffer(long jarg1, ArRangeBuffer jarg1_);
  public final static native long ArRangeBuffer_getBufferAsVector(long jarg1, ArRangeBuffer jarg1_);
  public final static native double ArRangeBuffer_getClosestPolarInList(double jarg1, double jarg2, long jarg3, ArPose jarg3_, long jarg4, long jarg5, long jarg6, ArPoseWithTimePtrList jarg6_);
  public final static native double ArRangeBuffer_getClosestBoxInList(double jarg1, double jarg2, double jarg3, double jarg4, long jarg5, ArPose jarg5_, long jarg6, long jarg7, ArPose jarg7_, long jarg8, ArPose jarg8_, long jarg9, ArPoseWithTimePtrList jarg9_);
  public final static native long new_ArRatioInputJoydrive__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArActionRatioInput jarg2_, int jarg3, boolean jarg4, boolean jarg5);
  public final static native long new_ArRatioInputJoydrive__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArActionRatioInput jarg2_, int jarg3, boolean jarg4);
  public final static native long new_ArRatioInputJoydrive__SWIG_2(long jarg1, ArRobot jarg1_, long jarg2, ArActionRatioInput jarg2_, int jarg3);
  public final static native long new_ArRatioInputJoydrive__SWIG_3(long jarg1, ArRobot jarg1_, long jarg2, ArActionRatioInput jarg2_);
  public final static native void delete_ArRatioInputJoydrive(long jarg1);
  public final static native boolean ArRatioInputJoydrive_joystickInited(long jarg1, ArRatioInputJoydrive jarg1_);
  public final static native void ArRatioInputJoydrive_setStopIfNoButtonPressed(long jarg1, ArRatioInputJoydrive jarg1_, boolean jarg2);
  public final static native boolean ArRatioInputJoydrive_getStopIfNoButtonPressed(long jarg1, ArRatioInputJoydrive jarg1_);
  public final static native void ArRatioInputJoydrive_setUseOSCal(long jarg1, ArRatioInputJoydrive jarg1_, boolean jarg2);
  public final static native boolean ArRatioInputJoydrive_getUseOSCal(long jarg1, ArRatioInputJoydrive jarg1_);
  public final static native long ArRatioInputJoydrive_getJoyHandler(long jarg1, ArRatioInputJoydrive jarg1_);
  public final static native long new_ArRatioInputKeydrive__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArActionRatioInput jarg2_, int jarg3, double jarg4);
  public final static native long new_ArRatioInputKeydrive__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArActionRatioInput jarg2_, int jarg3);
  public final static native long new_ArRatioInputKeydrive__SWIG_2(long jarg1, ArRobot jarg1_, long jarg2, ArActionRatioInput jarg2_);
  public final static native void delete_ArRatioInputKeydrive(long jarg1);
  public final static native void ArRatioInputKeydrive_takeKeys(long jarg1, ArRatioInputKeydrive jarg1_);
  public final static native void ArRatioInputKeydrive_giveUpKeys(long jarg1, ArRatioInputKeydrive jarg1_);
  public final static native void ArRatioInputKeydrive_up(long jarg1, ArRatioInputKeydrive jarg1_);
  public final static native void ArRatioInputKeydrive_down(long jarg1, ArRatioInputKeydrive jarg1_);
  public final static native void ArRatioInputKeydrive_z(long jarg1, ArRatioInputKeydrive jarg1_);
  public final static native void ArRatioInputKeydrive_x(long jarg1, ArRatioInputKeydrive jarg1_);
  public final static native void ArRatioInputKeydrive_left(long jarg1, ArRatioInputKeydrive jarg1_);
  public final static native void ArRatioInputKeydrive_right(long jarg1, ArRatioInputKeydrive jarg1_);
  public final static native void ArRatioInputKeydrive_space(long jarg1, ArRatioInputKeydrive jarg1_);
  public final static native long ArRatioInputKeydrive_getFireCB(long jarg1, ArRatioInputKeydrive jarg1_);
  public final static native long new_ArRatioInputRobotJoydrive__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArActionRatioInput jarg2_, int jarg3, boolean jarg4);
  public final static native long new_ArRatioInputRobotJoydrive__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArActionRatioInput jarg2_, int jarg3);
  public final static native long new_ArRatioInputRobotJoydrive__SWIG_2(long jarg1, ArRobot jarg1_, long jarg2, ArActionRatioInput jarg2_);
  public final static native void delete_ArRatioInputRobotJoydrive(long jarg1);
  public final static native void delete_ArRecurrentTask(long jarg1);
  public final static native void ArRecurrentTask_task(long jarg1, ArRecurrentTask jarg1_);
  public final static native void ArRecurrentTask_go(long jarg1, ArRecurrentTask jarg1_);
  public final static native int ArRecurrentTask_done(long jarg1, ArRecurrentTask jarg1_);
  public final static native void ArRecurrentTask_reset(long jarg1, ArRecurrentTask jarg1_);
  public final static native void ArRecurrentTask_kill(long jarg1, ArRecurrentTask jarg1_);
  public final static native long ArRecurrentTask_runThread(long jarg1, ArRecurrentTask jarg1_, long jarg2);
  public final static native int ArRobot_CHARGING_UNKNOWN_get();
  public final static native int ArRobot_CHARGING_NOT_get();
  public final static native int ArRobot_CHARGING_BULK_get();
  public final static native int ArRobot_CHARGING_OVERCHARGE_get();
  public final static native int ArRobot_CHARGING_FLOAT_get();
  public final static native int ArRobot_CHARGING_BALANCE_get();
  public final static native long new_ArRobot__SWIG_0(String jarg1, boolean jarg2, boolean jarg3, boolean jarg4, boolean jarg5);
  public final static native long new_ArRobot__SWIG_1(String jarg1, boolean jarg2, boolean jarg3, boolean jarg4);
  public final static native long new_ArRobot__SWIG_2(String jarg1, boolean jarg2, boolean jarg3);
  public final static native long new_ArRobot__SWIG_3(String jarg1, boolean jarg2);
  public final static native long new_ArRobot__SWIG_4(String jarg1);
  public final static native long new_ArRobot__SWIG_5();
  public final static native void delete_ArRobot(long jarg1);
  public final static native void ArRobot_run__SWIG_0(long jarg1, ArRobot jarg1_, boolean jarg2, boolean jarg3);
  public final static native void ArRobot_run__SWIG_1(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native void ArRobot_runAsync__SWIG_0(long jarg1, ArRobot jarg1_, boolean jarg2, boolean jarg3);
  public final static native void ArRobot_runAsync__SWIG_1(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native boolean ArRobot_isRunning(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_stopRunning__SWIG_0(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native void ArRobot_stopRunning__SWIG_1(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setDeviceConnection(long jarg1, ArRobot jarg1_, long jarg2, ArDeviceConnection jarg2_);
  public final static native long ArRobot_getDeviceConnection(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isConnected(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_blockingConnect(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_asyncConnect(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_disconnect(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_clearDirectMotion(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isDirectMotion(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_stopStateReflection(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_enableMotors(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_disableMotors(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_enableSonar(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_enableAutonomousDrivingSonar(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_disableSonar(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_stop(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setVel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setVel2(long jarg1, ArRobot jarg1_, double jarg2, double jarg3);
  public final static native void ArRobot_move(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native boolean ArRobot_isMoveDone__SWIG_0(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native boolean ArRobot_isMoveDone__SWIG_1(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setMoveDoneDist(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native double ArRobot_getMoveDoneDist(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setHeading(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setRotVel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setDeltaHeading(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native boolean ArRobot_isHeadingDone__SWIG_0(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native boolean ArRobot_isHeadingDone__SWIG_1(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setHeadingDoneDiff(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native double ArRobot_getHeadingDoneDiff(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setLatVel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native boolean ArRobot_isStopped__SWIG_0(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native boolean ArRobot_isStopped__SWIG_1(long jarg1, ArRobot jarg1_, double jarg2, double jarg3);
  public final static native boolean ArRobot_isStopped__SWIG_2(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native boolean ArRobot_isStopped__SWIG_3(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setStoppedVels(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArRobot_setDirectMotionPrecedenceTime(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long ArRobot_getDirectMotionPrecedenceTime(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_com(long jarg1, ArRobot jarg1_, short jarg2);
  public final static native boolean ArRobot_comInt(long jarg1, ArRobot jarg1_, short jarg2, short jarg3);
  public final static native boolean ArRobot_com2Bytes(long jarg1, ArRobot jarg1_, short jarg2, char jarg3, char jarg4);
  public final static native boolean ArRobot_comStr(long jarg1, ArRobot jarg1_, short jarg2, String jarg3);
  public final static native boolean ArRobot_comStrN(long jarg1, ArRobot jarg1_, short jarg2, String jarg3, int jarg4);
  public final static native boolean ArRobot_comDataN(long jarg1, ArRobot jarg1_, short jarg2, String jarg3, int jarg4);
  public final static native String ArRobot_getRobotName(long jarg1, ArRobot jarg1_);
  public final static native String ArRobot_getRobotType(long jarg1, ArRobot jarg1_);
  public final static native String ArRobot_getRobotSubType(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getAbsoluteMaxTransVel(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_setAbsoluteMaxTransVel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native double ArRobot_getAbsoluteMaxTransNegVel(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_setAbsoluteMaxTransNegVel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native double ArRobot_getAbsoluteMaxTransAccel(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_setAbsoluteMaxTransAccel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native double ArRobot_getAbsoluteMaxTransDecel(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_setAbsoluteMaxTransDecel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native double ArRobot_getAbsoluteMaxRotVel(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_setAbsoluteMaxRotVel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native double ArRobot_getAbsoluteMaxRotAccel(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_setAbsoluteMaxRotAccel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native double ArRobot_getAbsoluteMaxRotDecel(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_setAbsoluteMaxRotDecel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native double ArRobot_getAbsoluteMaxLatVel(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_setAbsoluteMaxLatVel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native double ArRobot_getAbsoluteMaxLatAccel(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_setAbsoluteMaxLatAccel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native double ArRobot_getAbsoluteMaxLatDecel(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_setAbsoluteMaxLatDecel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native long ArRobot_getPose(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getX(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getY(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getTh(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_findDistanceTo(long jarg1, ArRobot jarg1_, long jarg2, ArPose jarg2_);
  public final static native double ArRobot_findAngleTo(long jarg1, ArRobot jarg1_, long jarg2, ArPose jarg2_);
  public final static native double ArRobot_findDeltaHeadingTo(long jarg1, ArRobot jarg1_, long jarg2, ArPose jarg2_);
  public final static native double ArRobot_getVel(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRotVel(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getLatVel(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_hasLatVel(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRobotRadius(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRobotWidth(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRobotLength(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRobotLengthFront(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRobotLengthRear(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRobotDiagonal(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getBatteryVoltage(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getBatteryVoltageNow(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRealBatteryVoltage(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRealBatteryVoltageNow(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_haveStateOfCharge(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_hasStateOfCHarge(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getStateOfCharge(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getStateOfChargeSetTime(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getStateOfChargeLow(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getStateOfChargeShutdown(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getLeftVel(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRightVel(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getStallValue(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isLeftMotorStalled(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isRightMotorStalled(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isFrontBumperTriggered(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isRearBumperTriggered(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getControl(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setKeepControlRaw(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native boolean ArRobot_getKeepControlRaw(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getFlags(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getFaultFlags(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_hasFaultFlags(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getFlags3(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_hasFlags3(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_areMotorsEnabled(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_areSonarsEnabled(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_areAutonomousDrivingSonarsEnabled(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_areSonarsEnabledLegacy(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isEStopPressed(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_getEstop(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getCompass(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getAnalogPortSelected(long jarg1, ArRobot jarg1_);
  public final static native short ArRobot_getAnalog(long jarg1, ArRobot jarg1_);
  public final static native short ArRobot_getDigIn(long jarg1, ArRobot jarg1_);
  public final static native short ArRobot_getDigOut(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getChargeState(long jarg1, ArRobot jarg1_);
  public final static native String ArRobot_getChargeStateName(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isChargerPowerGood(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getIOAnalogSize(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getIODigInSize(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getIODigOutSize(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getIOAnalog(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native double ArRobot_getIOAnalogVoltage(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native short ArRobot_getIODigIn(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native short ArRobot_getIODigOut(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native boolean ArRobot_hasTableSensingIR(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isLeftTableSensingIRTriggered(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isRightTableSensingIRTriggered(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isLeftBreakBeamTriggered(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isRightBreakBeamTriggered(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getIOPacketTime(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_hasFrontBumpers(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getNumFrontBumpers(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_hasRearBumpers(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getNumRearBumpers(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getEncoderPose(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getEncoderX(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getEncoderY(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getEncoderTh(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_isTryingToMove(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_forceTryingToMove(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getMotorPacCount(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getSonarPacCount(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getSonarRange(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native boolean ArRobot_isSonarNew(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native int ArRobot_getNumSonar(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getSonarReading(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native int ArRobot_getClosestSonarRange(long jarg1, ArRobot jarg1_, double jarg2, double jarg3);
  public final static native int ArRobot_getClosestSonarNumber(long jarg1, ArRobot jarg1_, double jarg2, double jarg3);
  public final static native String ArRobot_getName(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setName(long jarg1, ArRobot jarg1_, String jarg2);
  public final static native void ArRobot_moveTo__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArPose jarg2_, boolean jarg3);
  public final static native void ArRobot_moveTo__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArPose jarg2_);
  public final static native void ArRobot_moveTo__SWIG_2(long jarg1, ArRobot jarg1_, long jarg2, ArPose jarg2_, long jarg3, ArPose jarg3_, boolean jarg4);
  public final static native void ArRobot_moveTo__SWIG_3(long jarg1, ArRobot jarg1_, long jarg2, ArPose jarg2_, long jarg3, ArPose jarg3_);
  public final static native void ArRobot_setStateOfCharge(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setStateOfChargeLow(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setStateOfChargeShutdown(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setChargeState(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native void ArRobot_setIsChargerPowerGood(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native void ArRobot_setIgnoreMicroControllerBatteryInfo(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native void ArRobot_setBatteryInfo(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, boolean jarg4, double jarg5);
  public final static native long ArRobot_getBatteryVoltageAverageOfNum(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setBatteryVoltageAverageOfNum(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_getRealBatteryVoltageAverageOfNum(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setRealBatteryVoltageAverageOfNum(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native boolean ArRobot_hasTemperature(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getTemperature(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_requestEncoderPackets(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_requestIOPackets(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_stopEncoderPackets(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_stopIOPackets(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_haveRequestedEncoderPackets(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_haveRequestedIOPackets(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getLeftEncoder(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getRightEncoder(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setEncoderTransform__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArPose jarg2_, long jarg3, ArPose jarg3_);
  public final static native void ArRobot_setEncoderTransform__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArPose jarg2_);
  public final static native void ArRobot_setEncoderTransform__SWIG_2(long jarg1, ArRobot jarg1_, long jarg2, ArTransform jarg2_);
  public final static native void ArRobot_setEncoderPose(long jarg1, ArRobot jarg1_, long jarg2, ArPose jarg2_);
  public final static native void ArRobot_setRawEncoderPose(long jarg1, ArRobot jarg1_, long jarg2, ArPose jarg2_);
  public final static native void ArRobot_addSetEncoderTransformCB__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArRobot_addSetEncoderTransformCB__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_remSetEncoderTransformCB(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_setMTXTimeUSecCB(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_getEncoderTransform(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getToGlobalTransform(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getToLocalTransform(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_applyTransform__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArTransform jarg2_, boolean jarg3);
  public final static native void ArRobot_applyTransform__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArTransform jarg2_);
  public final static native void ArRobot_setDeadReconPose(long jarg1, ArRobot jarg1_, long jarg2, ArPose jarg2_);
  public final static native double ArRobot_getTripOdometerDistance(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getTripOdometerDegrees(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getTripOdometerTime(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_resetTripOdometer(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getOdometerDistance(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getOdometerDistanceMeters(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getOdometerDegrees(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getOdometerTime(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getOdometerTimeMinutes(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_addRangeDevice(long jarg1, ArRobot jarg1_, long jarg2, ArRangeDevice jarg2_);
  public final static native void ArRobot_remRangeDevice__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2);
  public final static native void ArRobot_remRangeDevice__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArRangeDevice jarg2_);
  public final static native long ArRobot_findRangeDevice__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2, boolean jarg3);
  public final static native long ArRobot_findRangeDevice__SWIG_1(long jarg1, ArRobot jarg1_, String jarg2);
  public final static native long ArRobot_getRangeDeviceList(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_hasRangeDevice(long jarg1, ArRobot jarg1_, long jarg2, ArRangeDevice jarg2_);
  public final static native double ArRobot_checkRangeDevicesCurrentPolar__SWIG_0(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, long jarg4, long jarg5, boolean jarg6);
  public final static native double ArRobot_checkRangeDevicesCurrentPolar__SWIG_1(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, long jarg4, long jarg5);
  public final static native double ArRobot_checkRangeDevicesCurrentPolar__SWIG_2(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, long jarg4);
  public final static native double ArRobot_checkRangeDevicesCurrentPolar__SWIG_3(long jarg1, ArRobot jarg1_, double jarg2, double jarg3);
  public final static native double ArRobot_checkRangeDevicesCumulativePolar__SWIG_0(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, long jarg4, long jarg5, boolean jarg6);
  public final static native double ArRobot_checkRangeDevicesCumulativePolar__SWIG_1(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, long jarg4, long jarg5);
  public final static native double ArRobot_checkRangeDevicesCumulativePolar__SWIG_2(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, long jarg4);
  public final static native double ArRobot_checkRangeDevicesCumulativePolar__SWIG_3(long jarg1, ArRobot jarg1_, double jarg2, double jarg3);
  public final static native double ArRobot_checkRangeDevicesCurrentBox__SWIG_0(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6, ArPose jarg6_, long jarg7, boolean jarg8);
  public final static native double ArRobot_checkRangeDevicesCurrentBox__SWIG_1(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6, ArPose jarg6_, long jarg7);
  public final static native double ArRobot_checkRangeDevicesCurrentBox__SWIG_2(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6, ArPose jarg6_);
  public final static native double ArRobot_checkRangeDevicesCurrentBox__SWIG_3(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native double ArRobot_checkRangeDevicesCumulativeBox__SWIG_0(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6, ArPose jarg6_, long jarg7, boolean jarg8);
  public final static native double ArRobot_checkRangeDevicesCumulativeBox__SWIG_1(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6, ArPose jarg6_, long jarg7);
  public final static native double ArRobot_checkRangeDevicesCumulativeBox__SWIG_2(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, long jarg6, ArPose jarg6_);
  public final static native double ArRobot_checkRangeDevicesCumulativeBox__SWIG_3(long jarg1, ArRobot jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native boolean ArRobot_addLaser__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_, int jarg3, boolean jarg4);
  public final static native boolean ArRobot_addLaser__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_, int jarg3);
  public final static native boolean ArRobot_remLaser__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_, boolean jarg3);
  public final static native boolean ArRobot_remLaser__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_);
  public final static native boolean ArRobot_remLaser__SWIG_2(long jarg1, ArRobot jarg1_, int jarg2, boolean jarg3);
  public final static native boolean ArRobot_remLaser__SWIG_3(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long ArRobot_findLaser__SWIG_0(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long ArRobot_getLaserMap__SWIG_0(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_hasLaser(long jarg1, ArRobot jarg1_, long jarg2, ArLaser jarg2_);
  public final static native boolean ArRobot_addBattery(long jarg1, ArRobot jarg1_, long jarg2, int jarg3);
  public final static native boolean ArRobot_remBattery__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native boolean ArRobot_remBattery__SWIG_1(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long ArRobot_findBattery__SWIG_0(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long ArRobot_getBatteryMap__SWIG_0(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_hasBattery(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native boolean ArRobot_addLCD(long jarg1, ArRobot jarg1_, long jarg2, int jarg3);
  public final static native boolean ArRobot_remLCD__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native boolean ArRobot_remLCD__SWIG_1(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long ArRobot_findLCD__SWIG_0(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long ArRobot_findLCD__SWIG_1(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getLCDMap__SWIG_0(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_hasLCD(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native boolean ArRobot_addSonar(long jarg1, ArRobot jarg1_, long jarg2, int jarg3);
  public final static native boolean ArRobot_remSonar__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native boolean ArRobot_remSonar__SWIG_1(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long ArRobot_findSonar__SWIG_0(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native long ArRobot_getSonarMap__SWIG_0(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_hasSonar(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native void ArRobot_setPTZ(long jarg1, ArRobot jarg1_, long jarg2, ArPTZ jarg2_);
  public final static native long ArRobot_getPTZ(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setStateReflectionRefreshTime(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native int ArRobot_getStateReflectionRefreshTime(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_addPacketHandler__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArRetFunctor1_Bool_ArRobotPacketP jarg2_, int jarg3);
  public final static native void ArRobot_addPacketHandler__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArRetFunctor1_Bool_ArRobotPacketP jarg2_);
  public final static native void ArRobot_remPacketHandler(long jarg1, ArRobot jarg1_, long jarg2, ArRetFunctor1_Bool_ArRobotPacketP jarg2_);
  public final static native void ArRobot_addConnectCB__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArRobot_addConnectCB__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_remConnectCB(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_addFailedConnectCB__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArRobot_addFailedConnectCB__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_remFailedConnectCB(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_addDisconnectNormallyCB__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArRobot_addDisconnectNormallyCB__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_remDisconnectNormallyCB(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_addDisconnectOnErrorCB__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArRobot_addDisconnectOnErrorCB__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_remDisconnectOnErrorCB(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_addRunExitCB__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArRobot_addRunExitCB__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_remRunExitCB(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native int ArRobot_waitForConnect__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native int ArRobot_waitForConnect__SWIG_1(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_waitForConnectOrConnFail__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native int ArRobot_waitForConnectOrConnFail__SWIG_1(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_waitForRunExit__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native int ArRobot_waitForRunExit__SWIG_1(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_wakeAllWaitingThreads(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_wakeAllConnWaitingThreads(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_wakeAllConnOrFailWaitingThreads(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_wakeAllRunExitWaitingThreads(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_addUserTask__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2, int jarg3, long jarg4, ArFunctor jarg4_, long jarg5);
  public final static native boolean ArRobot_addUserTask__SWIG_1(long jarg1, ArRobot jarg1_, String jarg2, int jarg3, long jarg4, ArFunctor jarg4_);
  public final static native void ArRobot_remUserTask__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2);
  public final static native void ArRobot_remUserTask__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native long ArRobot_findUserTask__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2);
  public final static native long ArRobot_findUserTask__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_logUserTasks(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_logAllTasks(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_addSensorInterpTask__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2, int jarg3, long jarg4, ArFunctor jarg4_, long jarg5);
  public final static native boolean ArRobot_addSensorInterpTask__SWIG_1(long jarg1, ArRobot jarg1_, String jarg2, int jarg3, long jarg4, ArFunctor jarg4_);
  public final static native void ArRobot_remSensorInterpTask__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2);
  public final static native void ArRobot_remSensorInterpTask__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native long ArRobot_findTask__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2);
  public final static native long ArRobot_findTask__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native boolean ArRobot_addAction(long jarg1, ArRobot jarg1_, long jarg2, ArAction jarg2_, int jarg3);
  public final static native boolean ArRobot_remAction__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArAction jarg2_);
  public final static native boolean ArRobot_remAction__SWIG_1(long jarg1, ArRobot jarg1_, String jarg2);
  public final static native long ArRobot_findAction(long jarg1, ArRobot jarg1_, String jarg2);
  public final static native long ArRobot_getActionMap(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_deactivateActions(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_logActions__SWIG_0(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native void ArRobot_logActions__SWIG_1(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getResolver(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setResolver(long jarg1, ArRobot jarg1_, long jarg2, ArResolver jarg2_);
  public final static native void ArRobot_setEncoderCorrectionCallback(long jarg1, ArRobot jarg1_, long jarg2, ArRetFunctor1_Double_ArPoseWithTime jarg2_);
  public final static native long ArRobot_getEncoderCorrectionCallback(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getConnectionOpenedTime(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setCycleTime(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_getCycleTime(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setCycleWarningTime(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_getCycleWarningTime__SWIG_0(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setConnectionCycleMultiplier(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_getConnectionCycleMultiplier(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setCycleChained(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native boolean ArRobot_isCycleChained(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setConnectionTimeoutTime(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native int ArRobot_getConnectionTimeoutTime(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getLastPacketTime(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getLastOdometryTime(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setPoseInterpNumReadings(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_getPoseInterpNumReadings(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getPoseInterpPosition__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArTime jarg2_, long jarg3, ArPose jarg3_, long jarg4, ArPoseWithTime jarg4_);
  public final static native int ArRobot_getPoseInterpPosition__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArTime jarg2_, long jarg3, ArPose jarg3_);
  public final static native long ArRobot_getPoseInterpolation(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getPoseInterpPositionCallback(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setEncoderPoseInterpNumReadings(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_getEncoderPoseInterpNumReadings(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getEncoderPoseInterpPosition__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArTime jarg2_, long jarg3, ArPose jarg3_, long jarg4, ArPoseWithTime jarg4_);
  public final static native int ArRobot_getEncoderPoseInterpPosition__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArTime jarg2_, long jarg3, ArPose jarg3_);
  public final static native long ArRobot_getEncoderPoseInterpolation(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getEncoderPoseInterpPositionCallback(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_applyEncoderOffset(long jarg1, ArRobot jarg1_, long jarg2, ArPoseWithTime jarg2_, long jarg3, ArTime jarg3_, long jarg4, ArPose jarg4_);
  public final static native long ArRobot_getCounter(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getRobotParams(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setRequireConfigPacket(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native long ArRobot_getOrigRobotConfig(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getBatteryPacketReader(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setTransVelMax(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setTransNegVelMax(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setTransAccel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setTransDecel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setRotVelMax(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setRotAccel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setRotDecel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setLatVelMax(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setLatAccel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setLatDecel(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native boolean ArRobot_hasSettableVelMaxes(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getTransVelMax(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getTransNegVelMax(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRotVelMax(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_hasSettableAccsDecs(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getTransAccel(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getTransDecel(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRotAccel(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getRotDecel(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getLatVelMax(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getLatAccel(long jarg1, ArRobot jarg1_);
  public final static native double ArRobot_getLatDecel(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_loadParamFile(long jarg1, ArRobot jarg1_, String jarg2);
  public final static native void ArRobot_setRobotParams(long jarg1, ArRobot jarg1_, long jarg2, ArRobotParams jarg2_);
  public final static native void ArRobot_attachKeyHandler__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArKeyHandler jarg2_, boolean jarg3, boolean jarg4);
  public final static native void ArRobot_attachKeyHandler__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArKeyHandler jarg2_, boolean jarg3);
  public final static native void ArRobot_attachKeyHandler__SWIG_2(long jarg1, ArRobot jarg1_, long jarg2, ArKeyHandler jarg2_);
  public final static native long ArRobot_getKeyHandler(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_lock(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_tryLock(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_unlock(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setMutexLogging(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native void ArRobot_setMutexLockWarningTime(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native void ArRobot_setMutexUnlockWarningTime(long jarg1, ArRobot jarg1_, double jarg2);
  public final static native boolean ArRobot_isStabilizing(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setStabilizingTime(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native int ArRobot_getStabilizingTime(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_addStabilizingCB__SWIG_0(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArRobot_addStabilizingCB__SWIG_1(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArRobot_remStabilizingCB(long jarg1, ArRobot jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native long ArRobot_getSyncTaskRoot(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_loopOnce(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setOdometryDelay(long jarg1, ArRobot jarg1_, int jarg2);
  public final static native int ArRobot_getOdometryDelay(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_getLogMovementSent(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setLogMovementSent(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native boolean ArRobot_getLogMovementReceived(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setLogMovementReceived(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native boolean ArRobot_getLogVelocitiesReceived(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setLogVelocitiesReceived(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native boolean ArRobot_getPacketsReceivedTracking(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setPacketsReceivedTracking(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native boolean ArRobot_getLogSIPContents(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setLogSIPContents(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native boolean ArRobot_getPacketsSentTracking(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setPacketsSentTracking(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native boolean ArRobot_getLogActions(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setLogActions(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native void ArRobot_setDoNotSwitchBaud(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native boolean ArRobot_getDoNotSwitchBaud(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_incCounter(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_packetHandler(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_actionHandler(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_stateReflector(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_robotLocker(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_robotUnlocker(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_packetHandlerNonThreaded(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_packetHandlerThreadedProcessor(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_packetHandlerThreadedReader(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_keyHandlerExit(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_processMotorPacket(long jarg1, ArRobot jarg1_, long jarg2, ArRobotPacket jarg2_);
  public final static native void ArRobot_processNewSonar(long jarg1, ArRobot jarg1_, char jarg2, int jarg3, long jarg4, ArTime jarg4_);
  public final static native boolean ArRobot_processEncoderPacket(long jarg1, ArRobot jarg1_, long jarg2, ArRobotPacket jarg2_);
  public final static native boolean ArRobot_processIOPacket(long jarg1, ArRobot jarg1_, long jarg2, ArRobotPacket jarg2_);
  public final static native void ArRobot_init(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setUpSyncList(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setUpPacketHandlers(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_myMotorPacketCB_set(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_myMotorPacketCB_get(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_myEncoderPacketCB_set(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_myEncoderPacketCB_get(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_myIOPacketCB_set(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_myIOPacketCB_get(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_myPacketHandlerCB_set(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_myPacketHandlerCB_get(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_myActionHandlerCB_set(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_myActionHandlerCB_get(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_myStateReflectorCB_set(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_myStateReflectorCB_get(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_myRobotLockerCB_set(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_myRobotLockerCB_get(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_myRobotUnlockerCB_set(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_myRobotUnlockerCB_get(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_myKeyHandlerExitCB_set(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_myKeyHandlerExitCB_get(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_myKeyHandlerCB_set(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_myKeyHandlerCB_get(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_asyncConnectHandler(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native void ArRobot_dropConnection__SWIG_0(long jarg1, ArRobot jarg1_, String jarg2, String jarg3);
  public final static native void ArRobot_dropConnection__SWIG_1(long jarg1, ArRobot jarg1_, String jarg2);
  public final static native void ArRobot_dropConnection__SWIG_2(long jarg1, ArRobot jarg1_);
  public final static native String ArRobot_getDropConnectionReason(long jarg1, ArRobot jarg1_);
  public final static native String ArRobot_getDropConnectionUserReason(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_failedConnect(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_madeConnection__SWIG_0(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native boolean ArRobot_madeConnection__SWIG_1(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_startStabilization(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_finishedConnection(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_cancelConnection(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_handlePacket(long jarg1, ArRobot jarg1_, long jarg2, ArRobotPacket jarg2_);
  public final static native long ArRobot_getRunExitListCopy(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_processParamFile(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getRawEncoderPose(long jarg1, ArRobot jarg1_);
  public final static native boolean ArRobot_getNoTimeWarningThisCycle(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setNoTimeWarningThisCycle(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native void ArRobot_myGetCycleWarningTimeCB_set(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_myGetCycleWarningTimeCB_get(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_myGetNoTimeWarningThisCycleCB_set(long jarg1, ArRobot jarg1_, long jarg2);
  public final static native long ArRobot_myGetNoTimeWarningThisCycleCB_get(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_ariaExitCallback(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_setConnectWithNoParams(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native long ArRobot_getOSThread(long jarg1, ArRobot jarg1_);
  public final static native int ArRobot_getAsyncConnectState(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getPacketSender(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getPacketReceiver(long jarg1, ArRobot jarg1_);
  public final static native long ArRobot_getRobotParamsInternal(long jarg1, ArRobot jarg1_);
  public final static native void ArRobot_internalSetFakeFirstEncoderPose(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native void ArRobot_internalIgnoreNextPacket(long jarg1, ArRobot jarg1_);
  public final static native long new_ArRobotConfig(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArRobotConfig(long jarg1);
  public final static native void ArRobotConfig_addAnalogGyro(long jarg1, ArRobotConfig jarg1_, long jarg2, ArAnalogGyro jarg2_);
  public final static native boolean ArRobotConfig_processFile(long jarg1, ArRobotConfig jarg1_);
  public final static native void ArRobotConfig_connectCallback(long jarg1, ArRobotConfig jarg1_);
  public final static native long new_ArRobotConfigPacketReader__SWIG_0(long jarg1, ArRobot jarg1_, boolean jarg2, long jarg3, ArFunctor jarg3_);
  public final static native long new_ArRobotConfigPacketReader__SWIG_1(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native long new_ArRobotConfigPacketReader__SWIG_2(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArRobotConfigPacketReader(long jarg1);
  public final static native boolean ArRobotConfigPacketReader_requestPacket(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native boolean ArRobotConfigPacketReader_hasPacketBeenRequested(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native boolean ArRobotConfigPacketReader_hasPacketArrived(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native long ArRobotConfigPacketReader_getRobotPacket(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native void ArRobotConfigPacketReader_log(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native void ArRobotConfigPacketReader_logMovement(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native String ArRobotConfigPacketReader_buildString(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native String ArRobotConfigPacketReader_buildStringMovement(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native String ArRobotConfigPacketReader_getType(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native String ArRobotConfigPacketReader_getSubType(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native String ArRobotConfigPacketReader_getSerialNumber(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getRotVelTop(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getTransVelTop(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getRotAccelTop(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getTransAccelTop(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getPwmMax(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native String ArRobotConfigPacketReader_getName(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getSipCycleTime(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getHostBaud(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getAux1Baud(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native boolean ArRobotConfigPacketReader_getHasGripper(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native boolean ArRobotConfigPacketReader_getFrontSonar(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native boolean ArRobotConfigPacketReader_getRearSonar(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getLowBattery(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getRevCount(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getWatchdog(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native boolean ArRobotConfigPacketReader_getNormalMPacs(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getStallVal(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getStallCount(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getJoyVel(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getJoyRotVel(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getRotVelMax(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getTransVelMax(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getRotAccel(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getRotDecel(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getRotKP(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getRotKV(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getRotKI(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getTransAccel(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getTransDecel(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getTransKP(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getTransKV(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getTransKI(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getFrontBumps(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getRearBumps(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getHasCharger(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getSonarCycle(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native boolean ArRobotConfigPacketReader_getResetBaud(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native boolean ArRobotConfigPacketReader_getHasGyro(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getGyroType(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getDriftFactor(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getAux2Baud(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getAux3Baud(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getTicksMM(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getShutdownVoltage(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native String ArRobotConfigPacketReader_getFirmwareVersion(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getGyroCW(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getGyroCCW(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getKinematicsDelay(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getLatVelTop(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getLatAccelTop(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getLatVelMax(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getLatAccel(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getLatDecel(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getPowerbotChargeThreshold(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native short ArRobotConfigPacketReader_getPDBPort(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getGyroRateLimit(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native char ArRobotConfigPacketReader_getHighTemperatureShutdown(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getPowerBits(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native short ArRobotConfigPacketReader_getBatteryType(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getStateOfChargeLow(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getStateOfChargeShutdown(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native String ArRobotConfigPacketReader_getFirmwareBootloaderVersion(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native long ArRobotConfigPacketReader_getConfigFlags(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native int ArRobotConfigPacketReader_getGyroFWVersion(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native boolean ArRobotConfigPacketReader_packetHandler(long jarg1, ArRobotConfigPacketReader jarg1_, long jarg2, ArRobotPacket jarg2_);
  public final static native void ArRobotConfigPacketReader_connected(long jarg1, ArRobotConfigPacketReader jarg1_);
  public final static native long new_ArRobotConnector__SWIG_0(long jarg1, ArArgumentParser jarg1_, long jarg2, ArRobot jarg2_, boolean jarg3, boolean jarg4);
  public final static native long new_ArRobotConnector__SWIG_1(long jarg1, ArArgumentParser jarg1_, long jarg2, ArRobot jarg2_, boolean jarg3);
  public final static native long new_ArRobotConnector__SWIG_2(long jarg1, ArArgumentParser jarg1_, long jarg2, ArRobot jarg2_);
  public final static native void delete_ArRobotConnector(long jarg1);
  public final static native boolean ArRobotConnector_setupRobot__SWIG_0(long jarg1, ArRobotConnector jarg1_);
  public final static native boolean ArRobotConnector_setupRobot__SWIG_1(long jarg1, ArRobotConnector jarg1_, long jarg2, ArRobot jarg2_);
  public final static native boolean ArRobotConnector_connectRobot__SWIG_0(long jarg1, ArRobotConnector jarg1_);
  public final static native boolean ArRobotConnector_connectRobot__SWIG_1(long jarg1, ArRobotConnector jarg1_, long jarg2, ArRobot jarg2_);
  public final static native boolean ArRobotConnector_parseArgs__SWIG_0(long jarg1, ArRobotConnector jarg1_);
  public final static native boolean ArRobotConnector_parseArgs__SWIG_1(long jarg1, ArRobotConnector jarg1_, long jarg2, ArArgumentParser jarg2_);
  public final static native void ArRobotConnector_logOptions(long jarg1, ArRobotConnector jarg1_);
  public final static native String ArRobotConnector_getRemoteHost(long jarg1, ArRobotConnector jarg1_);
  public final static native boolean ArRobotConnector_getRemoteIsSim(long jarg1, ArRobotConnector jarg1_);
  public final static native void ArRobotConnector_setRemoteIsSim(long jarg1, ArRobotConnector jarg1_, boolean jarg2);
  public final static native long ArRobotConnector_getRobot(long jarg1, ArRobotConnector jarg1_);
  public final static native boolean ArRobotConnector_disconnectAll(long jarg1, ArRobotConnector jarg1_);
  public final static native long new_ArRobotJoyHandler(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArRobotJoyHandler(long jarg1);
  public final static native void ArRobotJoyHandler_getDoubles(long jarg1, ArRobotJoyHandler jarg1_, double[] jarg2, double[] jarg3, double[] jarg4);
  public final static native boolean ArRobotJoyHandler_getButton1(long jarg1, ArRobotJoyHandler jarg1_);
  public final static native boolean ArRobotJoyHandler_getButton2(long jarg1, ArRobotJoyHandler jarg1_);
  public final static native long ArRobotJoyHandler_getDataReceivedTime(long jarg1, ArRobotJoyHandler jarg1_);
  public final static native boolean ArRobotJoyHandler_gotData(long jarg1, ArRobotJoyHandler jarg1_);
  public final static native void ArRobotJoyHandler_addToConfig(long jarg1, ArRobotJoyHandler jarg1_, long jarg2, ArConfig jarg2_, String jarg3);
  public final static native int ArRobotJoyHandler_getRawX(long jarg1, ArRobotJoyHandler jarg1_);
  public final static native int ArRobotJoyHandler_getRawY(long jarg1, ArRobotJoyHandler jarg1_);
  public final static native int ArRobotJoyHandler_getRawThrottle(long jarg1, ArRobotJoyHandler jarg1_);
  public final static native long new_ArRobotPacket__SWIG_0(short jarg1, short jarg2);
  public final static native long new_ArRobotPacket__SWIG_1(short jarg1);
  public final static native long new_ArRobotPacket__SWIG_2();
  public final static native void delete_ArRobotPacket(long jarg1);
  public final static native boolean ArRobotPacket_verifyCheckSum(long jarg1, ArRobotPacket jarg1_);
  public final static native short ArRobotPacket_getID(long jarg1, ArRobotPacket jarg1_);
  public final static native void ArRobotPacket_setID(long jarg1, ArRobotPacket jarg1_, short jarg2);
  public final static native short ArRobotPacket_calcCheckSum(long jarg1, ArRobotPacket jarg1_);
  public final static native void ArRobotPacket_finalizePacket(long jarg1, ArRobotPacket jarg1_);
  public final static native long ArRobotPacket_getTimeReceived(long jarg1, ArRobotPacket jarg1_);
  public final static native void ArRobotPacket_setTimeReceived(long jarg1, ArRobotPacket jarg1_, long jarg2, ArTime jarg2_);
  public final static native void ArRobotPacket_log(long jarg1, ArRobotPacket jarg1_);
  public final static native long new_ArRobotPacketReceiver__SWIG_0(boolean jarg1, short jarg2, short jarg3);
  public final static native long new_ArRobotPacketReceiver__SWIG_1(boolean jarg1, short jarg2);
  public final static native long new_ArRobotPacketReceiver__SWIG_2(boolean jarg1);
  public final static native long new_ArRobotPacketReceiver__SWIG_3();
  public final static native long new_ArRobotPacketReceiver__SWIG_4(long jarg1, ArDeviceConnection jarg1_, boolean jarg2, short jarg3, short jarg4);
  public final static native long new_ArRobotPacketReceiver__SWIG_5(long jarg1, ArDeviceConnection jarg1_, boolean jarg2, short jarg3);
  public final static native long new_ArRobotPacketReceiver__SWIG_6(long jarg1, ArDeviceConnection jarg1_, boolean jarg2);
  public final static native long new_ArRobotPacketReceiver__SWIG_7(long jarg1, ArDeviceConnection jarg1_);
  public final static native long new_ArRobotPacketReceiver__SWIG_8(long jarg1, ArDeviceConnection jarg1_, boolean jarg2, short jarg3, short jarg4, boolean jarg5, String jarg6);
  public final static native void delete_ArRobotPacketReceiver(long jarg1);
  public final static native long ArRobotPacketReceiver_receivePacket__SWIG_0(long jarg1, ArRobotPacketReceiver jarg1_, long jarg2);
  public final static native long ArRobotPacketReceiver_receivePacket__SWIG_1(long jarg1, ArRobotPacketReceiver jarg1_);
  public final static native void ArRobotPacketReceiver_setDeviceConnection(long jarg1, ArRobotPacketReceiver jarg1_, long jarg2, ArDeviceConnection jarg2_);
  public final static native long ArRobotPacketReceiver_getDeviceConnection(long jarg1, ArRobotPacketReceiver jarg1_);
  public final static native boolean ArRobotPacketReceiver_isAllocatingPackets(long jarg1, ArRobotPacketReceiver jarg1_);
  public final static native void ArRobotPacketReceiver_setAllocatingPackets(long jarg1, ArRobotPacketReceiver jarg1_, boolean jarg2);
  public final static native void ArRobotPacketReceiver_setTracking(long jarg1, ArRobotPacketReceiver jarg1_, boolean jarg2);
  public final static native void ArRobotPacketReceiver_setTrackingLogName(long jarg1, ArRobotPacketReceiver jarg1_, String jarg2);
  public final static native void ArRobotPacketReceiver_setPacketReceivedCallback(long jarg1, ArRobotPacketReceiver jarg1_, long jarg2, ArFunctor1_ArRobotPacketP jarg2_);
  public final static native long new_ArRobotPacketSender__SWIG_0(short jarg1, short jarg2);
  public final static native long new_ArRobotPacketSender__SWIG_1(short jarg1);
  public final static native long new_ArRobotPacketSender__SWIG_2();
  public final static native long new_ArRobotPacketSender__SWIG_3(long jarg1, ArDeviceConnection jarg1_, short jarg2, short jarg3);
  public final static native long new_ArRobotPacketSender__SWIG_4(long jarg1, ArDeviceConnection jarg1_, short jarg2);
  public final static native long new_ArRobotPacketSender__SWIG_5(long jarg1, ArDeviceConnection jarg1_);
  public final static native long new_ArRobotPacketSender__SWIG_6(long jarg1, ArDeviceConnection jarg1_, short jarg2, short jarg3, boolean jarg4, String jarg5);
  public final static native void delete_ArRobotPacketSender(long jarg1);
  public final static native boolean ArRobotPacketSender_com(long jarg1, ArRobotPacketSender jarg1_, short jarg2);
  public final static native boolean ArRobotPacketSender_comInt(long jarg1, ArRobotPacketSender jarg1_, short jarg2, short jarg3);
  public final static native boolean ArRobotPacketSender_com2Bytes(long jarg1, ArRobotPacketSender jarg1_, short jarg2, char jarg3, char jarg4);
  public final static native boolean ArRobotPacketSender_comStr(long jarg1, ArRobotPacketSender jarg1_, short jarg2, String jarg3);
  public final static native boolean ArRobotPacketSender_comStrN(long jarg1, ArRobotPacketSender jarg1_, short jarg2, String jarg3, int jarg4);
  public final static native boolean ArRobotPacketSender_comDataN(long jarg1, ArRobotPacketSender jarg1_, short jarg2, String jarg3, int jarg4);
  public final static native boolean ArRobotPacketSender_sendPacket(long jarg1, ArRobotPacketSender jarg1_, long jarg2, ArRobotPacket jarg2_);
  public final static native void ArRobotPacketSender_setDeviceConnection(long jarg1, ArRobotPacketSender jarg1_, long jarg2, ArDeviceConnection jarg2_);
  public final static native long ArRobotPacketSender_getDeviceConnection(long jarg1, ArRobotPacketSender jarg1_);
  public final static native void ArRobotPacketSender_setPacketSentCallback(long jarg1, ArRobotPacketSender jarg1_, long jarg2, ArFunctor1_ArRobotPacketP jarg2_);
  public final static native void ArRobotPacketSender_setTracking__SWIG_0(long jarg1, ArRobotPacketSender jarg1_, boolean jarg2);
  public final static native void ArRobotPacketSender_setTracking__SWIG_1(long jarg1, ArRobotPacketSender jarg1_);
  public final static native void ArRobotPacketSender_setTrackingLogName(long jarg1, ArRobotPacketSender jarg1_, String jarg2);
  public final static native long new_ArRobotParams();
  public final static native void delete_ArRobotParams(long jarg1);
  public final static native String ArRobotParams_getClassName(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getSubClassName(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getRobotRadius(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getRobotDiagonal(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getRobotWidth(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getRobotLength(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getRobotLengthFront(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getRobotLengthRear(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_isHolonomic(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_hasMoveCommand(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getAbsoluteMaxVelocity(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getAbsoluteMaxRotVelocity(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getAbsoluteMaxLatVelocity(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_getRequestIOPackets(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_getRequestEncoderPackets(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getSwitchToBaudRate(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getAngleConvFactor(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getDistConvFactor(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getVelConvFactor(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getRangeConvFactor(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getDiffConvFactor(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getVel2Divisor(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getGyroScaler(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_haveTableSensingIR(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_haveNewTableSensingIR(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_haveFrontBumpers(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_numFrontBumpers(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_haveRearBumpers(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_numRearBumpers(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getNumIR(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_haveIR(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getIRX(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getIRY(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getIRType(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getIRCycles(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getNumSonar(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_getLaserPossessed(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserType__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserType__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserPortType__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserPortType__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserPort__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserPort__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_getConnectLaser__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native boolean ArRobotParams_getConnectLaser__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_getLaserFlipped__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native boolean ArRobotParams_getLaserFlipped__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_getLaserPowerControlled__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native boolean ArRobotParams_getLaserPowerControlled__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getLaserMaxRange__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getLaserMaxRange__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getLaserCumulativeBufferSize__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getLaserCumulativeBufferSize__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getLaserX__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getLaserX__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getLaserY__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getLaserY__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native double ArRobotParams_getLaserTh__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native double ArRobotParams_getLaserTh__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getLaserZ__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getLaserZ__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserIgnore__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserIgnore__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserStartDegrees__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserStartDegrees__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserEndDegrees__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserEndDegrees__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserDegreesChoice__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserDegreesChoice__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserIncrement__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserIncrement__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserIncrementChoice__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserIncrementChoice__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserUnitsChoice__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserUnitsChoice__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserReflectorBitsChoice__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserReflectorBitsChoice__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserStartingBaudChoice__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserStartingBaudChoice__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserAutoBaudChoice__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserAutoBaudChoice__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserSection__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserSection__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLaserPowerOutput__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLaserPowerOutput__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getBatteryMTXBoardType__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getBatteryMTXBoardType__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getBatteryMTXBoardPortType__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getBatteryMTXBoardPortType__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getBatteryMTXBoardPort__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getBatteryMTXBoardPort__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getBatteryMTXBoardBaud__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getBatteryMTXBoardBaud__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_getBatteryMTXBoardAutoConn__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native boolean ArRobotParams_getBatteryMTXBoardAutoConn__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLCDMTXBoardType__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLCDMTXBoardType__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLCDMTXBoardPortType__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLCDMTXBoardPortType__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLCDMTXBoardPort__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLCDMTXBoardPort__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getLCDMTXBoardBaud__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getLCDMTXBoardBaud__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_getLCDMTXBoardAutoConn__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native boolean ArRobotParams_getLCDMTXBoardAutoConn__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_getLCDMTXBoardConnFailOption__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native boolean ArRobotParams_getLCDMTXBoardConnFailOption__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getLCDMTXBoardPowerOutput__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getLCDMTXBoardPowerOutput__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getSonarMTXBoardType__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getSonarMTXBoardType__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getSonarMTXBoardPortType__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getSonarMTXBoardPortType__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getSonarMTXBoardPort__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getSonarMTXBoardPort__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getSonarMTXBoardBaud__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarMTXBoardBaud__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_getSonarMTXBoardAutoConn__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native boolean ArRobotParams_getSonarMTXBoardAutoConn__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getSonarMTXBoardDelay__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarMTXBoardDelay__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getSonarMTXBoardGain__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarMTXBoardGain__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getSonarMTXBoardDetectionThreshold__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarMTXBoardDetectionThreshold__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getSonarMTXBoardMaxRange__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarMTXBoardMaxRange__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getSonarMTXBoardUseForAutonomousDriving__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarMTXBoardUseForAutonomousDriving__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getSonarMTXBoardPowerOutput__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native String ArRobotParams_getSonarMTXBoardPowerOutput__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getNumSonarOnMTXBoard__SWIG_0(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getNumSonarOnMTXBoard__SWIG_1(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getNumSonarUnits(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_haveSonar(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarX(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarY(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarTh(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarGain(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarDetectionThreshold(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarMaxRange(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarUseForAutonomousDriving(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarMTXBoard(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native int ArRobotParams_getSonarMTXBoardUnitPosition(long jarg1, ArRobotParams jarg1_, int jarg2);
  public final static native boolean ArRobotParams_hasSettableVelMaxes(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getTransVelMax(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getRotVelMax(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_hasSettableAccsDecs(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getTransAccel(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getTransDecel(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getRotAccel(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getRotDecel(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_hasLatVel(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getLatVelMax(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getLatAccel(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getLatDecel(long jarg1, ArRobotParams jarg1_);
  public final static native boolean ArRobotParams_save(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getGPSX(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getGPSY(long jarg1, ArRobotParams jarg1_);
  public final static native int ArRobotParams_getGPSBaud(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getGPSPort(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getGPSType(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getCompassType(long jarg1, ArRobotParams jarg1_);
  public final static native String ArRobotParams_getCompassPort(long jarg1, ArRobotParams jarg1_);
  public final static native long ArRobotParams_getVideoParams(long jarg1, ArRobotParams jarg1_);
  public final static native long ArRobotParams_getPTZParams(long jarg1, ArRobotParams jarg1_);
  public final static native long new_ArRVisionPacket__SWIG_0(int jarg1);
  public final static native long new_ArRVisionPacket__SWIG_1();
  public final static native void delete_ArRVisionPacket(long jarg1);
  public final static native void ArRVisionPacket_uByteToBuf(long jarg1, ArRVisionPacket jarg1_, short jarg2);
  public final static native void ArRVisionPacket_byte2ToBuf(long jarg1, ArRVisionPacket jarg1_, short jarg2);
  public final static native void ArRVisionPacket_byte2ToBufAtPos(long jarg1, ArRVisionPacket jarg1_, short jarg2, int jarg3);
  public final static native long new_ArRVisionPTZ(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArRVisionPTZ(long jarg1);
  public final static native boolean ArRVisionPTZ_init(long jarg1, ArRVisionPTZ jarg1_);
  public final static native String ArRVisionPTZ_getTypeName(long jarg1, ArRVisionPTZ jarg1_);
  public final static native void ArRVisionPTZ_setPort(long jarg1, ArRVisionPTZ jarg1_, String jarg2);
  public final static native boolean ArRVisionPTZ_canZoom(long jarg1, ArRVisionPTZ jarg1_);
  public final static native boolean ArRVisionPTZ_zoom(long jarg1, ArRVisionPTZ jarg1_, int jarg2);
  public final static native boolean ArRVisionPTZ_zoomRel(long jarg1, ArRVisionPTZ jarg1_, int jarg2);
  public final static native int ArRVisionPTZ_getZoom(long jarg1, ArRVisionPTZ jarg1_);
  public final static native boolean ArRVisionPTZ_canGetRealPanTilt(long jarg1, ArRVisionPTZ jarg1_);
  public final static native boolean ArRVisionPTZ_canGetRealZoom(long jarg1, ArRVisionPTZ jarg1_);
  public final static native boolean ArRVisionPTZ_canGetFOV(long jarg1, ArRVisionPTZ jarg1_);
  public final static native double ArRVisionPTZ_getFOVAtMaxZoom(long jarg1, ArRVisionPTZ jarg1_);
  public final static native double ArRVisionPTZ_getFOVAtMinZoom(long jarg1, ArRVisionPTZ jarg1_);
  public final static native long ArRVisionPTZ_readPacket(long jarg1, ArRVisionPTZ jarg1_);
  public final static native int ArRVisionPTZ_MAX_PAN_get();
  public final static native int ArRVisionPTZ_MIN_PAN_get();
  public final static native int ArRVisionPTZ_MIN_TILT_get();
  public final static native int ArRVisionPTZ_MAX_TILT_get();
  public final static native int ArRVisionPTZ_MIN_ZOOM_get();
  public final static native int ArRVisionPTZ_MAX_ZOOM_get();
  public final static native int ArRVisionPTZ_TILT_OFFSET_IN_DEGREES_get();
  public final static native int ArRVisionPTZ_PAN_OFFSET_IN_DEGREES_get();
  public final static native long new_ArSensorReading__SWIG_0(double jarg1, double jarg2, double jarg3);
  public final static native long new_ArSensorReading__SWIG_1(double jarg1, double jarg2);
  public final static native long new_ArSensorReading__SWIG_2(double jarg1);
  public final static native long new_ArSensorReading__SWIG_3();
  public final static native long new_ArSensorReading__SWIG_4(long jarg1, ArSensorReading jarg1_);
  public final static native void delete_ArSensorReading(long jarg1);
  public final static native long ArSensorReading_getRange(long jarg1, ArSensorReading jarg1_);
  public final static native boolean ArSensorReading_isNew(long jarg1, ArSensorReading jarg1_, long jarg2);
  public final static native double ArSensorReading_getX(long jarg1, ArSensorReading jarg1_);
  public final static native double ArSensorReading_getY(long jarg1, ArSensorReading jarg1_);
  public final static native long ArSensorReading_getPose(long jarg1, ArSensorReading jarg1_);
  public final static native double ArSensorReading_getLocalX(long jarg1, ArSensorReading jarg1_);
  public final static native double ArSensorReading_getLocalY(long jarg1, ArSensorReading jarg1_);
  public final static native long ArSensorReading_getLocalPose(long jarg1, ArSensorReading jarg1_);
  public final static native long ArSensorReading_getPoseTaken(long jarg1, ArSensorReading jarg1_);
  public final static native long ArSensorReading_getEncoderPoseTaken(long jarg1, ArSensorReading jarg1_);
  public final static native double ArSensorReading_getSensorX(long jarg1, ArSensorReading jarg1_);
  public final static native double ArSensorReading_getSensorY(long jarg1, ArSensorReading jarg1_);
  public final static native double ArSensorReading_getSensorTh(long jarg1, ArSensorReading jarg1_);
  public final static native boolean ArSensorReading_getIgnoreThisReading(long jarg1, ArSensorReading jarg1_);
  public final static native int ArSensorReading_getExtraInt(long jarg1, ArSensorReading jarg1_);
  public final static native long ArSensorReading_getSensorPosition(long jarg1, ArSensorReading jarg1_);
  public final static native double ArSensorReading_getSensorDX(long jarg1, ArSensorReading jarg1_);
  public final static native double ArSensorReading_getSensorDY(long jarg1, ArSensorReading jarg1_);
  public final static native double ArSensorReading_getXTaken(long jarg1, ArSensorReading jarg1_);
  public final static native double ArSensorReading_getYTaken(long jarg1, ArSensorReading jarg1_);
  public final static native double ArSensorReading_getThTaken(long jarg1, ArSensorReading jarg1_);
  public final static native long ArSensorReading_getCounterTaken(long jarg1, ArSensorReading jarg1_);
  public final static native long ArSensorReading_getTimeTaken(long jarg1, ArSensorReading jarg1_);
  public final static native void ArSensorReading_newData__SWIG_0(long jarg1, ArSensorReading jarg1_, int jarg2, long jarg3, ArPose jarg3_, long jarg4, ArPose jarg4_, long jarg5, ArTransform jarg5_, long jarg6, long jarg7, ArTime jarg7_, boolean jarg8, int jarg9);
  public final static native void ArSensorReading_newData__SWIG_1(long jarg1, ArSensorReading jarg1_, int jarg2, long jarg3, ArPose jarg3_, long jarg4, ArPose jarg4_, long jarg5, ArTransform jarg5_, long jarg6, long jarg7, ArTime jarg7_, boolean jarg8);
  public final static native void ArSensorReading_newData__SWIG_2(long jarg1, ArSensorReading jarg1_, int jarg2, long jarg3, ArPose jarg3_, long jarg4, ArPose jarg4_, long jarg5, ArTransform jarg5_, long jarg6, long jarg7, ArTime jarg7_);
  public final static native void ArSensorReading_newData__SWIG_3(long jarg1, ArSensorReading jarg1_, int jarg2, int jarg3, long jarg4, ArPose jarg4_, long jarg5, ArPose jarg5_, long jarg6, ArTransform jarg6_, long jarg7, long jarg8, ArTime jarg8_, boolean jarg9, int jarg10);
  public final static native void ArSensorReading_newData__SWIG_4(long jarg1, ArSensorReading jarg1_, int jarg2, int jarg3, long jarg4, ArPose jarg4_, long jarg5, ArPose jarg5_, long jarg6, ArTransform jarg6_, long jarg7, long jarg8, ArTime jarg8_, boolean jarg9);
  public final static native void ArSensorReading_newData__SWIG_5(long jarg1, ArSensorReading jarg1_, int jarg2, int jarg3, long jarg4, ArPose jarg4_, long jarg5, ArPose jarg5_, long jarg6, ArTransform jarg6_, long jarg7, long jarg8, ArTime jarg8_);
  public final static native void ArSensorReading_resetSensorPosition__SWIG_0(long jarg1, ArSensorReading jarg1_, double jarg2, double jarg3, double jarg4, boolean jarg5);
  public final static native void ArSensorReading_resetSensorPosition__SWIG_1(long jarg1, ArSensorReading jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void ArSensorReading_setIgnoreThisReading(long jarg1, ArSensorReading jarg1_, boolean jarg2);
  public final static native void ArSensorReading_setExtraInt(long jarg1, ArSensorReading jarg1_, int jarg2);
  public final static native void ArSensorReading_applyTransform(long jarg1, ArSensorReading jarg1_, long jarg2, ArTransform jarg2_);
  public final static native void ArSensorReading_applyEncoderTransform(long jarg1, ArSensorReading jarg1_, long jarg2, ArTransform jarg2_);
  public final static native boolean ArSensorReading_getAdjusted(long jarg1, ArSensorReading jarg1_);
  public final static native void ArSensorReading_setAdjusted(long jarg1, ArSensorReading jarg1_, boolean jarg2);
  public final static native long new_ArSerialConnection__SWIG_0(boolean jarg1);
  public final static native long new_ArSerialConnection__SWIG_1();
  public final static native void delete_ArSerialConnection(long jarg1);
  public final static native int ArSerialConnection_open__SWIG_0(long jarg1, ArSerialConnection jarg1_, String jarg2);
  public final static native int ArSerialConnection_open__SWIG_1(long jarg1, ArSerialConnection jarg1_);
  public final static native void ArSerialConnection_setPort__SWIG_0(long jarg1, ArSerialConnection jarg1_, String jarg2);
  public final static native void ArSerialConnection_setPort__SWIG_1(long jarg1, ArSerialConnection jarg1_);
  public final static native String ArSerialConnection_getPort(long jarg1, ArSerialConnection jarg1_);
  public final static native boolean ArSerialConnection_openSimple(long jarg1, ArSerialConnection jarg1_);
  public final static native int ArSerialConnection_getStatus(long jarg1, ArSerialConnection jarg1_);
  public final static native boolean ArSerialConnection_close(long jarg1, ArSerialConnection jarg1_);
  public final static native int ArSerialConnection_read__SWIG_0(long jarg1, ArSerialConnection jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native int ArSerialConnection_read__SWIG_1(long jarg1, ArSerialConnection jarg1_, String jarg2, long jarg3);
  public final static native int ArSerialConnection_write(long jarg1, ArSerialConnection jarg1_, String jarg2, long jarg3);
  public final static native String ArSerialConnection_getOpenMessage(long jarg1, ArSerialConnection jarg1_, int jarg2);
  public final static native boolean ArSerialConnection_setBaud(long jarg1, ArSerialConnection jarg1_, int jarg2);
  public final static native int ArSerialConnection_getBaud(long jarg1, ArSerialConnection jarg1_);
  public final static native boolean ArSerialConnection_setHardwareControl(long jarg1, ArSerialConnection jarg1_, boolean jarg2);
  public final static native boolean ArSerialConnection_getHardwareControl(long jarg1, ArSerialConnection jarg1_);
  public final static native boolean ArSerialConnection_getCTS(long jarg1, ArSerialConnection jarg1_);
  public final static native boolean ArSerialConnection_getDSR(long jarg1, ArSerialConnection jarg1_);
  public final static native boolean ArSerialConnection_getDCD(long jarg1, ArSerialConnection jarg1_);
  public final static native boolean ArSerialConnection_getRing(long jarg1, ArSerialConnection jarg1_);
  public final static native int ArSerialConnection_internalOpen(long jarg1, ArSerialConnection jarg1_);
  public final static native int ArSerialConnection_OPEN_COULD_NOT_OPEN_PORT_get();
  public final static native long ArSerialConnection_getTimeRead(long jarg1, ArSerialConnection jarg1_, int jarg2);
  public final static native boolean ArSerialConnection_isTimeStamping(long jarg1, ArSerialConnection jarg1_);
  public final static native int ArSignalHandler_SigHUP_get();
  public final static native void ArSignalHandler_createHandlerNonThreaded();
  public final static native void ArSignalHandler_createHandlerThreaded();
  public final static native void ArSignalHandler_blockCommon();
  public final static native void ArSignalHandler_unblockAll();
  public final static native void ArSignalHandler_block(int jarg1);
  public final static native void ArSignalHandler_unblock(int jarg1);
  public final static native void ArSignalHandler_handle(int jarg1);
  public final static native void ArSignalHandler_unhandle(int jarg1);
  public final static native void ArSignalHandler_addHandlerCB(long jarg1, ArFunctor1_Int jarg1_, int jarg2);
  public final static native void ArSignalHandler_delHandlerCB(long jarg1, ArFunctor1_Int jarg1_);
  public final static native void ArSignalHandler_delAllHandlerCBs();
  public final static native long ArSignalHandler_getHandler();
  public final static native String ArSignalHandler_nameSignal(int jarg1);
  public final static native void ArSignalHandler_blockCommonThisThread();
  public final static native void ArSignalHandler_blockAllThisThread();
  public final static native void delete_ArSignalHandler(long jarg1);
  public final static native long ArSignalHandler_runThread(long jarg1, ArSignalHandler jarg1_, long jarg2);
  public final static native void ArSignalHandler_signalCB(int jarg1);
  public final static native void ArSignalHandler_logThread();
  public final static native long new_ArSimpleConnector__SWIG_0(java.lang.String[] jarg1);
  public final static native long new_ArSimpleConnector__SWIG_1(long jarg1, ArArgumentBuilder jarg1_);
  public final static native long new_ArSimpleConnector__SWIG_2(long jarg1, ArArgumentParser jarg1_);
  public final static native void delete_ArSimpleConnector(long jarg1);
  public final static native boolean ArSimpleConnector_setupRobot(long jarg1, ArSimpleConnector jarg1_, long jarg2, ArRobot jarg2_);
  public final static native boolean ArSimpleConnector_connectRobot(long jarg1, ArSimpleConnector jarg1_, long jarg2, ArRobot jarg2_);
  public final static native boolean ArSimpleConnector_setupLaser(long jarg1, ArSimpleConnector jarg1_, long jarg2);
  public final static native boolean ArSimpleConnector_setupSecondLaser(long jarg1, ArSimpleConnector jarg1_, long jarg2);
  public final static native boolean ArSimpleConnector_setupLaserArbitrary(long jarg1, ArSimpleConnector jarg1_, long jarg2, int jarg3);
  public final static native boolean ArSimpleConnector_connectLaser(long jarg1, ArSimpleConnector jarg1_, long jarg2);
  public final static native boolean ArSimpleConnector_connectSecondLaser(long jarg1, ArSimpleConnector jarg1_, long jarg2);
  public final static native boolean ArSimpleConnector_connectLaserArbitrary(long jarg1, ArSimpleConnector jarg1_, long jarg2, int jarg3);
  public final static native boolean ArSimpleConnector_parseArgs__SWIG_0(long jarg1, ArSimpleConnector jarg1_);
  public final static native boolean ArSimpleConnector_parseArgs__SWIG_1(long jarg1, ArSimpleConnector jarg1_, long jarg2, ArArgumentParser jarg2_);
  public final static native void ArSimpleConnector_logOptions(long jarg1, ArSimpleConnector jarg1_);
  public final static native void ArSimpleConnector_setMaxNumLasers__SWIG_0(long jarg1, ArSimpleConnector jarg1_, int jarg2);
  public final static native void ArSimpleConnector_setMaxNumLasers__SWIG_1(long jarg1, ArSimpleConnector jarg1_);
  public final static native long new_ArSimulatedLaser(long jarg1, ArLaser jarg1_);
  public final static native void delete_ArSimulatedLaser(long jarg1);
  public final static native boolean ArSimulatedLaser_blockingConnect(long jarg1, ArSimulatedLaser jarg1_);
  public final static native boolean ArSimulatedLaser_asyncConnect(long jarg1, ArSimulatedLaser jarg1_);
  public final static native boolean ArSimulatedLaser_disconnect(long jarg1, ArSimulatedLaser jarg1_);
  public final static native boolean ArSimulatedLaser_isConnected(long jarg1, ArSimulatedLaser jarg1_);
  public final static native boolean ArSimulatedLaser_isTryingToConnect(long jarg1, ArSimulatedLaser jarg1_);
  public final static native long new_ArSocket__SWIG_0();
  public final static native long new_ArSocket__SWIG_1(String jarg1, int jarg2, int jarg3);
  public final static native long new_ArSocket__SWIG_2(int jarg1, boolean jarg2, int jarg3);
  public final static native void delete_ArSocket(long jarg1);
  public final static native boolean ArSocket_init();
  public final static native void ArSocket_shutdown();
  public final static native String ArSocket_toString(int jarg1);
  public final static native void ArSocket_ourInitialized_set(boolean jarg1);
  public final static native boolean ArSocket_ourInitialized_get();
  public final static native boolean ArSocket_copy__SWIG_0(long jarg1, ArSocket jarg1_, int jarg2, boolean jarg3);
  public final static native void ArSocket_copy__SWIG_1(long jarg1, ArSocket jarg1_, long jarg2, ArSocket jarg2_);
  public final static native void ArSocket_transfer(long jarg1, ArSocket jarg1_, long jarg2, ArSocket jarg2_);
  public final static native boolean ArSocket_connect__SWIG_0(long jarg1, ArSocket jarg1_, String jarg2, int jarg3, int jarg4, String jarg5);
  public final static native boolean ArSocket_connect__SWIG_1(long jarg1, ArSocket jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native boolean ArSocket_connect__SWIG_2(long jarg1, ArSocket jarg1_, String jarg2, int jarg3);
  public final static native boolean ArSocket_open__SWIG_0(long jarg1, ArSocket jarg1_, int jarg2, int jarg3, String jarg4);
  public final static native boolean ArSocket_open__SWIG_1(long jarg1, ArSocket jarg1_, int jarg2, int jarg3);
  public final static native boolean ArSocket_create(long jarg1, ArSocket jarg1_, int jarg2);
  public final static native boolean ArSocket_findValidPort__SWIG_0(long jarg1, ArSocket jarg1_, int jarg2, String jarg3);
  public final static native boolean ArSocket_findValidPort__SWIG_1(long jarg1, ArSocket jarg1_, int jarg2);
  public final static native boolean ArSocket_connectTo__SWIG_0(long jarg1, ArSocket jarg1_, String jarg2, int jarg3);
  public final static native boolean ArSocket_connectTo__SWIG_1(long jarg1, ArSocket jarg1_, long jarg2);
  public final static native boolean ArSocket_accept(long jarg1, ArSocket jarg1_, long jarg2, ArSocket jarg2_);
  public final static native boolean ArSocket_close(long jarg1, ArSocket jarg1_);
  public final static native int ArSocket_write__SWIG_0(long jarg1, ArSocket jarg1_, long jarg2, long jarg3);
  public final static native int ArSocket_read__SWIG_0(long jarg1, ArSocket jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int ArSocket_read__SWIG_1(long jarg1, ArSocket jarg1_, long jarg2, long jarg3);
  public final static native int ArSocket_sendTo__SWIG_0(long jarg1, ArSocket jarg1_, long jarg2, int jarg3);
  public final static native int ArSocket_sendTo__SWIG_1(long jarg1, ArSocket jarg1_, long jarg2, int jarg3, long jarg4);
  public final static native int ArSocket_recvFrom(long jarg1, ArSocket jarg1_, long jarg2, int jarg3, long jarg4);
  public final static native boolean ArSocket_hostAddr(String jarg1, long jarg2);
  public final static native boolean ArSocket_addrHost(long jarg1, String jarg2);
  public final static native String ArSocket_getHostName();
  public final static native boolean ArSocket_getSockName(long jarg1, ArSocket jarg1_);
  public final static native long ArSocket_sockAddrIn(long jarg1, ArSocket jarg1_);
  public final static native long ArSocket_inAddr(long jarg1, ArSocket jarg1_);
  public final static native int ArSocket_inPort(long jarg1, ArSocket jarg1_);
  public final static native void ArSocket_inToA(long jarg1, String jarg2);
  public final static native long ArSocket_sockAddrLen();
  public final static native long ArSocket_maxHostNameLen();
  public final static native long ArSocket_hostToNetOrder(int jarg1);
  public final static native long ArSocket_netToHostOrder(int jarg1);
  public final static native boolean ArSocket_setLinger(long jarg1, ArSocket jarg1_, int jarg2);
  public final static native boolean ArSocket_setBroadcast(long jarg1, ArSocket jarg1_);
  public final static native boolean ArSocket_setReuseAddress(long jarg1, ArSocket jarg1_);
  public final static native boolean ArSocket_setNonBlock(long jarg1, ArSocket jarg1_);
  public final static native void ArSocket_setDoClose(long jarg1, ArSocket jarg1_, boolean jarg2);
  public final static native void ArSocket_setFakeWrites(long jarg1, ArSocket jarg1_, boolean jarg2);
  public final static native int ArSocket_getFD(long jarg1, ArSocket jarg1_);
  public final static native int ArSocket_getType(long jarg1, ArSocket jarg1_);
  public final static native String ArSocket_getErrorStr(long jarg1, ArSocket jarg1_);
  public final static native int ArSocket_getError(long jarg1, ArSocket jarg1_);
  public final static native void ArSocket_setErrorTracking(long jarg1, ArSocket jarg1_, boolean jarg2);
  public final static native boolean ArSocket_getErrorTracking(long jarg1, ArSocket jarg1_);
  public final static native boolean ArSocket_getBadWrite(long jarg1, ArSocket jarg1_);
  public final static native boolean ArSocket_getBadRead(long jarg1, ArSocket jarg1_);
  public final static native int ArSocket_writeStringPlain(long jarg1, ArSocket jarg1_, String jarg2);
  public final static native String ArSocket_readString__SWIG_0(long jarg1, ArSocket jarg1_, long jarg2);
  public final static native String ArSocket_readString__SWIG_1(long jarg1, ArSocket jarg1_);
  public final static native void ArSocket_setReadStringIgnoreReturn(long jarg1, ArSocket jarg1_, boolean jarg2);
  public final static native void ArSocket_clearPartialReadString(long jarg1, ArSocket jarg1_);
  public final static native int ArSocket_comparePartialReadString(long jarg1, ArSocket jarg1_, String jarg2);
  public final static native long ArSocket_getLastStringReadTime(long jarg1, ArSocket jarg1_);
  public final static native void ArSocket_setEcho(long jarg1, ArSocket jarg1_, boolean jarg2);
  public final static native boolean ArSocket_getEcho(long jarg1, ArSocket jarg1_);
  public final static native void ArSocket_setLogWriteStrings(long jarg1, ArSocket jarg1_, boolean jarg2);
  public final static native boolean ArSocket_getLogWriteStrings(long jarg1, ArSocket jarg1_);
  public final static native void ArSocket_setStringUseWrongEndChars(long jarg1, ArSocket jarg1_, boolean jarg2);
  public final static native boolean ArSocket_getStringUseWrongEndChars(long jarg1, ArSocket jarg1_);
  public final static native String ArSocket_getRawIPString(long jarg1, ArSocket jarg1_);
  public final static native String ArSocket_getIPString(long jarg1, ArSocket jarg1_);
  public final static native void ArSocket_setIPString(long jarg1, ArSocket jarg1_, String jarg2);
  public final static native void ArSocket_setCloseCallback(long jarg1, ArSocket jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native long ArSocket_getCloseCallback(long jarg1, ArSocket jarg1_);
  public final static native int ArSocket_getSends(long jarg1, ArSocket jarg1_);
  public final static native int ArSocket_getBytesSent(long jarg1, ArSocket jarg1_);
  public final static native int ArSocket_getRecvs(long jarg1, ArSocket jarg1_);
  public final static native int ArSocket_getBytesRecvd(long jarg1, ArSocket jarg1_);
  public final static native void ArSocket_resetTracking(long jarg1, ArSocket jarg1_);
  public final static native boolean ArSocket_setNoDelay(long jarg1, ArSocket jarg1_, boolean jarg2);
  public final static native boolean ArSocket_isOpen(long jarg1, ArSocket jarg1_);
  public final static native String ArSocket_read__SWIG_2(long jarg1, ArSocket jarg1_, long jarg2, long jarg3);
  public final static native boolean ArSocket_write__SWIG_1(long jarg1, ArSocket jarg1_, String jarg2);
  public final static native long new_ArSonarAutoDisabler(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArSonarAutoDisabler(long jarg1);
  public final static native void ArSonarAutoDisabler_supress(long jarg1, ArSonarAutoDisabler jarg1_);
  public final static native long ArSonarAutoDisabler_getSupressCallback(long jarg1, ArSonarAutoDisabler jarg1_);
  public final static native void ArSonarAutoDisabler_unsupress(long jarg1, ArSonarAutoDisabler jarg1_);
  public final static native long ArSonarAutoDisabler_getUnsupressCallback(long jarg1, ArSonarAutoDisabler jarg1_);
  public final static native void ArSonarAutoDisabler_setAutonomousDriving(long jarg1, ArSonarAutoDisabler jarg1_);
  public final static native long ArSonarAutoDisabler_getSetAutonomousDrivingCallback(long jarg1, ArSonarAutoDisabler jarg1_);
  public final static native void ArSonarAutoDisabler_clearAutonomousDriving(long jarg1, ArSonarAutoDisabler jarg1_);
  public final static native long ArSonarAutoDisabler_getClearAutonomousDrivingCallback(long jarg1, ArSonarAutoDisabler jarg1_);
  public final static native long new_ArSonarDevice__SWIG_0(long jarg1, long jarg2, String jarg3);
  public final static native long new_ArSonarDevice__SWIG_1(long jarg1, long jarg2);
  public final static native long new_ArSonarDevice__SWIG_2(long jarg1);
  public final static native long new_ArSonarDevice__SWIG_3();
  public final static native void delete_ArSonarDevice(long jarg1);
  public final static native void ArSonarDevice_processReadings(long jarg1, ArSonarDevice jarg1_);
  public final static native void ArSonarDevice_setRobot(long jarg1, ArSonarDevice jarg1_, long jarg2, ArRobot jarg2_);
  public final static native void ArSonarDevice_addReading(long jarg1, ArSonarDevice jarg1_, double jarg2, double jarg3);
  public final static native void ArSonarDevice_setIgnoreReadingCB(long jarg1, ArSonarDevice jarg1_, long jarg2);
  public final static native long ArSonarDevice_getIgnoreReadingCB(long jarg1, ArSonarDevice jarg1_);
  public final static native void ArSonarDevice_setCumulativeMaxRange(long jarg1, ArSonarDevice jarg1_, double jarg2);
  public final static native long new_ArSonyPacket__SWIG_0(int jarg1);
  public final static native long new_ArSonyPacket__SWIG_1();
  public final static native void delete_ArSonyPacket(long jarg1);
  public final static native void ArSonyPacket_uByteToBuf(long jarg1, ArSonyPacket jarg1_, short jarg2);
  public final static native void ArSonyPacket_byte2ToBuf(long jarg1, ArSonyPacket jarg1_, short jarg2);
  public final static native void ArSonyPacket_byte2ToBufAtPos(long jarg1, ArSonyPacket jarg1_, short jarg2, int jarg3);
  public final static native long new_ArSonyPTZ(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArSonyPTZ(long jarg1);
  public final static native boolean ArSonyPTZ_init(long jarg1, ArSonyPTZ jarg1_);
  public final static native String ArSonyPTZ_getTypeName(long jarg1, ArSonyPTZ jarg1_);
  public final static native boolean ArSonyPTZ_canZoom(long jarg1, ArSonyPTZ jarg1_);
  public final static native boolean ArSonyPTZ_zoom(long jarg1, ArSonyPTZ jarg1_, int jarg2);
  public final static native boolean ArSonyPTZ_zoomRel(long jarg1, ArSonyPTZ jarg1_, int jarg2);
  public final static native int ArSonyPTZ_getZoom(long jarg1, ArSonyPTZ jarg1_);
  public final static native boolean ArSonyPTZ_canGetFOV(long jarg1, ArSonyPTZ jarg1_);
  public final static native double ArSonyPTZ_getFOVAtMaxZoom(long jarg1, ArSonyPTZ jarg1_);
  public final static native double ArSonyPTZ_getFOVAtMinZoom(long jarg1, ArSonyPTZ jarg1_);
  public final static native boolean ArSonyPTZ_backLightingOn(long jarg1, ArSonyPTZ jarg1_);
  public final static native boolean ArSonyPTZ_backLightingOff(long jarg1, ArSonyPTZ jarg1_);
  public final static native boolean ArSoundPlayer_playWavFile__SWIG_0(String jarg1, String jarg2);
  public final static native boolean ArSoundPlayer_playWavFile__SWIG_1(String jarg1);
  public final static native boolean ArSoundPlayer_playNativeFile(String jarg1, String jarg2);
  public final static native void ArSoundPlayer_stopPlaying();
  public final static native long ArSoundPlayer_getPlayWavFileCallback();
  public final static native long ArSoundPlayer_getStopPlayingCallback();
  public final static native boolean ArSoundPlayer_playSoundPCM16(String jarg1, int jarg2);
  public final static native void ArSoundPlayer_setVolume(double jarg1);
  public final static native void ArSoundPlayer_setVolumePercent(double jarg1);
  public final static native long new_ArSoundPlayer();
  public final static native void delete_ArSoundPlayer(long jarg1);
  public final static native long new_ArSoundsQueue__SWIG_0();
  public final static native long new_ArSoundsQueue__SWIG_1(long jarg1, ArRetFunctor_Bool jarg1_, long jarg2, long jarg3, ArFunctor jarg3_, long jarg4, ArRetFunctor_Bool jarg4_, long jarg5, long jarg6, ArFunctor jarg6_);
  public final static native long new_ArSoundsQueue__SWIG_2(long jarg1, ArRetFunctor_Bool jarg1_, long jarg2, long jarg3, ArFunctor jarg3_, long jarg4, ArRetFunctor_Bool jarg4_, long jarg5);
  public final static native long new_ArSoundsQueue__SWIG_3(long jarg1, ArRetFunctor_Bool jarg1_, long jarg2, long jarg3, ArFunctor jarg3_, long jarg4, ArRetFunctor_Bool jarg4_);
  public final static native long new_ArSoundsQueue__SWIG_4(long jarg1, ArRetFunctor_Bool jarg1_, long jarg2, long jarg3, ArFunctor jarg3_);
  public final static native long new_ArSoundsQueue__SWIG_5(long jarg1, ArRetFunctor_Bool jarg1_, long jarg2);
  public final static native long new_ArSoundsQueue__SWIG_6(long jarg1, ArRetFunctor_Bool jarg1_);
  public final static native long new_ArSoundsQueue__SWIG_7(long jarg1, ArSpeechSynth jarg1_, long jarg2, ArRetFunctor_Bool jarg2_, long jarg3, long jarg4, ArFunctor jarg4_);
  public final static native long new_ArSoundsQueue__SWIG_8(long jarg1, ArSpeechSynth jarg1_, long jarg2, ArRetFunctor_Bool jarg2_, long jarg3);
  public final static native long new_ArSoundsQueue__SWIG_9(long jarg1, ArSpeechSynth jarg1_, long jarg2, ArRetFunctor_Bool jarg2_);
  public final static native long new_ArSoundsQueue__SWIG_10(long jarg1, ArSpeechSynth jarg1_);
  public final static native void delete_ArSoundsQueue(long jarg1);
  public final static native void ArSoundsQueue_addInitCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArRetFunctor_Bool jarg2_);
  public final static native void ArSoundsQueue_setSpeakInitCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArRetFunctor_Bool jarg2_);
  public final static native void ArSoundsQueue_addItem__SWIG_0(long jarg1, ArSoundsQueue jarg1_, long jarg2);
  public final static native void ArSoundsQueue_addItem__SWIG_1(long jarg1, ArSoundsQueue jarg1_, int jarg2, String jarg3, long jarg4, int jarg5, String jarg6);
  public final static native void ArSoundsQueue_addItem__SWIG_2(long jarg1, ArSoundsQueue jarg1_, int jarg2, String jarg3, long jarg4, int jarg5);
  public final static native void ArSoundsQueue_addItem__SWIG_3(long jarg1, ArSoundsQueue jarg1_, int jarg2, String jarg3, long jarg4);
  public final static native boolean ArSoundsQueue_isInitialized(long jarg1, ArSoundsQueue jarg1_);
  public final static native boolean ArSoundsQueue_isSpeakingOrPlaying(long jarg1, ArSoundsQueue jarg1_);
  public final static native boolean ArSoundsQueue_isPlaying(long jarg1, ArSoundsQueue jarg1_);
  public final static native boolean ArSoundsQueue_isSpeaking(long jarg1, ArSoundsQueue jarg1_);
  public final static native void ArSoundsQueue_run(long jarg1, ArSoundsQueue jarg1_);
  public final static native void ArSoundsQueue_runAsync(long jarg1, ArSoundsQueue jarg1_);
  public final static native void ArSoundsQueue_pause(long jarg1, ArSoundsQueue jarg1_);
  public final static native void ArSoundsQueue_resume(long jarg1, ArSoundsQueue jarg1_);
  public final static native boolean ArSoundsQueue_isPaused(long jarg1, ArSoundsQueue jarg1_);
  public final static native void ArSoundsQueue_interrupt(long jarg1, ArSoundsQueue jarg1_);
  public final static native void ArSoundsQueue_clearQueue(long jarg1, ArSoundsQueue jarg1_);
  public final static native void ArSoundsQueue_stop(long jarg1, ArSoundsQueue jarg1_);
  public final static native long ArSoundsQueue_getPauseCallback(long jarg1, ArSoundsQueue jarg1_);
  public final static native long ArSoundsQueue_getResumeCallback(long jarg1, ArSoundsQueue jarg1_);
  public final static native long ArSoundsQueue_getCurrentQueueSize(long jarg1, ArSoundsQueue jarg1_);
  public final static native void ArSoundsQueue_addSoundStartedCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArSoundsQueue_remSoundStartedCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArSoundsQueue_addSoundFinishedCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArSoundsQueue_remSoundFinishedCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArSoundsQueue_addSoundItemStartedCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2);
  public final static native void ArSoundsQueue_remSoundItemStartedCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2);
  public final static native void ArSoundsQueue_addSoundItemFinishedCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2);
  public final static native void ArSoundsQueue_remSoundItemFinishedCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2);
  public final static native void ArSoundsQueue_addQueueNonemptyCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArSoundsQueue_remQueueNonemptyCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArSoundsQueue_addQueueEmptyCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArSoundsQueue_remQueueEmptyCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native long ArSoundsQueue_findPendingItems(long jarg1, ArSoundsQueue jarg1_, String jarg2);
  public final static native void ArSoundsQueue_removePendingItems__SWIG_0(long jarg1, ArSoundsQueue jarg1_, String jarg2, int jarg3);
  public final static native void ArSoundsQueue_removePendingItems__SWIG_1(long jarg1, ArSoundsQueue jarg1_, String jarg2);
  public final static native void ArSoundsQueue_removePendingItemsByPriority(long jarg1, ArSoundsQueue jarg1_, int jarg2);
  public final static native void ArSoundsQueue_removePendingItemsByPriorityWithType(long jarg1, ArSoundsQueue jarg1_, int jarg2, int jarg3);
  public final static native void ArSoundsQueue_removePendingItemsByType(long jarg1, ArSoundsQueue jarg1_, int jarg2);
  public final static native void ArSoundsQueue_removeItems__SWIG_0(long jarg1, ArSoundsQueue jarg1_, int jarg2);
  public final static native void ArSoundsQueue_removeItems__SWIG_1(long jarg1, ArSoundsQueue jarg1_, long jarg2);
  public final static native String ArSoundsQueue_nextItemByType(long jarg1, ArSoundsQueue jarg1_, int jarg2);
  public final static native String ArSoundsQueue_nextItemByPriority(long jarg1, ArSoundsQueue jarg1_, int jarg2);
  public final static native String ArSoundsQueue_nextItemByTypeAndPriority(long jarg1, ArSoundsQueue jarg1_, int jarg2, int jarg3);
  public final static native void ArSoundsQueue_setSpeakCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2);
  public final static native void ArSoundsQueue_setInterruptSpeechCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArSoundsQueue_setPlayFileCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2);
  public final static native void ArSoundsQueue_setPlayWavFileCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2);
  public final static native void ArSoundsQueue_setInterruptFileCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArSoundsQueue_setInterruptWavFileCallback(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native void ArSoundsQueue_speak(long jarg1, ArSoundsQueue jarg1_, String jarg2);
  public final static native void ArSoundsQueue_play(long jarg1, ArSoundsQueue jarg1_, String jarg2);
  public final static native long ArSoundsQueue_createDefaultSpeechItem__SWIG_0(long jarg1, ArSoundsQueue jarg1_, String jarg2);
  public final static native long ArSoundsQueue_createDefaultSpeechItem__SWIG_1(long jarg1, ArSoundsQueue jarg1_);
  public final static native long ArSoundsQueue_createDefaultFileItem__SWIG_0(long jarg1, ArSoundsQueue jarg1_, String jarg2);
  public final static native long ArSoundsQueue_createDefaultFileItem__SWIG_1(long jarg1, ArSoundsQueue jarg1_);
  public final static native void ArSoundsQueue_setDefaultPlayConditionCB(long jarg1, ArSoundsQueue jarg1_, long jarg2, ArRetFunctor_Bool jarg2_);
  public final static native long ArSoundsQueue_runThread(long jarg1, ArSoundsQueue jarg1_, long jarg2);
  public final static native void delete_ArSpeechSynth(long jarg1);
  public final static native boolean ArSpeechSynth_init(long jarg1, ArSpeechSynth jarg1_);
  public final static native void ArSpeechSynth_addToConfig(long jarg1, ArSpeechSynth jarg1_, long jarg2, ArConfig jarg2_);
  public final static native boolean ArSpeechSynth_speak__SWIG_0(long jarg1, ArSpeechSynth jarg1_, String jarg2, String jarg3, long jarg4, int jarg5);
  public final static native boolean ArSpeechSynth_speak__SWIG_1(long jarg1, ArSpeechSynth jarg1_, String jarg2, String jarg3, long jarg4);
  public final static native boolean ArSpeechSynth_speak__SWIG_2(long jarg1, ArSpeechSynth jarg1_, String jarg2, String jarg3);
  public final static native boolean ArSpeechSynth_speak__SWIG_3(long jarg1, ArSpeechSynth jarg1_, String jarg2);
  public final static native boolean ArSpeechSynth_speakf(long jarg1, ArSpeechSynth jarg1_, String jarg2);
  public final static native void ArSpeechSynth_interrupt(long jarg1, ArSpeechSynth jarg1_);
  public final static native long ArSpeechSynth_getInitCallback(long jarg1, ArSpeechSynth jarg1_);
  public final static native long ArSpeechSynth_getSpeakCallback(long jarg1, ArSpeechSynth jarg1_);
  public final static native long ArSpeechSynth_getInterruptCallback(long jarg1, ArSpeechSynth jarg1_);
  public final static native void ArSpeechSynth_setAudioCallback(long jarg1, ArSpeechSynth jarg1_, long jarg2);
  public final static native void ArSpeechSynth_setAudioSampleRate(long jarg1, ArSpeechSynth jarg1_, int jarg2);
  public final static native int ArSpeechSynth_getAudioSampleRate(long jarg1, ArSpeechSynth jarg1_);
  public final static native void ArSpeechSynth_lock(long jarg1, ArSpeechSynth jarg1_);
  public final static native void ArSpeechSynth_unlock(long jarg1, ArSpeechSynth jarg1_);
  public final static native boolean ArSpeechSynth_setVoice(long jarg1, ArSpeechSynth jarg1_, String jarg2);
  public final static native String ArSpeechSynth_getCurrentVoiceName(long jarg1, ArSpeechSynth jarg1_);
  public final static native long ArSpeechSynth_getVoiceNames(long jarg1, ArSpeechSynth jarg1_);
  public final static native long new_ArStringInfoGroup();
  public final static native void delete_ArStringInfoGroup(long jarg1);
  public final static native boolean ArStringInfoGroup_addString(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4);
  public final static native boolean ArStringInfoGroup_addStringInt__SWIG_0(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4, ArRetFunctor_Int jarg4_, String jarg5);
  public final static native boolean ArStringInfoGroup_addStringInt__SWIG_1(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4, ArRetFunctor_Int jarg4_);
  public final static native boolean ArStringInfoGroup_addStringDouble__SWIG_0(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4, ArRetFunctor_Double jarg4_, String jarg5);
  public final static native boolean ArStringInfoGroup_addStringDouble__SWIG_1(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4, ArRetFunctor_Double jarg4_);
  public final static native boolean ArStringInfoGroup_addStringBool__SWIG_0(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4, ArRetFunctor_Bool jarg4_, String jarg5);
  public final static native boolean ArStringInfoGroup_addStringBool__SWIG_1(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4, ArRetFunctor_Bool jarg4_);
  public final static native boolean ArStringInfoGroup_addStringString__SWIG_0(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4, String jarg5);
  public final static native boolean ArStringInfoGroup_addStringString__SWIG_1(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4);
  public final static native boolean ArStringInfoGroup_addStringUnsignedLong__SWIG_0(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4, String jarg5);
  public final static native boolean ArStringInfoGroup_addStringUnsignedLong__SWIG_1(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4);
  public final static native boolean ArStringInfoGroup_addStringLong__SWIG_0(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4, String jarg5);
  public final static native boolean ArStringInfoGroup_addStringLong__SWIG_1(long jarg1, ArStringInfoGroup jarg1_, String jarg2, int jarg3, long jarg4);
  public final static native void ArStringInfoGroup_addAddStringCallback__SWIG_0(long jarg1, ArStringInfoGroup jarg1_, long jarg2, int jarg3);
  public final static native void ArStringInfoGroup_addAddStringCallback__SWIG_1(long jarg1, ArStringInfoGroup jarg1_, long jarg2);
  public final static native long new_ArSyncLoop();
  public final static native void delete_ArSyncLoop(long jarg1);
  public final static native void ArSyncLoop_setRobot(long jarg1, ArSyncLoop jarg1_, long jarg2, ArRobot jarg2_);
  public final static native void ArSyncLoop_stopRunIfNotConnected(long jarg1, ArSyncLoop jarg1_, boolean jarg2);
  public final static native long ArSyncLoop_runThread(long jarg1, ArSyncLoop jarg1_, long jarg2);
  public final static native String ArSyncLoop_getThreadActivity(long jarg1, ArSyncLoop jarg1_);
  public final static native long new_ArSyncTask__SWIG_0(String jarg1, long jarg2, ArFunctor jarg2_, long jarg3, long jarg4, ArSyncTask jarg4_);
  public final static native long new_ArSyncTask__SWIG_1(String jarg1, long jarg2, ArFunctor jarg2_, long jarg3);
  public final static native long new_ArSyncTask__SWIG_2(String jarg1, long jarg2, ArFunctor jarg2_);
  public final static native long new_ArSyncTask__SWIG_3(String jarg1);
  public final static native void delete_ArSyncTask(long jarg1);
  public final static native void ArSyncTask_run(long jarg1, ArSyncTask jarg1_);
  public final static native void ArSyncTask_log__SWIG_0(long jarg1, ArSyncTask jarg1_, int jarg2);
  public final static native void ArSyncTask_log__SWIG_1(long jarg1, ArSyncTask jarg1_);
  public final static native int ArSyncTask_getState(long jarg1, ArSyncTask jarg1_);
  public final static native void ArSyncTask_setState(long jarg1, ArSyncTask jarg1_, int jarg2);
  public final static native long ArSyncTask_findNonRecursive__SWIG_0(long jarg1, ArSyncTask jarg1_, String jarg2);
  public final static native long ArSyncTask_findNonRecursive__SWIG_1(long jarg1, ArSyncTask jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native long ArSyncTask_find__SWIG_0(long jarg1, ArSyncTask jarg1_, String jarg2);
  public final static native long ArSyncTask_find__SWIG_1(long jarg1, ArSyncTask jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native long ArSyncTask_getRunning(long jarg1, ArSyncTask jarg1_);
  public final static native void ArSyncTask_addNewBranch__SWIG_0(long jarg1, ArSyncTask jarg1_, String jarg2, int jarg3, long jarg4);
  public final static native void ArSyncTask_addNewBranch__SWIG_1(long jarg1, ArSyncTask jarg1_, String jarg2, int jarg3);
  public final static native void ArSyncTask_addNewLeaf__SWIG_0(long jarg1, ArSyncTask jarg1_, String jarg2, int jarg3, long jarg4, ArFunctor jarg4_, long jarg5);
  public final static native void ArSyncTask_addNewLeaf__SWIG_1(long jarg1, ArSyncTask jarg1_, String jarg2, int jarg3, long jarg4, ArFunctor jarg4_);
  public final static native String ArSyncTask_getName(long jarg1, ArSyncTask jarg1_);
  public final static native long ArSyncTask_getFunctor(long jarg1, ArSyncTask jarg1_);
  public final static native void ArSyncTask_setWarningTimeCB(long jarg1, ArSyncTask jarg1_, long jarg2, ArRetFunctor_UnsignedInt jarg2_);
  public final static native long ArSyncTask_getWarningTimeCB(long jarg1, ArSyncTask jarg1_);
  public final static native void ArSyncTask_setNoTimeWarningCB(long jarg1, ArSyncTask jarg1_, long jarg2, ArRetFunctor_Bool jarg2_);
  public final static native long ArSyncTask_getNoTimeWarningCB(long jarg1, ArSyncTask jarg1_);
  public final static native void ArSyncTask_remove(long jarg1, ArSyncTask jarg1_, long jarg2, ArSyncTask jarg2_);
  public final static native boolean ArSyncTask_isDeleting(long jarg1, ArSyncTask jarg1_);
  public final static native void ArSystemStatus_startPeriodicUpdate__SWIG_0(int jarg1, int jarg2);
  public final static native void ArSystemStatus_startPeriodicUpdate__SWIG_1(int jarg1);
  public final static native void ArSystemStatus_startPeriodicUpdate__SWIG_2();
  public final static native void ArSystemStatus_stopPeriodicUpdate();
  public final static native void ArSystemStatus_runRefreshThread__SWIG_0(int jarg1);
  public final static native void ArSystemStatus_runRefreshThread__SWIG_1();
  public final static native double ArSystemStatus_getCPU();
  public final static native double ArSystemStatus_getCPUPercent();
  public final static native String ArSystemStatus_getCPUPercentAsString();
  public final static native long ArSystemStatus_getUptime();
  public final static native long ArSystemStatus_getProgramUptime();
  public final static native double ArSystemStatus_getUptimeHours();
  public final static native String ArSystemStatus_getUptimeHoursAsString();
  public final static native long ArSystemStatus_getCPUPercentFunctor();
  public final static native long ArSystemStatus_getUptimeHoursFunctor();
  public final static native long ArSystemStatus_getUptimeFunctor();
  public final static native long ArSystemStatus_getProgramUptimeFunctor();
  public final static native int ArSystemStatus_getWirelessLinkQuality();
  public final static native int ArSystemStatus_getWirelessLinkSignal();
  public final static native int ArSystemStatus_getWirelessLinkNoise();
  public final static native int ArSystemStatus_getWirelessDiscardedPackets();
  public final static native int ArSystemStatus_getWirelessDiscardedPacketsBecauseNetConflict();
  public final static native int ArSystemStatus_getMTXWirelessLink();
  public final static native int ArSystemStatus_getMTXWirelessQuality();
  public final static native int ArSystemStatus_getMTXWirelessIpAddress1();
  public final static native int ArSystemStatus_getMTXWirelessIpAddress2();
  public final static native int ArSystemStatus_getMTXWirelessIpAddress3();
  public final static native int ArSystemStatus_getMTXWirelessIpAddress4();
  public final static native String ArSystemStatus_getMTXWirelessIpAddressString();
  public final static native long ArSystemStatus_getWirelessLinkQualityFunctor();
  public final static native long ArSystemStatus_getWirelessLinkNoiseFunctor();
  public final static native long ArSystemStatus_getWirelessLinkSignalFunctor();
  public final static native long ArSystemStatus_getMTXWirelessLinkFunctor();
  public final static native long ArSystemStatus_getMTXWirelessQualityFunctor();
  public final static native void ArSystemStatus_invalidate();
  public final static native void ArSystemStatus_refresh();
  public final static native long new_ArSystemStatus();
  public final static native void delete_ArSystemStatus(long jarg1);
  public final static native String ARTCM2_DEFAULT_SERIAL_PORT_get();
  public final static native void delete_ArTCM2(long jarg1);
  public final static native boolean ArTCM2_connect(long jarg1, ArTCM2 jarg1_);
  public final static native boolean ArTCM2_blockingConnect__SWIG_0(long jarg1, ArTCM2 jarg1_, long jarg2);
  public final static native boolean ArTCM2_blockingConnect__SWIG_1(long jarg1, ArTCM2 jarg1_);
  public final static native double ArTCM2_getHeading(long jarg1, ArTCM2 jarg1_);
  public final static native boolean ArTCM2_haveHeading(long jarg1, ArTCM2 jarg1_);
  public final static native double ArTCM2_getCompass(long jarg1, ArTCM2 jarg1_);
  public final static native double ArTCM2_getPitch(long jarg1, ArTCM2 jarg1_);
  public final static native boolean ArTCM2_havePitch(long jarg1, ArTCM2 jarg1_);
  public final static native double ArTCM2_getRoll(long jarg1, ArTCM2 jarg1_);
  public final static native boolean ArTCM2_haveRoll(long jarg1, ArTCM2 jarg1_);
  public final static native double ArTCM2_getXMagnetic(long jarg1, ArTCM2 jarg1_);
  public final static native boolean ArTCM2_haveXMagnetic(long jarg1, ArTCM2 jarg1_);
  public final static native double ArTCM2_getYMagnetic(long jarg1, ArTCM2 jarg1_);
  public final static native boolean ArTCM2_haveYMagnetic(long jarg1, ArTCM2 jarg1_);
  public final static native double ArTCM2_getZMagnetic(long jarg1, ArTCM2 jarg1_);
  public final static native boolean ArTCM2_haveZMagnetic(long jarg1, ArTCM2 jarg1_);
  public final static native double ArTCM2_getTemperature(long jarg1, ArTCM2 jarg1_);
  public final static native boolean ArTCM2_haveTemperature(long jarg1, ArTCM2 jarg1_);
  public final static native int ArTCM2_getError(long jarg1, ArTCM2 jarg1_);
  public final static native double ArTCM2_getCalibrationH(long jarg1, ArTCM2 jarg1_);
  public final static native boolean ArTCM2_haveCalibrationH(long jarg1, ArTCM2 jarg1_);
  public final static native double ArTCM2_getCalibrationV(long jarg1, ArTCM2 jarg1_);
  public final static native boolean ArTCM2_haveCalibrationV(long jarg1, ArTCM2 jarg1_);
  public final static native double ArTCM2_getCalibrationM(long jarg1, ArTCM2 jarg1_);
  public final static native boolean ArTCM2_haveCalibrationM(long jarg1, ArTCM2 jarg1_);
  public final static native void ArTCM2_commandOff(long jarg1, ArTCM2 jarg1_);
  public final static native void ArTCM2_commandOnePacket(long jarg1, ArTCM2 jarg1_);
  public final static native void ArTCM2_commandContinuousPackets(long jarg1, ArTCM2 jarg1_);
  public final static native void ArTCM2_commandUserCalibration(long jarg1, ArTCM2 jarg1_);
  public final static native void ArTCM2_commandAutoCalibration(long jarg1, ArTCM2 jarg1_);
  public final static native void ArTCM2_commandStopCalibration(long jarg1, ArTCM2 jarg1_);
  public final static native void ArTCM2_commandSoftReset(long jarg1, ArTCM2 jarg1_);
  public final static native void ArTCM2_commandJustCompass(long jarg1, ArTCM2 jarg1_);
  public final static native int ArTCM2_getPacCount(long jarg1, ArTCM2 jarg1_);
  public final static native void ArTCM2_addHeadingDataCallback(long jarg1, ArTCM2 jarg1_, long jarg2);
  public final static native long new_ArCompassConnector(long jarg1, ArArgumentParser jarg1_);
  public final static native void delete_ArCompassConnector(long jarg1);
  public final static native long ArCompassConnector_create(long jarg1, ArCompassConnector jarg1_, long jarg2, ArRobot jarg2_);
  public final static native boolean ArCompassConnector_connect(long jarg1, ArCompassConnector jarg1_, long jarg2, ArTCM2 jarg2_);
  public final static native long new_ArTCMCompassDirect__SWIG_0(long jarg1, ArDeviceConnection jarg1_);
  public final static native long new_ArTCMCompassDirect__SWIG_1(String jarg1);
  public final static native long new_ArTCMCompassDirect__SWIG_2();
  public final static native void delete_ArTCMCompassDirect(long jarg1);
  public final static native boolean ArTCMCompassDirect_connect(long jarg1, ArTCMCompassDirect jarg1_);
  public final static native boolean ArTCMCompassDirect_blockingConnect__SWIG_0(long jarg1, ArTCMCompassDirect jarg1_, long jarg2);
  public final static native boolean ArTCMCompassDirect_blockingConnect__SWIG_1(long jarg1, ArTCMCompassDirect jarg1_);
  public final static native void ArTCMCompassDirect_commandAutoCalibration(long jarg1, ArTCMCompassDirect jarg1_);
  public final static native void ArTCMCompassDirect_commandUserCalibration(long jarg1, ArTCMCompassDirect jarg1_);
  public final static native void ArTCMCompassDirect_commandStopCalibration(long jarg1, ArTCMCompassDirect jarg1_);
  public final static native void ArTCMCompassDirect_commandContinuousPackets(long jarg1, ArTCMCompassDirect jarg1_);
  public final static native void ArTCMCompassDirect_commandOnePacket(long jarg1, ArTCMCompassDirect jarg1_);
  public final static native void ArTCMCompassDirect_commandOff(long jarg1, ArTCMCompassDirect jarg1_);
  public final static native void ArTCMCompassDirect_commandSoftReset(long jarg1, ArTCMCompassDirect jarg1_);
  public final static native void ArTCMCompassDirect_commandJustCompass(long jarg1, ArTCMCompassDirect jarg1_);
  public final static native int ArTCMCompassDirect_read__SWIG_0(long jarg1, ArTCMCompassDirect jarg1_, long jarg2);
  public final static native int ArTCMCompassDirect_read__SWIG_1(long jarg1, ArTCMCompassDirect jarg1_);
  public final static native void ArTCMCompassDirect_setDeviceConnection(long jarg1, ArTCMCompassDirect jarg1_, long jarg2, ArDeviceConnection jarg2_);
  public final static native long ArTCMCompassDirect_getDeviceConnetion(long jarg1, ArTCMCompassDirect jarg1_);
  public final static native long new_ArTCMCompassRobot(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArTCMCompassRobot(long jarg1);
  public final static native void ArTCMCompassRobot_commandOff(long jarg1, ArTCMCompassRobot jarg1_);
  public final static native void ArTCMCompassRobot_commandJustCompass(long jarg1, ArTCMCompassRobot jarg1_);
  public final static native void ArTCMCompassRobot_commandOnePacket(long jarg1, ArTCMCompassRobot jarg1_);
  public final static native void ArTCMCompassRobot_commandContinuousPackets(long jarg1, ArTCMCompassRobot jarg1_);
  public final static native void ArTCMCompassRobot_commandUserCalibration(long jarg1, ArTCMCompassRobot jarg1_);
  public final static native void ArTCMCompassRobot_commandAutoCalibration(long jarg1, ArTCMCompassRobot jarg1_);
  public final static native void ArTCMCompassRobot_commandStopCalibration(long jarg1, ArTCMCompassRobot jarg1_);
  public final static native void ArTCMCompassRobot_commandSoftReset(long jarg1, ArTCMCompassRobot jarg1_);
  public final static native int ArTaskState_INIT_get();
  public final static native int ArTaskState_USER_START_get();
  public final static native long new_ArTaskState();
  public final static native void delete_ArTaskState(long jarg1);
  public final static native long new_ArTcpConnection();
  public final static native void delete_ArTcpConnection(long jarg1);
  public final static native int ArTcpConnection_open__SWIG_0(long jarg1, ArTcpConnection jarg1_, String jarg2, int jarg3);
  public final static native int ArTcpConnection_open__SWIG_1(long jarg1, ArTcpConnection jarg1_, String jarg2);
  public final static native int ArTcpConnection_open__SWIG_2(long jarg1, ArTcpConnection jarg1_);
  public final static native void ArTcpConnection_setPort__SWIG_0(long jarg1, ArTcpConnection jarg1_, String jarg2, int jarg3);
  public final static native void ArTcpConnection_setPort__SWIG_1(long jarg1, ArTcpConnection jarg1_, String jarg2);
  public final static native void ArTcpConnection_setPort__SWIG_2(long jarg1, ArTcpConnection jarg1_);
  public final static native boolean ArTcpConnection_openSimple(long jarg1, ArTcpConnection jarg1_);
  public final static native int ArTcpConnection_getStatus(long jarg1, ArTcpConnection jarg1_);
  public final static native boolean ArTcpConnection_close(long jarg1, ArTcpConnection jarg1_);
  public final static native int ArTcpConnection_read__SWIG_0(long jarg1, ArTcpConnection jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native int ArTcpConnection_read__SWIG_1(long jarg1, ArTcpConnection jarg1_, String jarg2, long jarg3);
  public final static native int ArTcpConnection_write(long jarg1, ArTcpConnection jarg1_, String jarg2, long jarg3);
  public final static native String ArTcpConnection_getOpenMessage(long jarg1, ArTcpConnection jarg1_, int jarg2);
  public final static native long ArTcpConnection_getTimeRead(long jarg1, ArTcpConnection jarg1_, int jarg2);
  public final static native boolean ArTcpConnection_isTimeStamping(long jarg1, ArTcpConnection jarg1_);
  public final static native String ArTcpConnection_getHost(long jarg1, ArTcpConnection jarg1_);
  public final static native int ArTcpConnection_getPort(long jarg1, ArTcpConnection jarg1_);
  public final static native int ArTcpConnection_internalOpen(long jarg1, ArTcpConnection jarg1_);
  public final static native void ArTcpConnection_setSocket(long jarg1, ArTcpConnection jarg1_, long jarg2, ArSocket jarg2_);
  public final static native long ArTcpConnection_getSocket(long jarg1, ArTcpConnection jarg1_);
  public final static native void ArTcpConnection_setStatus(long jarg1, ArTcpConnection jarg1_, int jarg2);
  public final static native int ArTcpConnection_OPEN_NET_FAIL_get();
  public final static native long new_ArTransform__SWIG_0();
  public final static native long new_ArTransform__SWIG_1(long jarg1, ArPose jarg1_);
  public final static native long new_ArTransform__SWIG_2(long jarg1, ArPose jarg1_, long jarg2, ArPose jarg2_);
  public final static native void delete_ArTransform(long jarg1);
  public final static native long ArTransform_doTransform__SWIG_0(long jarg1, ArTransform jarg1_, long jarg2, ArPose jarg2_);
  public final static native long ArTransform_doTransform__SWIG_1(long jarg1, ArTransform jarg1_, long jarg2, ArPoseWithTime jarg2_);
  public final static native long ArTransform_doInvTransform__SWIG_0(long jarg1, ArTransform jarg1_, long jarg2, ArPose jarg2_);
  public final static native long ArTransform_doInvTransform__SWIG_1(long jarg1, ArTransform jarg1_, long jarg2, ArPoseWithTime jarg2_);
  public final static native void ArTransform_doTransform__SWIG_2(long jarg1, ArTransform jarg1_, long jarg2, ArPosePtrList jarg2_);
  public final static native void ArTransform_doTransform__SWIG_3(long jarg1, ArTransform jarg1_, long jarg2, ArPoseWithTimePtrList jarg2_);
  public final static native void ArTransform_setTransform__SWIG_0(long jarg1, ArTransform jarg1_, long jarg2, ArPose jarg2_);
  public final static native void ArTransform_setTransform__SWIG_1(long jarg1, ArTransform jarg1_, long jarg2, ArPose jarg2_, long jarg3, ArPose jarg3_);
  public final static native double ArTransform_getX(long jarg1, ArTransform jarg1_);
  public final static native double ArTransform_getY(long jarg1, ArTransform jarg1_);
  public final static native double ArTransform_getTh(long jarg1, ArTransform jarg1_);
  public final static native void ArTransform_setTransformLowLevel(long jarg1, ArTransform jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native long new_ArTrimbleGPS();
  public final static native void delete_ArTrimbleGPS(long jarg1);
  public final static native boolean ArTrimbleGPS_sendTSIPCommand(long jarg1, ArTrimbleGPS jarg1_, char jarg2, String jarg3, long jarg4);
  public final static native long new_ArUrg__SWIG_0(int jarg1, String jarg2);
  public final static native long new_ArUrg__SWIG_1(int jarg1);
  public final static native void delete_ArUrg(long jarg1);
  public final static native boolean ArUrg_blockingConnect(long jarg1, ArUrg jarg1_);
  public final static native boolean ArUrg_asyncConnect(long jarg1, ArUrg jarg1_);
  public final static native boolean ArUrg_disconnect(long jarg1, ArUrg jarg1_);
  public final static native boolean ArUrg_isConnected(long jarg1, ArUrg jarg1_);
  public final static native boolean ArUrg_isTryingToConnect(long jarg1, ArUrg jarg1_);
  public final static native void ArUrg_log(long jarg1, ArUrg jarg1_);
  public final static native int MAX_RESPONSE_BYTES_get();
  public final static native int BIDIRECTIONAL_TIMEOUT_get();
  public final static native int UNIDIRECTIONAL_TIMEOUT_get();
  public final static native int AUTO_UPDATE_TIME_get();
  public final static native double TOLERANCE_get();
  public final static native int ArVCC4Commands_DELIM_get();
  public final static native int ArVCC4Commands_DEVICEID_get();
  public final static native int ArVCC4Commands_PANSLEW_get();
  public final static native int ArVCC4Commands_TILTSLEW_get();
  public final static native int ArVCC4Commands_STOP_get();
  public final static native int ArVCC4Commands_INIT_get();
  public final static native int ArVCC4Commands_SLEWREQ_get();
  public final static native int ArVCC4Commands_ANGLEREQ_get();
  public final static native int ArVCC4Commands_PANTILT_get();
  public final static native int ArVCC4Commands_SETRANGE_get();
  public final static native int ArVCC4Commands_PANTILTREQ_get();
  public final static native int ArVCC4Commands_INFRARED_get();
  public final static native int ArVCC4Commands_PRODUCTNAME_get();
  public final static native int ArVCC4Commands_LEDCONTROL_get();
  public final static native int ArVCC4Commands_CONTROL_get();
  public final static native int ArVCC4Commands_POWER_get();
  public final static native int ArVCC4Commands_AUTOFOCUS_get();
  public final static native int ArVCC4Commands_ZOOMSTOP_get();
  public final static native int ArVCC4Commands_GAIN_get();
  public final static native int ArVCC4Commands_FOCUS_get();
  public final static native int ArVCC4Commands_ZOOM_get();
  public final static native int ArVCC4Commands_ZOOMREQ_get();
  public final static native int ArVCC4Commands_IRCUTFILTER_get();
  public final static native int ArVCC4Commands_DIGITALZOOM_get();
  public final static native int ArVCC4Commands_FOOTER_get();
  public final static native int ArVCC4Commands_RESPONSE_get();
  public final static native int ArVCC4Commands_HEADER_get();
  public final static native long new_ArVCC4Commands();
  public final static native void delete_ArVCC4Commands(long jarg1);
  public final static native long new_ArVCC4Packet__SWIG_0(int jarg1);
  public final static native long new_ArVCC4Packet__SWIG_1();
  public final static native void delete_ArVCC4Packet(long jarg1);
  public final static native void ArVCC4Packet_byte2ToBuf(long jarg1, ArVCC4Packet jarg1_, int jarg2);
  public final static native void ArVCC4Packet_finalizePacket(long jarg1, ArVCC4Packet jarg1_);
  public final static native long new_ArVCC4__SWIG_0(long jarg1, ArRobot jarg1_, boolean jarg2, int jarg3, boolean jarg4, boolean jarg5, int jarg6);
  public final static native long new_ArVCC4__SWIG_1(long jarg1, ArRobot jarg1_, boolean jarg2, int jarg3, boolean jarg4, boolean jarg5);
  public final static native long new_ArVCC4__SWIG_2(long jarg1, ArRobot jarg1_, boolean jarg2, int jarg3, boolean jarg4);
  public final static native long new_ArVCC4__SWIG_3(long jarg1, ArRobot jarg1_, boolean jarg2, int jarg3);
  public final static native long new_ArVCC4__SWIG_4(long jarg1, ArRobot jarg1_, boolean jarg2);
  public final static native long new_ArVCC4__SWIG_5(long jarg1, ArRobot jarg1_);
  public final static native void delete_ArVCC4(long jarg1);
  public final static native boolean ArVCC4_power(long jarg1, ArVCC4 jarg1_, boolean jarg2);
  public final static native boolean ArVCC4_getPower(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_init(long jarg1, ArVCC4 jarg1_);
  public final static native void ArVCC4_reset(long jarg1, ArVCC4 jarg1_);
  public final static native String ArVCC4_getTypeName(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_isInitted(long jarg1, ArVCC4 jarg1_);
  public final static native void ArVCC4_connectHandler(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_packetHandler(long jarg1, ArVCC4 jarg1_, long jarg2, ArBasePacket jarg2_);
  public final static native void ArVCC4_getRealPanTilt(long jarg1, ArVCC4 jarg1_);
  public final static native void ArVCC4_getRealZoomPos(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_canZoom(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_zoom(long jarg1, ArVCC4 jarg1_, int jarg2);
  public final static native boolean ArVCC4_digitalZoom(long jarg1, ArVCC4 jarg1_, int jarg2);
  public final static native void ArVCC4_addErrorCB(long jarg1, ArVCC4 jarg1_, long jarg2, ArFunctor jarg2_, int jarg3);
  public final static native void ArVCC4_remErrorCB(long jarg1, ArVCC4 jarg1_, long jarg2, ArFunctor jarg2_);
  public final static native boolean ArVCC4_haltPanTilt(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_haltZoom(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_panSlew(long jarg1, ArVCC4 jarg1_, double jarg2);
  public final static native boolean ArVCC4_tiltSlew(long jarg1, ArVCC4 jarg1_, double jarg2);
  public final static native boolean ArVCC4_canSetPanTiltSlew(long jarg1, ArVCC4 jarg1_);
  public final static native void ArVCC4_preparePacket(long jarg1, ArVCC4 jarg1_, long jarg2, ArVCC4Packet jarg2_);
  public final static native int ArVCC4_getZoom(long jarg1, ArVCC4 jarg1_);
  public final static native double ArVCC4_getDigitalZoom(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_canGetRealPanTilt(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_canGetRealZoom(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_canSetFocus(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_autoFocus(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_manualFocus(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_focusNear(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_focusFar(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_setAutoFocus__SWIG_0(long jarg1, ArVCC4 jarg1_, boolean jarg2);
  public final static native boolean ArVCC4_setAutoFocus__SWIG_1(long jarg1, ArVCC4 jarg1_);
  public final static native double ArVCC4_getPanSlew(long jarg1, ArVCC4 jarg1_);
  public final static native double ArVCC4_getMaxPanSlew(long jarg1, ArVCC4 jarg1_);
  public final static native double ArVCC4_getMinPanSlew(long jarg1, ArVCC4 jarg1_);
  public final static native double ArVCC4_getTiltSlew(long jarg1, ArVCC4 jarg1_);
  public final static native double ArVCC4_getMaxTiltSlew(long jarg1, ArVCC4 jarg1_);
  public final static native double ArVCC4_getMinTiltSlew(long jarg1, ArVCC4 jarg1_);
  public final static native int ArVCC4_getMaxZoom(long jarg1, ArVCC4 jarg1_);
  public final static native int ArVCC4_getMinZoom(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_canGetFOV(long jarg1, ArVCC4 jarg1_);
  public final static native double ArVCC4_getFOVAtMaxZoom(long jarg1, ArVCC4 jarg1_);
  public final static native double ArVCC4_getFOVAtMinZoom(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_wasError(long jarg1, ArVCC4 jarg1_);
  public final static native void ArVCC4_enableAutoUpdate(long jarg1, ArVCC4 jarg1_);
  public final static native void ArVCC4_disableAutoUpdate(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_getAutoUpdate(long jarg1, ArVCC4 jarg1_);
  public final static native void ArVCC4_setLEDControlMode(long jarg1, ArVCC4 jarg1_, int jarg2);
  public final static native void ArVCC4_enableIRLEDs(long jarg1, ArVCC4 jarg1_);
  public final static native void ArVCC4_disableIRLEDs(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_getIRLEDsEnabled(long jarg1, ArVCC4 jarg1_);
  public final static native void ArVCC4_enableIRFilterMode(long jarg1, ArVCC4 jarg1_);
  public final static native void ArVCC4_disableIRFilterMode(long jarg1, ArVCC4 jarg1_);
  public final static native boolean ArVCC4_getIRFilterModeEnabled(long jarg1, ArVCC4 jarg1_);
  public final static native long new_ArVersalogicIO__SWIG_0(String jarg1);
  public final static native long new_ArVersalogicIO__SWIG_1();
  public final static native void delete_ArVersalogicIO(long jarg1);
  public final static native boolean ArVersalogicIO_closeIO(long jarg1, ArVersalogicIO jarg1_);
  public final static native boolean ArVersalogicIO_isEnabled(long jarg1, ArVersalogicIO jarg1_);
  public final static native boolean ArVersalogicIO_isAnalogSupported(long jarg1, ArVersalogicIO jarg1_);
  public final static native boolean ArVersalogicIO_getAnalogValue(long jarg1, ArVersalogicIO jarg1_, int jarg2, long jarg3);
  public final static native boolean ArVersalogicIO_getAnalogValueRaw(long jarg1, ArVersalogicIO jarg1_, int jarg2, long jarg3);
  public final static native int ArVersalogicIO_getDigitalBankDirection(long jarg1, ArVersalogicIO jarg1_, int jarg2);
  public final static native boolean ArVersalogicIO_setDigitalBankDirection(long jarg1, ArVersalogicIO jarg1_, int jarg2, int jarg3);
  public final static native boolean ArVersalogicIO_getDigitalBankInputs(long jarg1, ArVersalogicIO jarg1_, int jarg2, long jarg3);
  public final static native boolean ArVersalogicIO_getDigitalBankOutputs(long jarg1, ArVersalogicIO jarg1_, int jarg2, long jarg3);
  public final static native boolean ArVersalogicIO_setDigitalBankOutputs(long jarg1, ArVersalogicIO jarg1_, int jarg2, short jarg3);
  public final static native boolean ArVersalogicIO_getSpecialControlRegister(long jarg1, ArVersalogicIO jarg1_, long jarg2);
  public final static native int ArVersalogicIO_lock(long jarg1, ArVersalogicIO jarg1_);
  public final static native int ArVersalogicIO_unlock(long jarg1, ArVersalogicIO jarg1_);
  public final static native int ArVersalogicIO_tryLock(long jarg1, ArVersalogicIO jarg1_);
  public final static native long new_ArMTXIO__SWIG_0(String jarg1);
  public final static native long new_ArMTXIO__SWIG_1();
  public final static native void delete_ArMTXIO(long jarg1);
  public final static native boolean ArMTXIO_closeIO(long jarg1, ArMTXIO jarg1_);
  public final static native boolean ArMTXIO_isEnabled(long jarg1, ArMTXIO jarg1_);
  public final static native boolean ArMTXIO_isAnalogSupported(long jarg1, ArMTXIO jarg1_);
  public final static native boolean ArMTXIO_getAnalogValue__SWIG_0(long jarg1, ArMTXIO jarg1_, int jarg2, long jarg3);
  public final static native boolean ArMTXIO_getAnalogValueRaw__SWIG_0(long jarg1, ArMTXIO jarg1_, int jarg2, long jarg3);
  public final static native int ArMTXIO_getDigitalBankDirection(long jarg1, ArMTXIO jarg1_, int jarg2);
  public final static native boolean ArMTXIO_setDigitalBankOutputs(long jarg1, ArMTXIO jarg1_, int jarg2, short jarg3);
  public final static native boolean ArMTXIO_getDigitalBankInputs(long jarg1, ArMTXIO jarg1_, int jarg2, long jarg3);
  public final static native boolean ArMTXIO_getDigitalBankOutputs(long jarg1, ArMTXIO jarg1_, int jarg2, long jarg3);
  public final static native boolean ArMTXIO_setDigitalOutputBit(long jarg1, ArMTXIO jarg1_, int jarg2, int jarg3);
  public final static native boolean ArMTXIO_getDigitalInputBit(long jarg1, ArMTXIO jarg1_, int jarg2, int jarg3);
  public final static native boolean ArMTXIO_setPeripheralPowerBankOutputs(long jarg1, ArMTXIO jarg1_, int jarg2, short jarg3);
  public final static native boolean ArMTXIO_getPeripheralPowerBankOutputs(long jarg1, ArMTXIO jarg1_, int jarg2, long jarg3);
  public final static native boolean ArMTXIO_setPowerOutput(long jarg1, ArMTXIO jarg1_, int jarg2, int jarg3, boolean jarg4);
  public final static native int ArMTXIO_lock(long jarg1, ArMTXIO jarg1_);
  public final static native int ArMTXIO_unlock(long jarg1, ArMTXIO jarg1_);
  public final static native int ArMTXIO_tryLock(long jarg1, ArMTXIO jarg1_);
  public final static native short ArMTXIO_getFirmwareRevision(long jarg1, ArMTXIO jarg1_);
  public final static native short ArMTXIO_getFirmwareVersion(long jarg1, ArMTXIO jarg1_);
  public final static native short ArMTXIO_getCompatibilityCode(long jarg1, ArMTXIO jarg1_);
  public final static native short ArMTXIO_getFPGAType(long jarg1, ArMTXIO jarg1_);
  public final static native boolean ArMTXIO_getDigitalIOInputMon1(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getDigitalIOInputMon2(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getDigitalIOOutputMon1(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getDigitalIOOutputMon2(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getLightPole(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_setLightPole(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getLPCTimeUSec(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native long ArMTXIO_getLPCTimeUSecCB(long jarg1, ArMTXIO jarg1_);
  public final static native boolean ArMTXIO_setSemaphore1(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getSemaphore1(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_setSemaphore2(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getSemaphore2(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_setSemaphore3(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getSemaphore3(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_setSemaphore4(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getSemaphore4(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getBumperInput(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getPowerStatus1(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getPowerStatus2(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getLIDARSafety(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getESTOPStatus1(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getESTOPStatus2(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getESTOPStatus3(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getESTOPStatus4(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_compareESTOPStatus4HighNibbleAgainst(long jarg1, ArMTXIO jarg1_, int jarg2);
  public final static native boolean ArMTXIO_getDigitalOutputControl1(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_setDigitalOutputControl1(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getDigitalOutputControl2(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_setDigitalOutputControl2(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getPeripheralPower1(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_setPeripheralPower1(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getPeripheralPower2(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_setPeripheralPower2(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getPeripheralPower3(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_setPeripheralPower3(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getMotionPowerStatus(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getLIDARControl(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_setLIDARControl(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getAnalogIOBlock1(long jarg1, ArMTXIO jarg1_, int jarg2, long jarg3);
  public final static native boolean ArMTXIO_getAnalogIOBlock2(long jarg1, ArMTXIO jarg1_, int jarg2, long jarg3);
  public final static native boolean ArMTXIO_setAnalogIOBlock2(long jarg1, ArMTXIO jarg1_, int jarg2, long jarg3);
  public final static native boolean ArMTXIO_getAnalogValue__SWIG_1(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native boolean ArMTXIO_getAnalogValueRaw__SWIG_1(long jarg1, ArMTXIO jarg1_, long jarg2);
  public final static native void Aria_init__SWIG_0(int jarg1, boolean jarg2, boolean jarg3);
  public final static native void Aria_init__SWIG_1(int jarg1, boolean jarg2);
  public final static native void Aria_init__SWIG_2(int jarg1);
  public final static native void Aria_init__SWIG_3();
  public final static native void Aria_uninit();
  public final static native void Aria_addInitCallBack(long jarg1, ArFunctor jarg1_, int jarg2);
  public final static native void Aria_addUninitCallBack(long jarg1, ArFunctor jarg1_, int jarg2);
  public final static native void Aria_shutdown();
  public final static native void Aria_exit__SWIG_0(int jarg1);
  public final static native void Aria_exit__SWIG_1();
  public final static native boolean Aria_getRunning();
  public final static native void Aria_setDirectory(String jarg1);
  public final static native String Aria_getDirectory();
  public final static native boolean Aria_parseArgs();
  public final static native void Aria_logOptions();
  public final static native void Aria_setKeyHandler(long jarg1, ArKeyHandler jarg1_);
  public final static native long Aria_getKeyHandler();
  public final static native void Aria_setJoyHandler(long jarg1, ArJoyHandler jarg1_);
  public final static native long Aria_getJoyHandler();
  public final static native void Aria_addExitCallback__SWIG_0(long jarg1, ArFunctor jarg1_, int jarg2);
  public final static native void Aria_addExitCallback__SWIG_1(long jarg1, ArFunctor jarg1_);
  public final static native void Aria_remExitCallback(long jarg1, ArFunctor jarg1_);
  public final static native void Aria_setExitCallbacksLogLevel(int jarg1);
  public final static native void Aria_exitOld__SWIG_0(int jarg1);
  public final static native void Aria_exitOld__SWIG_1();
  public final static native void Aria_signalHandlerCB(int jarg1);
  public final static native void Aria_callExitCallbacks();
  public final static native void Aria_addParseArgsCB__SWIG_0(long jarg1, ArRetFunctor_Bool jarg1_, int jarg2);
  public final static native void Aria_addParseArgsCB__SWIG_1(long jarg1, ArRetFunctor_Bool jarg1_);
  public final static native void Aria_setParseArgLogLevel(int jarg1);
  public final static native void Aria_addLogOptionsCB__SWIG_0(long jarg1, ArFunctor jarg1_, int jarg2);
  public final static native void Aria_addLogOptionsCB__SWIG_1(long jarg1, ArFunctor jarg1_);
  public final static native boolean Aria_deviceConnectionAddCreator(String jarg1, long jarg2);
  public final static native String Aria_deviceConnectionGetTypes();
  public final static native String Aria_deviceConnectionGetChoices();
  public final static native long Aria_deviceConnectionCreate__SWIG_0(String jarg1, String jarg2, String jarg3, String jarg4);
  public final static native long Aria_deviceConnectionCreate__SWIG_1(String jarg1, String jarg2, String jarg3);
  public final static native void Aria_setRobotJoyHandler(long jarg1, ArRobotJoyHandler jarg1_);
  public final static native long Aria_getRobotJoyHandler();
  public final static native long Aria_getConfig();
  public final static native long Aria_getInfoGroup();
  public final static native void Aria_addRobot(long jarg1, ArRobot jarg1_);
  public final static native void Aria_delRobot(long jarg1, ArRobot jarg1_);
  public final static native long Aria_findRobot(String jarg1);
  public final static native long Aria_getRobotList();
  public final static native int Aria_getMaxNumLasers();
  public final static native void Aria_setMaxNumLasers(int jarg1);
  public final static native int Aria_getMaxNumSonarBoards();
  public final static native void Aria_setMaxNumSonarBoards(int jarg1);
  public final static native int Aria_getMaxNumBatteries();
  public final static native void Aria_setMaxNumBatteries(int jarg1);
  public final static native int Aria_getMaxNumLCDs();
  public final static native void Aria_setMaxNumLCDs(int jarg1);
  public final static native long Aria_laserCreate__SWIG_0(String jarg1, int jarg2, String jarg3);
  public final static native long Aria_laserCreate__SWIG_1(String jarg1, int jarg2);
  public final static native boolean Aria_laserAddCreator(String jarg1, long jarg2);
  public final static native String Aria_laserGetTypes();
  public final static native String Aria_laserGetChoices();
  public final static native long Aria_batteryCreate__SWIG_0(String jarg1, int jarg2, String jarg3);
  public final static native long Aria_batteryCreate__SWIG_1(String jarg1, int jarg2);
  public final static native boolean Aria_batteryAddCreator(String jarg1, long jarg2);
  public final static native String Aria_batteryGetTypes();
  public final static native String Aria_batteryGetChoices();
  public final static native long Aria_lcdCreate__SWIG_0(String jarg1, int jarg2, String jarg3);
  public final static native long Aria_lcdCreate__SWIG_1(String jarg1, int jarg2);
  public final static native boolean Aria_lcdAddCreator(String jarg1, long jarg2);
  public final static native String Aria_lcdGetTypes();
  public final static native String Aria_lcdGetChoices();
  public final static native long Aria_sonarCreate__SWIG_0(String jarg1, int jarg2, String jarg3);
  public final static native long Aria_sonarCreate__SWIG_1(String jarg1, int jarg2);
  public final static native boolean Aria_sonarAddCreator(String jarg1, long jarg2);
  public final static native String Aria_sonarGetTypes();
  public final static native String Aria_sonarGetChoices();
  public final static native void Aria_setMaxNumVideoDevices(long jarg1);
  public final static native long Aria_getMaxNumVideoDevices();
  public final static native void Aria_setMaxNumPTZs(long jarg1);
  public final static native long Aria_getMaxNumPTZs();
  public final static native String Aria_getIdentifier();
  public final static native void Aria_setIdentifier(String jarg1);
  public final static native long new_Aria();
  public final static native void delete_Aria(long jarg1);
  public final static native long new_ArConfigArg_Bool__SWIG_0(String jarg1, boolean jarg2, String jarg3);
  public final static native long new_ArConfigArg_Bool__SWIG_1(String jarg1, boolean jarg2);
  public final static native void delete_ArConfigArg_Bool(long jarg1);
  public final static native long new_ArConfigArg_Int__SWIG_0(String jarg1, int jarg2, String jarg3, int jarg4, int jarg5);
  public final static native long new_ArConfigArg_Int__SWIG_1(String jarg1, int jarg2, String jarg3, int jarg4);
  public final static native long new_ArConfigArg_Int__SWIG_2(String jarg1, int jarg2, String jarg3);
  public final static native long new_ArConfigArg_Int__SWIG_3(String jarg1, int jarg2);
  public final static native void delete_ArConfigArg_Int(long jarg1);
  public final static native long new_ArConfigArg_Double__SWIG_0(String jarg1, double jarg2, String jarg3, double jarg4, double jarg5);
  public final static native long new_ArConfigArg_Double__SWIG_1(String jarg1, double jarg2, String jarg3, double jarg4);
  public final static native long new_ArConfigArg_Double__SWIG_2(String jarg1, double jarg2, String jarg3);
  public final static native long new_ArConfigArg_Double__SWIG_3(String jarg1, double jarg2);
  public final static native void delete_ArConfigArg_Double(long jarg1);
  public final static native long new_ArConfigArg_String(String jarg1, String jarg2, String jarg3);
  public final static native void delete_ArConfigArg_String(long jarg1);
  public final static native void ArJoyVec3f_x_set(long jarg1, ArJoyVec3f jarg1_, double jarg2);
  public final static native double ArJoyVec3f_x_get(long jarg1, ArJoyVec3f jarg1_);
  public final static native void ArJoyVec3f_y_set(long jarg1, ArJoyVec3f jarg1_, double jarg2);
  public final static native double ArJoyVec3f_y_get(long jarg1, ArJoyVec3f jarg1_);
  public final static native void ArJoyVec3f_z_set(long jarg1, ArJoyVec3f jarg1_, double jarg2);
  public final static native double ArJoyVec3f_z_get(long jarg1, ArJoyVec3f jarg1_);
  public final static native long new_ArJoyVec3f();
  public final static native void delete_ArJoyVec3f(long jarg1);
  public final static native void ArJoyVec3i_x_set(long jarg1, ArJoyVec3i jarg1_, int jarg2);
  public final static native int ArJoyVec3i_x_get(long jarg1, ArJoyVec3i jarg1_);
  public final static native void ArJoyVec3i_y_set(long jarg1, ArJoyVec3i jarg1_, int jarg2);
  public final static native int ArJoyVec3i_y_get(long jarg1, ArJoyVec3i jarg1_);
  public final static native void ArJoyVec3i_z_set(long jarg1, ArJoyVec3i jarg1_, int jarg2);
  public final static native int ArJoyVec3i_z_get(long jarg1, ArJoyVec3i jarg1_);
  public final static native long new_ArJoyVec3i();
  public final static native void delete_ArJoyVec3i(long jarg1);
  public final static native long SWIGArPoseWithTimeUpcast(long jarg1);
  public final static native long SWIGArRangeDeviceThreadedUpcast(long jarg1);
  public final static native long SWIGArLaserUpcast(long jarg1);
  public final static native long SWIGArRetFunctor_VoidPUpcast(long jarg1);
  public final static native long SWIGArRetFunctor_BoolUpcast(long jarg1);
  public final static native long SWIGArFunctor1_CStringUpcast(long jarg1);
  public final static native long SWIGArFunctor1_IntUpcast(long jarg1);
  public final static native long SWIGArFunctor1_ArRobotPacketPUpcast(long jarg1);
  public final static native long SWIGArRetFunctor_IntUpcast(long jarg1);
  public final static native long SWIGArRetFunctor_DoubleUpcast(long jarg1);
  public final static native long SWIGArRetFunctor_UnsignedIntUpcast(long jarg1);
  public final static native long SWIGArRetFunctor1_Double_ArPoseWithTimeUpcast(long jarg1);
  public final static native long SWIGArRetFunctor1_Bool_ArRobotPacketPUpcast(long jarg1);
  public final static native long SWIGArRetFunctor1_Bool_ArgumentBuilderUpcast(long jarg1);
  public final static native long SWIGArRetFunctor1_Bool_ArgumentBuilderPUpcast(long jarg1);
  public final static native long SWIGArRetFunctor1_VoidP_VoidPUpcast(long jarg1);
  public final static native long SWIGArAMPTUPacketUpcast(long jarg1);
  public final static native long SWIGArAMPTUUpcast(long jarg1);
  public final static native long SWIGArASyncTaskUpcast(long jarg1);
  public final static native long SWIGArActionAvoidFrontUpcast(long jarg1);
  public final static native long SWIGArActionAvoidSideUpcast(long jarg1);
  public final static native long SWIGArActionBumpersUpcast(long jarg1);
  public final static native long SWIGArActionColorFollowUpcast(long jarg1);
  public final static native long SWIGArActionConstantVelocityUpcast(long jarg1);
  public final static native long SWIGArActionDeceleratingLimiterUpcast(long jarg1);
  public final static native long SWIGArActionDriveDistanceUpcast(long jarg1);
  public final static native long SWIGArActionGotoUpcast(long jarg1);
  public final static native long SWIGArActionGotoStraightUpcast(long jarg1);
  public final static native long SWIGArActionGroupInputUpcast(long jarg1);
  public final static native long SWIGArActionGroupStopUpcast(long jarg1);
  public final static native long SWIGArActionGroupTeleopUpcast(long jarg1);
  public final static native long SWIGArActionGroupUnguardedTeleopUpcast(long jarg1);
  public final static native long SWIGArActionGroupWanderUpcast(long jarg1);
  public final static native long SWIGArActionGroupColorFollowUpcast(long jarg1);
  public final static native long SWIGArActionGroupRatioDriveUpcast(long jarg1);
  public final static native long SWIGArActionGroupRatioDriveUnsafeUpcast(long jarg1);
  public final static native long SWIGArActionIRsUpcast(long jarg1);
  public final static native long SWIGArActionInputUpcast(long jarg1);
  public final static native long SWIGArActionJoydriveUpcast(long jarg1);
  public final static native long SWIGArActionKeydriveUpcast(long jarg1);
  public final static native long SWIGArActionLimiterBackwardsUpcast(long jarg1);
  public final static native long SWIGArActionLimiterForwardsUpcast(long jarg1);
  public final static native long SWIGArActionLimiterTableSensorUpcast(long jarg1);
  public final static native long SWIGArActionMovementParametersUpcast(long jarg1);
  public final static native long SWIGArActionRatioInputUpcast(long jarg1);
  public final static native long SWIGArActionRobotJoydriveUpcast(long jarg1);
  public final static native long SWIGArActionStallRecoverUpcast(long jarg1);
  public final static native long SWIGArActionStopUpcast(long jarg1);
  public final static native long SWIGArActionTriangleDriveToUpcast(long jarg1);
  public final static native long SWIGArActionTurnUpcast(long jarg1);
  public final static native long SWIGArBumpersUpcast(long jarg1);
  public final static native long SWIGArCameraParameterSourceUpcast(long jarg1);
  public final static native long SWIGArDPPTUPacketUpcast(long jarg1);
  public final static native long SWIGArDPPTUUpcast(long jarg1);
  public final static native long SWIGArForbiddenRangeDeviceUpcast(long jarg1);
  public final static native long SWIGArFunctorASyncTaskUpcast(long jarg1);
  public final static native long SWIGArSimulatedGPSUpcast(long jarg1);
  public final static native long SWIGArECEFCoordsUpcast(long jarg1);
  public final static native long SWIGArLLACoordsUpcast(long jarg1);
  public final static native long SWIGArENUCoordsUpcast(long jarg1);
  public final static native long SWIGArMapGPSCoordsUpcast(long jarg1);
  public final static native long SWIGArIRsUpcast(long jarg1);
  public final static native long SWIGArIrrfDeviceUpcast(long jarg1);
  public final static native long SWIGArLaserFilterUpcast(long jarg1);
  public final static native long SWIGArLaserReflectorDeviceUpcast(long jarg1);
  public final static native long SWIGArLineFinderSegmentUpcast(long jarg1);
  public final static native long SWIGArLogFileConnectionUpcast(long jarg1);
  public final static native long SWIGArMapInterfaceUpcast(long jarg1);
  public final static native long SWIGArMapUpcast(long jarg1);
  public final static native long SWIGArMapScanUpcast(long jarg1);
  public final static native long SWIGArMapObjectsUpcast(long jarg1);
  public final static native long SWIGArMapInfoUpcast(long jarg1);
  public final static native long SWIGArMapSupplementUpcast(long jarg1);
  public final static native long SWIGArMapSimpleUpcast(long jarg1);
  public final static native long SWIGArModeTeleopUpcast(long jarg1);
  public final static native long SWIGArModeUnguardedTeleopUpcast(long jarg1);
  public final static native long SWIGArModeWanderUpcast(long jarg1);
  public final static native long SWIGArModeGripperUpcast(long jarg1);
  public final static native long SWIGArModeCameraUpcast(long jarg1);
  public final static native long SWIGArModeSonarUpcast(long jarg1);
  public final static native long SWIGArModeBumpsUpcast(long jarg1);
  public final static native long SWIGArModePositionUpcast(long jarg1);
  public final static native long SWIGArModeIOUpcast(long jarg1);
  public final static native long SWIGArModeLaserUpcast(long jarg1);
  public final static native long SWIGArModeActsUpcast(long jarg1);
  public final static native long SWIGArModeCommandUpcast(long jarg1);
  public final static native long SWIGArModeTCM2Upcast(long jarg1);
  public final static native long SWIGArModeConfigUpcast(long jarg1);
  public final static native long SWIGArModeRobotStatusUpcast(long jarg1);
  public final static native long SWIGArNovatelGPSUpcast(long jarg1);
  public final static native long SWIGArNovatelSPANUpcast(long jarg1);
  public final static native long SWIGArPriorityResolverUpcast(long jarg1);
  public final static native long SWIGArRecurrentTaskUpcast(long jarg1);
  public final static native long SWIGArRobotPacketUpcast(long jarg1);
  public final static native long SWIGArRobotParamsUpcast(long jarg1);
  public final static native long SWIGArRVisionPacketUpcast(long jarg1);
  public final static native long SWIGArRVisionPTZUpcast(long jarg1);
  public final static native long SWIGArSerialConnectionUpcast(long jarg1);
  public final static native long SWIGArSignalHandlerUpcast(long jarg1);
  public final static native long SWIGArSimulatedLaserUpcast(long jarg1);
  public final static native long SWIGArSonarDeviceUpcast(long jarg1);
  public final static native long SWIGArSonyPacketUpcast(long jarg1);
  public final static native long SWIGArSonyPTZUpcast(long jarg1);
  public final static native long SWIGArSoundsQueueUpcast(long jarg1);
  public final static native long SWIGArSyncLoopUpcast(long jarg1);
  public final static native long SWIGArTCMCompassDirectUpcast(long jarg1);
  public final static native long SWIGArTCMCompassRobotUpcast(long jarg1);
  public final static native long SWIGArTcpConnectionUpcast(long jarg1);
  public final static native long SWIGArTrimbleGPSUpcast(long jarg1);
  public final static native long SWIGArUrgUpcast(long jarg1);
  public final static native long SWIGArVCC4PacketUpcast(long jarg1);
  public final static native long SWIGArVCC4Upcast(long jarg1);
  public final static native long SWIGArConfigArg_BoolUpcast(long jarg1);
  public final static native long SWIGArConfigArg_IntUpcast(long jarg1);
  public final static native long SWIGArConfigArg_DoubleUpcast(long jarg1);
  public final static native long SWIGArConfigArg_StringUpcast(long jarg1);

  public static void SwigDirector_ArFunctor_invoke(ArFunctor self) {
    self.invoke();
  }
  public static String SwigDirector_ArFunctor_getName(ArFunctor self) {
    return self.getName();
  }
  public static void SwigDirector_ArFunctor_setName(ArFunctor self, String name) {
    self.setName(name);
  }
  public static void SwigDirector_ArRetFunctor_VoidP_invoke(ArRetFunctor_VoidP self) {
    self.invoke();
  }
  public static String SwigDirector_ArRetFunctor_VoidP_getName(ArRetFunctor_VoidP self) {
    return self.getName();
  }
  public static void SwigDirector_ArRetFunctor_VoidP_setName(ArRetFunctor_VoidP self, String name) {
    self.setName(name);
  }
  public static long SwigDirector_ArRetFunctor_VoidP_invokeR(ArRetFunctor_VoidP self) {
    return SWIGTYPE_p_void.getCPtr(self.invokeR());
  }
  public static void SwigDirector_ArRetFunctor_Bool_invoke(ArRetFunctor_Bool self) {
    self.invoke();
  }
  public static String SwigDirector_ArRetFunctor_Bool_getName(ArRetFunctor_Bool self) {
    return self.getName();
  }
  public static void SwigDirector_ArRetFunctor_Bool_setName(ArRetFunctor_Bool self, String name) {
    self.setName(name);
  }
  public static boolean SwigDirector_ArRetFunctor_Bool_invokeR(ArRetFunctor_Bool self) {
    return self.invokeR();
  }
  public static void SwigDirector_ArFunctor1_ArRobotPacketP_invoke__SWIG_0(ArFunctor1_ArRobotPacketP self) {
    self.invoke();
  }
  public static String SwigDirector_ArFunctor1_ArRobotPacketP_getName(ArFunctor1_ArRobotPacketP self) {
    return self.getName();
  }
  public static void SwigDirector_ArFunctor1_ArRobotPacketP_setName(ArFunctor1_ArRobotPacketP self, String name) {
    self.setName(name);
  }
  public static void SwigDirector_ArFunctor1_ArRobotPacketP_invoke__SWIG_1(ArFunctor1_ArRobotPacketP self, long p1) {
    self.invoke((p1 == 0) ? null : new ArRobotPacket(p1, false));
  }
  public static void SwigDirector_ArRetFunctor_Int_invoke(ArRetFunctor_Int self) {
    self.invoke();
  }
  public static String SwigDirector_ArRetFunctor_Int_getName(ArRetFunctor_Int self) {
    return self.getName();
  }
  public static void SwigDirector_ArRetFunctor_Int_setName(ArRetFunctor_Int self, String name) {
    self.setName(name);
  }
  public static int SwigDirector_ArRetFunctor_Int_invokeR(ArRetFunctor_Int self) {
    return self.invokeR();
  }
  public static void SwigDirector_ArRetFunctor_Double_invoke(ArRetFunctor_Double self) {
    self.invoke();
  }
  public static String SwigDirector_ArRetFunctor_Double_getName(ArRetFunctor_Double self) {
    return self.getName();
  }
  public static void SwigDirector_ArRetFunctor_Double_setName(ArRetFunctor_Double self, String name) {
    self.setName(name);
  }
  public static double SwigDirector_ArRetFunctor_Double_invokeR(ArRetFunctor_Double self) {
    return self.invokeR();
  }
  public static void SwigDirector_ArRetFunctor_UnsignedInt_invoke(ArRetFunctor_UnsignedInt self) {
    self.invoke();
  }
  public static String SwigDirector_ArRetFunctor_UnsignedInt_getName(ArRetFunctor_UnsignedInt self) {
    return self.getName();
  }
  public static void SwigDirector_ArRetFunctor_UnsignedInt_setName(ArRetFunctor_UnsignedInt self, String name) {
    self.setName(name);
  }
  public static long SwigDirector_ArRetFunctor_UnsignedInt_invokeR(ArRetFunctor_UnsignedInt self) {
    return self.invokeR();
  }
  public static void SwigDirector_ArRetFunctor1_Double_ArPoseWithTime_invoke(ArRetFunctor1_Double_ArPoseWithTime self) {
    self.invoke();
  }
  public static String SwigDirector_ArRetFunctor1_Double_ArPoseWithTime_getName(ArRetFunctor1_Double_ArPoseWithTime self) {
    return self.getName();
  }
  public static void SwigDirector_ArRetFunctor1_Double_ArPoseWithTime_setName(ArRetFunctor1_Double_ArPoseWithTime self, String name) {
    self.setName(name);
  }
  public static double SwigDirector_ArRetFunctor1_Double_ArPoseWithTime_invokeR__SWIG_0(ArRetFunctor1_Double_ArPoseWithTime self) {
    return self.invokeR();
  }
  public static double SwigDirector_ArRetFunctor1_Double_ArPoseWithTime_invokeR__SWIG_1(ArRetFunctor1_Double_ArPoseWithTime self, long p1) {
    return self.invokeR(new ArPoseWithTime(p1, false));
  }
  public static void SwigDirector_ArRetFunctor1_Bool_ArRobotPacketP_invoke(ArRetFunctor1_Bool_ArRobotPacketP self) {
    self.invoke();
  }
  public static String SwigDirector_ArRetFunctor1_Bool_ArRobotPacketP_getName(ArRetFunctor1_Bool_ArRobotPacketP self) {
    return self.getName();
  }
  public static void SwigDirector_ArRetFunctor1_Bool_ArRobotPacketP_setName(ArRetFunctor1_Bool_ArRobotPacketP self, String name) {
    self.setName(name);
  }
  public static boolean SwigDirector_ArRetFunctor1_Bool_ArRobotPacketP_invokeR__SWIG_0(ArRetFunctor1_Bool_ArRobotPacketP self) {
    return self.invokeR();
  }
  public static boolean SwigDirector_ArRetFunctor1_Bool_ArRobotPacketP_invokeR__SWIG_1(ArRetFunctor1_Bool_ArRobotPacketP self, long p1) {
    return self.invokeR((p1 == 0) ? null : new ArRobotPacket(p1, false));
  }
  public static void SwigDirector_ArRetFunctor1_Bool_ArgumentBuilder_invoke(ArRetFunctor1_Bool_ArgumentBuilder self) {
    self.invoke();
  }
  public static String SwigDirector_ArRetFunctor1_Bool_ArgumentBuilder_getName(ArRetFunctor1_Bool_ArgumentBuilder self) {
    return self.getName();
  }
  public static void SwigDirector_ArRetFunctor1_Bool_ArgumentBuilder_setName(ArRetFunctor1_Bool_ArgumentBuilder self, String name) {
    self.setName(name);
  }
  public static boolean SwigDirector_ArRetFunctor1_Bool_ArgumentBuilder_invokeR__SWIG_0(ArRetFunctor1_Bool_ArgumentBuilder self) {
    return self.invokeR();
  }
  public static boolean SwigDirector_ArRetFunctor1_Bool_ArgumentBuilder_invokeR__SWIG_1(ArRetFunctor1_Bool_ArgumentBuilder self, long p1) {
    return self.invokeR(new ArArgumentBuilder(p1, false));
  }
  public static void SwigDirector_ArRetFunctor1_Bool_ArgumentBuilderP_invoke(ArRetFunctor1_Bool_ArgumentBuilderP self) {
    self.invoke();
  }
  public static String SwigDirector_ArRetFunctor1_Bool_ArgumentBuilderP_getName(ArRetFunctor1_Bool_ArgumentBuilderP self) {
    return self.getName();
  }
  public static void SwigDirector_ArRetFunctor1_Bool_ArgumentBuilderP_setName(ArRetFunctor1_Bool_ArgumentBuilderP self, String name) {
    self.setName(name);
  }
  public static boolean SwigDirector_ArRetFunctor1_Bool_ArgumentBuilderP_invokeR__SWIG_0(ArRetFunctor1_Bool_ArgumentBuilderP self) {
    return self.invokeR();
  }
  public static boolean SwigDirector_ArRetFunctor1_Bool_ArgumentBuilderP_invokeR__SWIG_1(ArRetFunctor1_Bool_ArgumentBuilderP self, long p1) {
    return self.invokeR((p1 == 0) ? null : new ArArgumentBuilder(p1, false));
  }
  public static void SwigDirector_ArRetFunctor1_VoidP_VoidP_invoke(ArRetFunctor1_VoidP_VoidP self) {
    self.invoke();
  }
  public static String SwigDirector_ArRetFunctor1_VoidP_VoidP_getName(ArRetFunctor1_VoidP_VoidP self) {
    return self.getName();
  }
  public static void SwigDirector_ArRetFunctor1_VoidP_VoidP_setName(ArRetFunctor1_VoidP_VoidP self, String name) {
    self.setName(name);
  }
  public static long SwigDirector_ArRetFunctor1_VoidP_VoidP_invokeR__SWIG_0(ArRetFunctor1_VoidP_VoidP self) {
    return SWIGTYPE_p_void.getCPtr(self.invokeR());
  }
  public static long SwigDirector_ArRetFunctor1_VoidP_VoidP_invokeR__SWIG_1(ArRetFunctor1_VoidP_VoidP self, long p1) {
    return SWIGTYPE_p_void.getCPtr(self.invokeR((p1 == 0) ? null : new SWIGTYPE_p_void(p1, false)));
  }
  public static boolean SwigDirector_ArAction_isActive(ArAction self) {
    return self.isActive();
  }
  public static void SwigDirector_ArAction_activate(ArAction self) {
    self.activate();
  }
  public static void SwigDirector_ArAction_deactivate(ArAction self) {
    self.deactivate();
  }
  public static long SwigDirector_ArAction_fire(ArAction self, long currentDesired) {
    return ArActionDesired.getCPtr(self.fire(new ArActionDesired(currentDesired, false)));
  }
  public static void SwigDirector_ArAction_setRobot(ArAction self, long robot) {
    self.setRobot((robot == 0) ? null : new ArRobot(robot, false));
  }
  public static int SwigDirector_ArAction_getNumArgs(ArAction self) {
    return self.getNumArgs();
  }
  public static long SwigDirector_ArAction_getArg(ArAction self, int number) {
    return ArArg.getCPtr(self.getArg(number));
  }
  public static String SwigDirector_ArAction_getName(ArAction self) {
    return self.getName();
  }
  public static String SwigDirector_ArAction_getDescription(ArAction self) {
    return self.getDescription();
  }
  public static long SwigDirector_ArAction_getDesired__SWIG_0(ArAction self) {
    return ArActionDesired.getCPtr(self.getDesired());
  }
  public static long SwigDirector_ArAction_getDesired__SWIG_1(ArAction self) {
    return ArActionDesired.getCPtr(self.getDesired());
  }
  public static void SwigDirector_ArAction_log__SWIG_0(ArAction self, boolean verbose) {
    self.log(verbose);
  }
  public static void SwigDirector_ArAction_log__SWIG_1(ArAction self) {
    self.log();
  }
  public static int SwigDirector_ArMap_getInfoCount(ArMap self) {
    return self.getInfoCount();
  }
  public static long SwigDirector_ArMap_getInfoNames(ArMap self) {
    return SWIGTYPE_p_std__listT_std__string_t.getCPtr(self.getInfoNames());
  }
  public static long SwigDirector_ArMap_getInfo__SWIG_0(ArMap self, String infoName) {
    return ArArgumentBuilderPtrList.getCPtr(self.getInfo(infoName));
  }
  public static long SwigDirector_ArMap_getInfo__SWIG_1(ArMap self, int infoType) {
    return ArArgumentBuilderPtrList.getCPtr(self.getInfo(infoType));
  }
  public static long SwigDirector_ArMap_getMapInfo(ArMap self) {
    return ArArgumentBuilderPtrList.getCPtr(self.getMapInfo());
  }
  public static boolean SwigDirector_ArMap_setInfo__SWIG_0(ArMap self, String infoName, long infoList, long changeDetails) {
    return self.setInfo(infoName, (infoList == 0) ? null : new ArArgumentBuilderPtrList(infoList, false), (changeDetails == 0) ? null : new SWIGTYPE_p_ArMapChangeDetails(changeDetails, false));
  }
  public static boolean SwigDirector_ArMap_setInfo__SWIG_1(ArMap self, String infoName, long infoList) {
    return self.setInfo(infoName, (infoList == 0) ? null : new ArArgumentBuilderPtrList(infoList, false));
  }
  public static boolean SwigDirector_ArMap_setInfo__SWIG_2(ArMap self, int infoType, long infoList, long changeDetails) {
    return self.setInfo(infoType, (infoList == 0) ? null : new ArArgumentBuilderPtrList(infoList, false), (changeDetails == 0) ? null : new SWIGTYPE_p_ArMapChangeDetails(changeDetails, false));
  }
  public static boolean SwigDirector_ArMap_setInfo__SWIG_3(ArMap self, int infoType, long infoList) {
    return self.setInfo(infoType, (infoList == 0) ? null : new ArArgumentBuilderPtrList(infoList, false));
  }
  public static boolean SwigDirector_ArMap_setMapInfo__SWIG_0(ArMap self, long mapInfo, long changeDetails) {
    return self.setMapInfo((mapInfo == 0) ? null : new ArArgumentBuilderPtrList(mapInfo, false), (changeDetails == 0) ? null : new SWIGTYPE_p_ArMapChangeDetails(changeDetails, false));
  }
  public static boolean SwigDirector_ArMap_setMapInfo__SWIG_1(ArMap self, long mapInfo) {
    return self.setMapInfo((mapInfo == 0) ? null : new ArArgumentBuilderPtrList(mapInfo, false));
  }
  public static void SwigDirector_ArMap_writeInfoToFunctor(ArMap self, long functor, String endOfLineChars) {
    self.writeInfoToFunctor((functor == 0) ? null : new ArFunctor1_CString(functor, false), endOfLineChars);
  }
  public static String SwigDirector_ArMap_getInfoName(ArMap self, int infoType) {
    return self.getInfoName(infoType);
  }
  public static void SwigDirector_ArMap_clear(ArMap self) {
    self.clear();
  }
  public static boolean SwigDirector_ArMap_set(ArMap self, long other) {
    return self.set((other == 0) ? null : new ArMapInterface(other, false));
  }
  public static long SwigDirector_ArMap_cloneMap(ArMap self) {
    return ArMapInterface.getCPtr(self.cloneMap());
  }
  public static long SwigDirector_ArMap_getScanTypes(ArMap self) {
    return SWIGTYPE_p_std__listT_std__string_t.getCPtr(self.getScanTypes());
  }
  public static boolean SwigDirector_ArMap_setScanTypes(ArMap self, long scanTypeList) {
    return self.setScanTypes(new SWIGTYPE_p_std__listT_std__string_t(scanTypeList, false));
  }
  public static int SwigDirector_ArMap_lock(ArMap self) {
    return self.lock();
  }
  public static int SwigDirector_ArMap_tryLock(ArMap self) {
    return self.tryLock();
  }
  public static int SwigDirector_ArMap_unlock(ArMap self) {
    return self.unlock();
  }
  public static void SwigDirector_ArMap_mapChanged(ArMap self) {
    self.mapChanged();
  }
  public static void SwigDirector_ArMap_addMapChangedCBPos(ArMap self, long functor, int position) {
    self.addMapChangedCBPos((functor == 0) ? null : new ArFunctor(functor, false), ArListPos.Pos.swigToEnum(position));
  }
  public static void SwigDirector_ArMap_addMapChangedCB__SWIG_0(ArMap self, long functor, int position) {
    self.addMapChangedCB((functor == 0) ? null : new ArFunctor(functor, false), position);
  }
  public static void SwigDirector_ArMap_addMapChangedCB__SWIG_1(ArMap self, long functor) {
    self.addMapChangedCB((functor == 0) ? null : new ArFunctor(functor, false));
  }
  public static void SwigDirector_ArMap_remMapChangedCB(ArMap self, long functor) {
    self.remMapChangedCB((functor == 0) ? null : new ArFunctor(functor, false));
  }
  public static void SwigDirector_ArMap_addPreMapChangedCBPos(ArMap self, long functor, int position) {
    self.addPreMapChangedCBPos((functor == 0) ? null : new ArFunctor(functor, false), ArListPos.Pos.swigToEnum(position));
  }
  public static void SwigDirector_ArMap_addPreMapChangedCB__SWIG_0(ArMap self, long functor, int position) {
    self.addPreMapChangedCB((functor == 0) ? null : new ArFunctor(functor, false), position);
  }
  public static void SwigDirector_ArMap_addPreMapChangedCB__SWIG_1(ArMap self, long functor) {
    self.addPreMapChangedCB((functor == 0) ? null : new ArFunctor(functor, false));
  }
  public static void SwigDirector_ArMap_remPreMapChangedCB(ArMap self, long functor) {
    self.remPreMapChangedCB((functor == 0) ? null : new ArFunctor(functor, false));
  }
  public static void SwigDirector_ArMap_setMapChangedLogLevel(ArMap self, int level) {
    self.setMapChangedLogLevel(ArLog.LogLevel.swigToEnum(level));
  }
  public static int SwigDirector_ArMap_getMapChangedLogLevel(ArMap self) {
    return (self.getMapChangedLogLevel()).swigValue();
  }
  public static void SwigDirector_ArMap_writeToFunctor(ArMap self, long functor, String endOfLineChars) {
    self.writeToFunctor((functor == 0) ? null : new ArFunctor1_CString(functor, false), endOfLineChars);
  }
  public static void SwigDirector_ArMap_writeObjectsToFunctor__SWIG_0(ArMap self, long functor, String endOfLineChars, boolean isOverrideAsSingleScan, String maxCategory) {
    self.writeObjectsToFunctor((functor == 0) ? null : new ArFunctor1_CString(functor, false), endOfLineChars, isOverrideAsSingleScan, maxCategory);
  }
  public static void SwigDirector_ArMap_writeObjectsToFunctor__SWIG_1(ArMap self, long functor, String endOfLineChars, boolean isOverrideAsSingleScan) {
    self.writeObjectsToFunctor((functor == 0) ? null : new ArFunctor1_CString(functor, false), endOfLineChars, isOverrideAsSingleScan);
  }
  public static void SwigDirector_ArMap_writeObjectsToFunctor__SWIG_2(ArMap self, long functor, String endOfLineChars) {
    self.writeObjectsToFunctor((functor == 0) ? null : new ArFunctor1_CString(functor, false), endOfLineChars);
  }
  public static void SwigDirector_ArMap_addPreWriteFileCB__SWIG_0(ArMap self, long functor, int position) {
    self.addPreWriteFileCB((functor == 0) ? null : new ArFunctor(functor, false), ArListPos.Pos.swigToEnum(position));
  }
  public static void SwigDirector_ArMap_addPreWriteFileCB__SWIG_1(ArMap self, long functor) {
    self.addPreWriteFileCB((functor == 0) ? null : new ArFunctor(functor, false));
  }
  public static void SwigDirector_ArMap_remPreWriteFileCB(ArMap self, long functor) {
    self.remPreWriteFileCB((functor == 0) ? null : new ArFunctor(functor, false));
  }
  public static void SwigDirector_ArMap_addPostWriteFileCB__SWIG_0(ArMap self, long functor, int position) {
    self.addPostWriteFileCB((functor == 0) ? null : new ArFunctor(functor, false), ArListPos.Pos.swigToEnum(position));
  }
  public static void SwigDirector_ArMap_addPostWriteFileCB__SWIG_1(ArMap self, long functor) {
    self.addPostWriteFileCB((functor == 0) ? null : new ArFunctor(functor, false));
  }
  public static void SwigDirector_ArMap_remPostWriteFileCB(ArMap self, long functor) {
    self.remPostWriteFileCB((functor == 0) ? null : new ArFunctor(functor, false));
  }
  public static boolean SwigDirector_ArMap_getMapId__SWIG_0(ArMap self, long mapIdOut, boolean isInternalCall) {
    return self.getMapId((mapIdOut == 0) ? null : new ArMapId(mapIdOut, false), isInternalCall);
  }
  public static boolean SwigDirector_ArMap_getMapId__SWIG_1(ArMap self, long mapIdOut) {
    return self.getMapId((mapIdOut == 0) ? null : new ArMapId(mapIdOut, false));
  }
  public static boolean SwigDirector_ArMap_calculateChecksum(ArMap self, long md5DigestBuffer, long md5DigestBufferLen) {
    return self.calculateChecksum((md5DigestBuffer == 0) ? null : new SWIGTYPE_p_unsigned_char(md5DigestBuffer, false), md5DigestBufferLen);
  }
  public static String SwigDirector_ArMap_getBaseDirectory(ArMap self) {
    return self.getBaseDirectory();
  }
  public static void SwigDirector_ArMap_setBaseDirectory(ArMap self, String baseDirectory) {
    self.setBaseDirectory(baseDirectory);
  }
  public static String SwigDirector_ArMap_getTempDirectory(ArMap self) {
    return self.getTempDirectory();
  }
  public static void SwigDirector_ArMap_setTempDirectory(ArMap self, String tempDirectory) {
    self.setTempDirectory(tempDirectory);
  }
  public static String SwigDirector_ArMap_createRealFileName(ArMap self, String fileName) {
    return self.createRealFileName(fileName);
  }
  public static String SwigDirector_ArMap_getFileName(ArMap self) {
    return self.getFileName();
  }
  public static void SwigDirector_ArMap_setSourceFileName__SWIG_0(ArMap self, String sourceName, String fileName, boolean isInternalCall) {
    self.setSourceFileName(sourceName, fileName, isInternalCall);
  }
  public static void SwigDirector_ArMap_setSourceFileName__SWIG_1(ArMap self, String sourceName, String fileName) {
    self.setSourceFileName(sourceName, fileName);
  }
  public static boolean SwigDirector_ArMap_refresh(ArMap self) {
    return self.refresh();
  }
  public static void SwigDirector_ArMap_setIgnoreEmptyFileName(ArMap self, boolean ignore) {
    self.setIgnoreEmptyFileName(ignore);
  }
  public static boolean SwigDirector_ArMap_getIgnoreEmptyFileName(ArMap self) {
    return self.getIgnoreEmptyFileName();
  }
  public static void SwigDirector_ArMap_setIgnoreCase__SWIG_0(ArMap self, boolean ignoreCase) {
    self.setIgnoreCase(ignoreCase);
  }
  public static void SwigDirector_ArMap_setIgnoreCase__SWIG_1(ArMap self) {
    self.setIgnoreCase();
  }
  public static boolean SwigDirector_ArMap_getIgnoreCase(ArMap self) {
    return self.getIgnoreCase();
  }
  public static long SwigDirector_ArMap_getInactiveInfo(ArMap self) {
    return ArMapInfoInterface.getCPtr(self.getInactiveInfo());
  }
  public static long SwigDirector_ArMap_getInactiveObjects(ArMap self) {
    return ArMapObjectsInterface.getCPtr(self.getInactiveObjects());
  }
  public static long SwigDirector_ArMap_getChildObjects(ArMap self) {
    return ArMapObjectsInterface.getCPtr(self.getChildObjects());
  }
  public static long SwigDirector_ArMap_findMapObjectParams(ArMap self, String mapObjectName) {
    return ArArgumentBuilder.getCPtr(self.findMapObjectParams(mapObjectName));
  }
  public static boolean SwigDirector_ArMap_setMapObjectParams__SWIG_0(ArMap self, String mapObjectName, long params, long changeDetails) {
    return self.setMapObjectParams(mapObjectName, (params == 0) ? null : new ArArgumentBuilder(params, false), (changeDetails == 0) ? null : new SWIGTYPE_p_ArMapChangeDetails(changeDetails, false));
  }
  public static boolean SwigDirector_ArMap_setMapObjectParams__SWIG_1(ArMap self, String mapObjectName, long params) {
    return self.setMapObjectParams(mapObjectName, (params == 0) ? null : new ArArgumentBuilder(params, false));
  }
  public static long SwigDirector_ArMap_getRemainder(ArMap self) {
    return ArArgumentBuilderPtrList.getCPtr(self.getRemainder());
  }
  public static void SwigDirector_ArMap_setQuiet(ArMap self, boolean isQuiet) {
    self.setQuiet(isQuiet);
  }
  public static boolean SwigDirector_ArMap_parseLine(ArMap self, String line) {
    return self.parseLine(line);
  }
  public static void SwigDirector_ArMap_parsingComplete(ArMap self) {
    self.parsingComplete();
  }
  public static boolean SwigDirector_ArMap_isLoadingDataStarted(ArMap self) {
    return self.isLoadingDataStarted();
  }
  public static boolean SwigDirector_ArMap_isLoadingLinesAndDataStarted(ArMap self) {
    return self.isLoadingLinesAndDataStarted();
  }
  public static String SwigDirector_ArMap_getDisplayString__SWIG_0(ArMap self, String scanType) {
    return self.getDisplayString(scanType);
  }
  public static String SwigDirector_ArMap_getDisplayString__SWIG_1(ArMap self) {
    return self.getDisplayString();
  }
  public static long SwigDirector_ArMap_getPoints__SWIG_0(ArMap self, String scanType) {
    return SWIGTYPE_p_std__vectorT_ArPose_t.getCPtr(self.getPoints(scanType));
  }
  public static long SwigDirector_ArMap_getPoints__SWIG_1(ArMap self) {
    return SWIGTYPE_p_std__vectorT_ArPose_t.getCPtr(self.getPoints());
  }
  public static long SwigDirector_ArMap_getMinPose__SWIG_0(ArMap self, String scanType) {
    return ArPose.getCPtr(self.getMinPose(scanType));
  }
  public static long SwigDirector_ArMap_getMinPose__SWIG_1(ArMap self) {
    return ArPose.getCPtr(self.getMinPose());
  }
  public static long SwigDirector_ArMap_getMaxPose__SWIG_0(ArMap self, String scanType) {
    return ArPose.getCPtr(self.getMaxPose(scanType));
  }
  public static long SwigDirector_ArMap_getMaxPose__SWIG_1(ArMap self) {
    return ArPose.getCPtr(self.getMaxPose());
  }
  public static int SwigDirector_ArMap_getNumPoints__SWIG_0(ArMap self, String scanType) {
    return self.getNumPoints(scanType);
  }
  public static int SwigDirector_ArMap_getNumPoints__SWIG_1(ArMap self) {
    return self.getNumPoints();
  }
  public static boolean SwigDirector_ArMap_isSortedPoints__SWIG_0(ArMap self, String scanType) {
    return self.isSortedPoints(scanType);
  }
  public static boolean SwigDirector_ArMap_isSortedPoints__SWIG_1(ArMap self) {
    return self.isSortedPoints();
  }
  public static void SwigDirector_ArMap_setPoints__SWIG_0(ArMap self, long points, String scanType, boolean isSortedPoints, long changeDetails) {
    self.setPoints((points == 0) ? null : new SWIGTYPE_p_std__vectorT_ArPose_t(points, false), scanType, isSortedPoints, (changeDetails == 0) ? null : new SWIGTYPE_p_ArMapChangeDetails(changeDetails, false));
  }
  public static void SwigDirector_ArMap_setPoints__SWIG_1(ArMap self, long points, String scanType, boolean isSortedPoints) {
    self.setPoints((points == 0) ? null : new SWIGTYPE_p_std__vectorT_ArPose_t(points, false), scanType, isSortedPoints);
  }
  public static void SwigDirector_ArMap_setPoints__SWIG_2(ArMap self, long points, String scanType) {
    self.setPoints((points == 0) ? null : new SWIGTYPE_p_std__vectorT_ArPose_t(points, false), scanType);
  }
  public static void SwigDirector_ArMap_setPoints__SWIG_3(ArMap self, long points) {
    self.setPoints((points == 0) ? null : new SWIGTYPE_p_std__vectorT_ArPose_t(points, false));
  }
  public static long SwigDirector_ArMap_getLines__SWIG_0(ArMap self, String scanType) {
    return SWIGTYPE_p_std__vectorT_ArLineSegment_t.getCPtr(self.getLines(scanType));
  }
  public static long SwigDirector_ArMap_getLines__SWIG_1(ArMap self) {
    return SWIGTYPE_p_std__vectorT_ArLineSegment_t.getCPtr(self.getLines());
  }
  public static long SwigDirector_ArMap_getLineMinPose__SWIG_0(ArMap self, String scanType) {
    return ArPose.getCPtr(self.getLineMinPose(scanType));
  }
  public static long SwigDirector_ArMap_getLineMinPose__SWIG_1(ArMap self) {
    return ArPose.getCPtr(self.getLineMinPose());
  }
  public static long SwigDirector_ArMap_getLineMaxPose__SWIG_0(ArMap self, String scanType) {
    return ArPose.getCPtr(self.getLineMaxPose(scanType));
  }
  public static long SwigDirector_ArMap_getLineMaxPose__SWIG_1(ArMap self) {
    return ArPose.getCPtr(self.getLineMaxPose());
  }
  public static int SwigDirector_ArMap_getNumLines__SWIG_0(ArMap self, String scanType) {
    return self.getNumLines(scanType);
  }
  public static int SwigDirector_ArMap_getNumLines__SWIG_1(ArMap self) {
    return self.getNumLines();
  }
  public static boolean SwigDirector_ArMap_isSortedLines__SWIG_0(ArMap self, String scanType) {
    return self.isSortedLines(scanType);
  }
  public static boolean SwigDirector_ArMap_isSortedLines__SWIG_1(ArMap self) {
    return self.isSortedLines();
  }
  public static void SwigDirector_ArMap_setLines__SWIG_0(ArMap self, long lines, String scanType, boolean isSortedLines, long changeDetails) {
    self.setLines((lines == 0) ? null : new SWIGTYPE_p_std__vectorT_ArLineSegment_t(lines, false), scanType, isSortedLines, (changeDetails == 0) ? null : new SWIGTYPE_p_ArMapChangeDetails(changeDetails, false));
  }
  public static void SwigDirector_ArMap_setLines__SWIG_1(ArMap self, long lines, String scanType, boolean isSortedLines) {
    self.setLines((lines == 0) ? null : new SWIGTYPE_p_std__vectorT_ArLineSegment_t(lines, false), scanType, isSortedLines);
  }
  public static void SwigDirector_ArMap_setLines__SWIG_2(ArMap self, long lines, String scanType) {
    self.setLines((lines == 0) ? null : new SWIGTYPE_p_std__vectorT_ArLineSegment_t(lines, false), scanType);
  }
  public static void SwigDirector_ArMap_setLines__SWIG_3(ArMap self, long lines) {
    self.setLines((lines == 0) ? null : new SWIGTYPE_p_std__vectorT_ArLineSegment_t(lines, false));
  }
  public static int SwigDirector_ArMap_getResolution__SWIG_0(ArMap self, String scanType) {
    return self.getResolution(scanType);
  }
  public static int SwigDirector_ArMap_getResolution__SWIG_1(ArMap self) {
    return self.getResolution();
  }
  public static void SwigDirector_ArMap_setResolution__SWIG_0(ArMap self, int resolution, String scanType, long changeDetails) {
    self.setResolution(resolution, scanType, (changeDetails == 0) ? null : new SWIGTYPE_p_ArMapChangeDetails(changeDetails, false));
  }
  public static void SwigDirector_ArMap_setResolution__SWIG_1(ArMap self, int resolution, String scanType) {
    self.setResolution(resolution, scanType);
  }
  public static void SwigDirector_ArMap_setResolution__SWIG_2(ArMap self, int resolution) {
    self.setResolution(resolution);
  }
  public static void SwigDirector_ArMap_writeScanToFunctor__SWIG_0(ArMap self, long functor, String endOfLineChars, String scanType) {
    self.writeScanToFunctor((functor == 0) ? null : new ArFunctor1_CString(functor, false), endOfLineChars, scanType);
  }
  public static void SwigDirector_ArMap_writeScanToFunctor__SWIG_1(ArMap self, long functor, String endOfLineChars) {
    self.writeScanToFunctor((functor == 0) ? null : new ArFunctor1_CString(functor, false), endOfLineChars);
  }
  public static void SwigDirector_ArMap_writePointsToFunctor__SWIG_0(ArMap self, long functor, String scanType, long keywordFunctor) {
    self.writePointsToFunctor((functor == 0) ? null : new SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArPose_t_p_t(functor, false), scanType, (keywordFunctor == 0) ? null : new ArFunctor1_CString(keywordFunctor, false));
  }
  public static void SwigDirector_ArMap_writePointsToFunctor__SWIG_1(ArMap self, long functor, String scanType) {
    self.writePointsToFunctor((functor == 0) ? null : new SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArPose_t_p_t(functor, false), scanType);
  }
  public static void SwigDirector_ArMap_writePointsToFunctor__SWIG_2(ArMap self, long functor) {
    self.writePointsToFunctor((functor == 0) ? null : new SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArPose_t_p_t(functor, false));
  }
  public static void SwigDirector_ArMap_writeLinesToFunctor__SWIG_0(ArMap self, long functor, String scanType, long keywordFunctor) {
    self.writeLinesToFunctor((functor == 0) ? null : new SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArLineSegment_t_p_t(functor, false), scanType, (keywordFunctor == 0) ? null : new ArFunctor1_CString(keywordFunctor, false));
  }
  public static void SwigDirector_ArMap_writeLinesToFunctor__SWIG_1(ArMap self, long functor, String scanType) {
    self.writeLinesToFunctor((functor == 0) ? null : new SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArLineSegment_t_p_t(functor, false), scanType);
  }
  public static void SwigDirector_ArMap_writeLinesToFunctor__SWIG_2(ArMap self, long functor) {
    self.writeLinesToFunctor((functor == 0) ? null : new SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArLineSegment_t_p_t(functor, false));
  }
  public static boolean SwigDirector_ArMap_addToFileParser(ArMap self, long fileParser) {
    return self.addToFileParser((fileParser == 0) ? null : new ArFileParser(fileParser, false));
  }
  public static boolean SwigDirector_ArMap_remFromFileParser(ArMap self, long fileParser) {
    return self.remFromFileParser((fileParser == 0) ? null : new ArFileParser(fileParser, false));
  }
  public static boolean SwigDirector_ArMap_readDataPoint(ArMap self, String line) {
    return self.readDataPoint(line);
  }
  public static boolean SwigDirector_ArMap_readLineSegment(ArMap self, String line) {
    return self.readLineSegment(line);
  }
  public static void SwigDirector_ArMap_loadDataPoint(ArMap self, double x, double y) {
    self.loadDataPoint(x, y);
  }
  public static void SwigDirector_ArMap_loadLineSegment(ArMap self, double x1, double y1, double x2, double y2) {
    self.loadLineSegment(x1, y1, x2, y2);
  }
  public static long SwigDirector_ArMap_findFirstMapObject__SWIG_0(ArMap self, String name, String type, boolean isIncludeWithHeading) {
    return ArMapObject.getCPtr(self.findFirstMapObject(name, type, isIncludeWithHeading));
  }
  public static long SwigDirector_ArMap_findFirstMapObject__SWIG_1(ArMap self, String name, String type) {
    return ArMapObject.getCPtr(self.findFirstMapObject(name, type));
  }
  public static long SwigDirector_ArMap_findMapObject__SWIG_0(ArMap self, String name, String type, boolean isIncludeWithHeading) {
    return ArMapObject.getCPtr(self.findMapObject(name, type, isIncludeWithHeading));
  }
  public static long SwigDirector_ArMap_findMapObject__SWIG_1(ArMap self, String name, String type) {
    return ArMapObject.getCPtr(self.findMapObject(name, type));
  }
  public static long SwigDirector_ArMap_findMapObject__SWIG_2(ArMap self, String name) {
    return ArMapObject.getCPtr(self.findMapObject(name));
  }
  public static long SwigDirector_ArMap_findMapObjectsOfType__SWIG_0(ArMap self, String type, boolean isIncludeWithHeading) {
    return ArMapObjectPtrList.getCPtr(self.findMapObjectsOfType(type, isIncludeWithHeading));
  }
  public static long SwigDirector_ArMap_findMapObjectsOfType__SWIG_1(ArMap self, String type) {
    return ArMapObjectPtrList.getCPtr(self.findMapObjectsOfType(type));
  }
  public static long SwigDirector_ArMap_getMapObjects(ArMap self) {
    return ArMapObjectPtrList.getCPtr(self.getMapObjects());
  }
  public static void SwigDirector_ArMap_setMapObjects__SWIG_0(ArMap self, long mapObjects, boolean isSortedObjects, long changeDetails) {
    self.setMapObjects((mapObjects == 0) ? null : new ArMapObjectPtrList(mapObjects, false), isSortedObjects, (changeDetails == 0) ? null : new SWIGTYPE_p_ArMapChangeDetails(changeDetails, false));
  }
  public static void SwigDirector_ArMap_setMapObjects__SWIG_1(ArMap self, long mapObjects, boolean isSortedObjects) {
    self.setMapObjects((mapObjects == 0) ? null : new ArMapObjectPtrList(mapObjects, false), isSortedObjects);
  }
  public static void SwigDirector_ArMap_setMapObjects__SWIG_2(ArMap self, long mapObjects) {
    self.setMapObjects((mapObjects == 0) ? null : new ArMapObjectPtrList(mapObjects, false));
  }
  public static void SwigDirector_ArMap_writeObjectListToFunctor(ArMap self, long functor, String endOfLineChars) {
    self.writeObjectListToFunctor((functor == 0) ? null : new ArFunctor1_CString(functor, false), endOfLineChars);
  }
  public static boolean SwigDirector_ArMap_hasOriginLatLongAlt(ArMap self) {
    return self.hasOriginLatLongAlt();
  }
  public static long SwigDirector_ArMap_getOriginLatLong(ArMap self) {
    return ArPose.getCPtr(self.getOriginLatLong());
  }
  public static double SwigDirector_ArMap_getOriginAltitude(ArMap self) {
    return self.getOriginAltitude();
  }
  public static void SwigDirector_ArMap_setOriginLatLongAlt__SWIG_0(ArMap self, boolean hasOriginLatLong, long originLatLong, double altitude, long changeDetails) {
    self.setOriginLatLongAlt(hasOriginLatLong, new ArPose(originLatLong, false), altitude, (changeDetails == 0) ? null : new SWIGTYPE_p_ArMapChangeDetails(changeDetails, false));
  }
  public static void SwigDirector_ArMap_setOriginLatLongAlt__SWIG_1(ArMap self, boolean hasOriginLatLong, long originLatLong, double altitude) {
    self.setOriginLatLongAlt(hasOriginLatLong, new ArPose(originLatLong, false), altitude);
  }
  public static void SwigDirector_ArMap_writeSupplementToFunctor(ArMap self, long functor, String endOfLineChars) {
    self.writeSupplementToFunctor((functor == 0) ? null : new ArFunctor1_CString(functor, false), endOfLineChars);
  }
  public static boolean SwigDirector_ArMap_writeFile(ArMap self, String fileName) {
    return self.writeFile(fileName);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
