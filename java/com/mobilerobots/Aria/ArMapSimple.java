/*
Adept MobileRobots Robotics Interface for Applications (ARIA)
Copyright (C) 2004-2005 ActivMedia Robotics LLC
Copyright (C) 2006-2010 MobileRobots Inc.
Copyright (C) 2011-2014 Adept Technology

     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

If you wish to redistribute ARIA under different terms, contact 
Adept MobileRobots for information about a commercial version of ARIA at 
robots@mobilerobots.com or 
Adept MobileRobots, 10 Columbia Drive, Amherst, NH 03031; +1-603-881-7960
*/
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mobilerobots.Aria;

public class ArMapSimple extends ArMapInterface {
  /* (begin code from javabody_derived typemap) */

  private long swigCPtr;

  /* for internal use by swig only */
  public ArMapSimple(long cPtr, boolean cMemoryOwn) {
    super(AriaJavaJNI.SWIGArMapSimpleUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  /* for internal use by swig only */
  public static long getCPtr(ArMapSimple obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /* (end code from javabody_derived typemap) */

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        AriaJavaJNI.delete_ArMapSimple(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public ArMapSimple(String baseDirectory, String tempDirectory, String overrideMutexName) {
    this(AriaJavaJNI.new_ArMapSimple__SWIG_0(baseDirectory, tempDirectory, overrideMutexName), true);
  }

  public ArMapSimple(String baseDirectory, String tempDirectory) {
    this(AriaJavaJNI.new_ArMapSimple__SWIG_1(baseDirectory, tempDirectory), true);
  }

  public ArMapSimple(String baseDirectory) {
    this(AriaJavaJNI.new_ArMapSimple__SWIG_2(baseDirectory), true);
  }

  public ArMapSimple() {
    this(AriaJavaJNI.new_ArMapSimple__SWIG_3(), true);
  }

  public ArMapSimple(ArMapSimple other) {
    this(AriaJavaJNI.new_ArMapSimple__SWIG_4(ArMapSimple.getCPtr(other), other), true);
  }

  public void clear() {
    AriaJavaJNI.ArMapSimple_clear(swigCPtr, this);
  }

  public boolean set(ArMapInterface other) {
    return AriaJavaJNI.ArMapSimple_set(swigCPtr, this, ArMapInterface.getCPtr(other), other);
  }

  public ArMapInterface cloneMap() {
    long cPtr = AriaJavaJNI.ArMapSimple_cloneMap(swigCPtr, this);
    return (cPtr == 0) ? null : new ArMapInterface(cPtr, false);
  }

  public SWIGTYPE_p_std__listT_std__string_t getScanTypes() {
    return new SWIGTYPE_p_std__listT_std__string_t(AriaJavaJNI.ArMapSimple_getScanTypes(swigCPtr, this), true);
  }

  public boolean setScanTypes(SWIGTYPE_p_std__listT_std__string_t scanTypeList) {
    return AriaJavaJNI.ArMapSimple_setScanTypes(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(scanTypeList));
  }

  public int lock() {
    return AriaJavaJNI.ArMapSimple_lock(swigCPtr, this);
  }

  public int tryLock() {
    return AriaJavaJNI.ArMapSimple_tryLock(swigCPtr, this);
  }

  public int unlock() {
    return AriaJavaJNI.ArMapSimple_unlock(swigCPtr, this);
  }

  public ArArgumentBuilderPtrList getInfo(String infoName) {
    long cPtr = AriaJavaJNI.ArMapSimple_getInfo__SWIG_0(swigCPtr, this, infoName);
    return (cPtr == 0) ? null : new ArArgumentBuilderPtrList(cPtr, false);
  }

  public ArArgumentBuilderPtrList getInfo(int infoType) {
    long cPtr = AriaJavaJNI.ArMapSimple_getInfo__SWIG_1(swigCPtr, this, infoType);
    return (cPtr == 0) ? null : new ArArgumentBuilderPtrList(cPtr, false);
  }

  public ArArgumentBuilderPtrList getMapInfo() {
    long cPtr = AriaJavaJNI.ArMapSimple_getMapInfo(swigCPtr, this);
    return (cPtr == 0) ? null : new ArArgumentBuilderPtrList(cPtr, false);
  }

  public int getInfoCount() {
    return AriaJavaJNI.ArMapSimple_getInfoCount(swigCPtr, this);
  }

  public SWIGTYPE_p_std__listT_std__string_t getInfoNames() {
    return new SWIGTYPE_p_std__listT_std__string_t(AriaJavaJNI.ArMapSimple_getInfoNames(swigCPtr, this), true);
  }

  public boolean setInfo(String infoName, ArArgumentBuilderPtrList infoList, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    return AriaJavaJNI.ArMapSimple_setInfo__SWIG_0(swigCPtr, this, infoName, ArArgumentBuilderPtrList.getCPtr(infoList), infoList, SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
  }

  public boolean setInfo(String infoName, ArArgumentBuilderPtrList infoList) {
    return AriaJavaJNI.ArMapSimple_setInfo__SWIG_1(swigCPtr, this, infoName, ArArgumentBuilderPtrList.getCPtr(infoList), infoList);
  }

  public boolean setInfo(int infoType, ArArgumentBuilderPtrList infoList, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    return AriaJavaJNI.ArMapSimple_setInfo__SWIG_2(swigCPtr, this, infoType, ArArgumentBuilderPtrList.getCPtr(infoList), infoList, SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
  }

  public boolean setInfo(int infoType, ArArgumentBuilderPtrList infoList) {
    return AriaJavaJNI.ArMapSimple_setInfo__SWIG_3(swigCPtr, this, infoType, ArArgumentBuilderPtrList.getCPtr(infoList), infoList);
  }

  public boolean setMapInfo(ArArgumentBuilderPtrList mapInfo, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    return AriaJavaJNI.ArMapSimple_setMapInfo__SWIG_0(swigCPtr, this, ArArgumentBuilderPtrList.getCPtr(mapInfo), mapInfo, SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
  }

  public boolean setMapInfo(ArArgumentBuilderPtrList mapInfo) {
    return AriaJavaJNI.ArMapSimple_setMapInfo__SWIG_1(swigCPtr, this, ArArgumentBuilderPtrList.getCPtr(mapInfo), mapInfo);
  }

  public void writeInfoToFunctor(ArFunctor1_CString functor, String endOfLineChars) {
    AriaJavaJNI.ArMapSimple_writeInfoToFunctor(swigCPtr, this, ArFunctor1_CString.getCPtr(functor), functor, endOfLineChars);
  }

  public String getInfoName(int infoType) {
    return AriaJavaJNI.ArMapSimple_getInfoName(swigCPtr, this, infoType);
  }

  public ArMapObject findFirstMapObject(String name, String type, boolean isIncludeWithHeading) {
    long cPtr = AriaJavaJNI.ArMapSimple_findFirstMapObject__SWIG_0(swigCPtr, this, name, type, isIncludeWithHeading);
    return (cPtr == 0) ? null : new ArMapObject(cPtr, false);
  }

  public ArMapObject findFirstMapObject(String name, String type) {
    long cPtr = AriaJavaJNI.ArMapSimple_findFirstMapObject__SWIG_1(swigCPtr, this, name, type);
    return (cPtr == 0) ? null : new ArMapObject(cPtr, false);
  }

  public ArMapObject findMapObject(String name, String type, boolean isIncludeWithHeading) {
    long cPtr = AriaJavaJNI.ArMapSimple_findMapObject__SWIG_0(swigCPtr, this, name, type, isIncludeWithHeading);
    return (cPtr == 0) ? null : new ArMapObject(cPtr, false);
  }

  public ArMapObject findMapObject(String name, String type) {
    long cPtr = AriaJavaJNI.ArMapSimple_findMapObject__SWIG_1(swigCPtr, this, name, type);
    return (cPtr == 0) ? null : new ArMapObject(cPtr, false);
  }

  public ArMapObject findMapObject(String name) {
    long cPtr = AriaJavaJNI.ArMapSimple_findMapObject__SWIG_2(swigCPtr, this, name);
    return (cPtr == 0) ? null : new ArMapObject(cPtr, false);
  }

  public ArMapObjectPtrList findMapObjectsOfType(String type, boolean isIncludeWithHeading) {
    return new ArMapObjectPtrList(AriaJavaJNI.ArMapSimple_findMapObjectsOfType__SWIG_0(swigCPtr, this, type, isIncludeWithHeading), true);
  }

  public ArMapObjectPtrList findMapObjectsOfType(String type) {
    return new ArMapObjectPtrList(AriaJavaJNI.ArMapSimple_findMapObjectsOfType__SWIG_1(swigCPtr, this, type), true);
  }

  public ArMapObjectPtrList getMapObjects() {
    long cPtr = AriaJavaJNI.ArMapSimple_getMapObjects(swigCPtr, this);
    return (cPtr == 0) ? null : new ArMapObjectPtrList(cPtr, false);
  }

  public void setMapObjects(ArMapObjectPtrList mapObjects, boolean isSortedObjects, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    AriaJavaJNI.ArMapSimple_setMapObjects__SWIG_0(swigCPtr, this, ArMapObjectPtrList.getCPtr(mapObjects), mapObjects, isSortedObjects, SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
  }

  public void setMapObjects(ArMapObjectPtrList mapObjects, boolean isSortedObjects) {
    AriaJavaJNI.ArMapSimple_setMapObjects__SWIG_1(swigCPtr, this, ArMapObjectPtrList.getCPtr(mapObjects), mapObjects, isSortedObjects);
  }

  public void setMapObjects(ArMapObjectPtrList mapObjects) {
    AriaJavaJNI.ArMapSimple_setMapObjects__SWIG_2(swigCPtr, this, ArMapObjectPtrList.getCPtr(mapObjects), mapObjects);
  }

  public void writeObjectListToFunctor(ArFunctor1_CString functor, String endOfLineChars) {
    AriaJavaJNI.ArMapSimple_writeObjectListToFunctor(swigCPtr, this, ArFunctor1_CString.getCPtr(functor), functor, endOfLineChars);
  }

  public boolean hasOriginLatLongAlt() {
    return AriaJavaJNI.ArMapSimple_hasOriginLatLongAlt(swigCPtr, this);
  }

  public ArPose getOriginLatLong() {
    return new ArPose(AriaJavaJNI.ArMapSimple_getOriginLatLong(swigCPtr, this), true);
  }

  public double getOriginAltitude() {
    return AriaJavaJNI.ArMapSimple_getOriginAltitude(swigCPtr, this);
  }

  public void setOriginLatLongAlt(boolean hasOriginLatLong, ArPose originLatLong, double altitude, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    AriaJavaJNI.ArMapSimple_setOriginLatLongAlt__SWIG_0(swigCPtr, this, hasOriginLatLong, ArPose.getCPtr(originLatLong), originLatLong, altitude, SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
  }

  public void setOriginLatLongAlt(boolean hasOriginLatLong, ArPose originLatLong, double altitude) {
    AriaJavaJNI.ArMapSimple_setOriginLatLongAlt__SWIG_1(swigCPtr, this, hasOriginLatLong, ArPose.getCPtr(originLatLong), originLatLong, altitude);
  }

  public void writeSupplementToFunctor(ArFunctor1_CString functor, String endOfLineChars) {
    AriaJavaJNI.ArMapSimple_writeSupplementToFunctor(swigCPtr, this, ArFunctor1_CString.getCPtr(functor), functor, endOfLineChars);
  }

  public String getDisplayString(String scanType) {
    return AriaJavaJNI.ArMapSimple_getDisplayString__SWIG_0(swigCPtr, this, scanType);
  }

  public String getDisplayString() {
    return AriaJavaJNI.ArMapSimple_getDisplayString__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__vectorT_ArPose_t getPoints(String scanType) {
    long cPtr = AriaJavaJNI.ArMapSimple_getPoints__SWIG_0(swigCPtr, this, scanType);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_ArPose_t(cPtr, false);
  }

  public SWIGTYPE_p_std__vectorT_ArPose_t getPoints() {
    long cPtr = AriaJavaJNI.ArMapSimple_getPoints__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_ArPose_t(cPtr, false);
  }

  public ArPose getMinPose(String scanType) {
    return new ArPose(AriaJavaJNI.ArMapSimple_getMinPose__SWIG_0(swigCPtr, this, scanType), true);
  }

  public ArPose getMinPose() {
    return new ArPose(AriaJavaJNI.ArMapSimple_getMinPose__SWIG_1(swigCPtr, this), true);
  }

  public ArPose getMaxPose(String scanType) {
    return new ArPose(AriaJavaJNI.ArMapSimple_getMaxPose__SWIG_0(swigCPtr, this, scanType), true);
  }

  public ArPose getMaxPose() {
    return new ArPose(AriaJavaJNI.ArMapSimple_getMaxPose__SWIG_1(swigCPtr, this), true);
  }

  public int getNumPoints(String scanType) {
    return AriaJavaJNI.ArMapSimple_getNumPoints__SWIG_0(swigCPtr, this, scanType);
  }

  public int getNumPoints() {
    return AriaJavaJNI.ArMapSimple_getNumPoints__SWIG_1(swigCPtr, this);
  }

  public boolean isSortedPoints(String scanType) {
    return AriaJavaJNI.ArMapSimple_isSortedPoints__SWIG_0(swigCPtr, this, scanType);
  }

  public boolean isSortedPoints() {
    return AriaJavaJNI.ArMapSimple_isSortedPoints__SWIG_1(swigCPtr, this);
  }

  public void setPoints(SWIGTYPE_p_std__vectorT_ArPose_t points, String scanType, boolean isSortedPoints, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    AriaJavaJNI.ArMapSimple_setPoints__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__vectorT_ArPose_t.getCPtr(points), scanType, isSortedPoints, SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
  }

  public void setPoints(SWIGTYPE_p_std__vectorT_ArPose_t points, String scanType, boolean isSortedPoints) {
    AriaJavaJNI.ArMapSimple_setPoints__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__vectorT_ArPose_t.getCPtr(points), scanType, isSortedPoints);
  }

  public void setPoints(SWIGTYPE_p_std__vectorT_ArPose_t points, String scanType) {
    AriaJavaJNI.ArMapSimple_setPoints__SWIG_2(swigCPtr, this, SWIGTYPE_p_std__vectorT_ArPose_t.getCPtr(points), scanType);
  }

  public void setPoints(SWIGTYPE_p_std__vectorT_ArPose_t points) {
    AriaJavaJNI.ArMapSimple_setPoints__SWIG_3(swigCPtr, this, SWIGTYPE_p_std__vectorT_ArPose_t.getCPtr(points));
  }

  public SWIGTYPE_p_std__vectorT_ArLineSegment_t getLines(String scanType) {
    long cPtr = AriaJavaJNI.ArMapSimple_getLines__SWIG_0(swigCPtr, this, scanType);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_ArLineSegment_t(cPtr, false);
  }

  public SWIGTYPE_p_std__vectorT_ArLineSegment_t getLines() {
    long cPtr = AriaJavaJNI.ArMapSimple_getLines__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_ArLineSegment_t(cPtr, false);
  }

  public ArPose getLineMinPose(String scanType) {
    return new ArPose(AriaJavaJNI.ArMapSimple_getLineMinPose__SWIG_0(swigCPtr, this, scanType), true);
  }

  public ArPose getLineMinPose() {
    return new ArPose(AriaJavaJNI.ArMapSimple_getLineMinPose__SWIG_1(swigCPtr, this), true);
  }

  public ArPose getLineMaxPose(String scanType) {
    return new ArPose(AriaJavaJNI.ArMapSimple_getLineMaxPose__SWIG_0(swigCPtr, this, scanType), true);
  }

  public ArPose getLineMaxPose() {
    return new ArPose(AriaJavaJNI.ArMapSimple_getLineMaxPose__SWIG_1(swigCPtr, this), true);
  }

  public int getNumLines(String scanType) {
    return AriaJavaJNI.ArMapSimple_getNumLines__SWIG_0(swigCPtr, this, scanType);
  }

  public int getNumLines() {
    return AriaJavaJNI.ArMapSimple_getNumLines__SWIG_1(swigCPtr, this);
  }

  public boolean isSortedLines(String scanType) {
    return AriaJavaJNI.ArMapSimple_isSortedLines__SWIG_0(swigCPtr, this, scanType);
  }

  public boolean isSortedLines() {
    return AriaJavaJNI.ArMapSimple_isSortedLines__SWIG_1(swigCPtr, this);
  }

  public void setLines(SWIGTYPE_p_std__vectorT_ArLineSegment_t lines, String scanType, boolean isSortedLines, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    AriaJavaJNI.ArMapSimple_setLines__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__vectorT_ArLineSegment_t.getCPtr(lines), scanType, isSortedLines, SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
  }

  public void setLines(SWIGTYPE_p_std__vectorT_ArLineSegment_t lines, String scanType, boolean isSortedLines) {
    AriaJavaJNI.ArMapSimple_setLines__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__vectorT_ArLineSegment_t.getCPtr(lines), scanType, isSortedLines);
  }

  public void setLines(SWIGTYPE_p_std__vectorT_ArLineSegment_t lines, String scanType) {
    AriaJavaJNI.ArMapSimple_setLines__SWIG_2(swigCPtr, this, SWIGTYPE_p_std__vectorT_ArLineSegment_t.getCPtr(lines), scanType);
  }

  public void setLines(SWIGTYPE_p_std__vectorT_ArLineSegment_t lines) {
    AriaJavaJNI.ArMapSimple_setLines__SWIG_3(swigCPtr, this, SWIGTYPE_p_std__vectorT_ArLineSegment_t.getCPtr(lines));
  }

  public int getResolution(String scanType) {
    return AriaJavaJNI.ArMapSimple_getResolution__SWIG_0(swigCPtr, this, scanType);
  }

  public int getResolution() {
    return AriaJavaJNI.ArMapSimple_getResolution__SWIG_1(swigCPtr, this);
  }

  public void setResolution(int resolution, String scanType, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    AriaJavaJNI.ArMapSimple_setResolution__SWIG_0(swigCPtr, this, resolution, scanType, SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
  }

  public void setResolution(int resolution, String scanType) {
    AriaJavaJNI.ArMapSimple_setResolution__SWIG_1(swigCPtr, this, resolution, scanType);
  }

  public void setResolution(int resolution) {
    AriaJavaJNI.ArMapSimple_setResolution__SWIG_2(swigCPtr, this, resolution);
  }

  public void writeScanToFunctor(ArFunctor1_CString functor, String endOfLineChars, String scanType) {
    AriaJavaJNI.ArMapSimple_writeScanToFunctor__SWIG_0(swigCPtr, this, ArFunctor1_CString.getCPtr(functor), functor, endOfLineChars, scanType);
  }

  public void writeScanToFunctor(ArFunctor1_CString functor, String endOfLineChars) {
    AriaJavaJNI.ArMapSimple_writeScanToFunctor__SWIG_1(swigCPtr, this, ArFunctor1_CString.getCPtr(functor), functor, endOfLineChars);
  }

  public void writePointsToFunctor(SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArPose_t_p_t functor, String scanType, ArFunctor1_CString keywordFunctor) {
    AriaJavaJNI.ArMapSimple_writePointsToFunctor__SWIG_0(swigCPtr, this, SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArPose_t_p_t.getCPtr(functor), scanType, ArFunctor1_CString.getCPtr(keywordFunctor), keywordFunctor);
  }

  public void writePointsToFunctor(SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArPose_t_p_t functor, String scanType) {
    AriaJavaJNI.ArMapSimple_writePointsToFunctor__SWIG_1(swigCPtr, this, SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArPose_t_p_t.getCPtr(functor), scanType);
  }

  public void writePointsToFunctor(SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArPose_t_p_t functor) {
    AriaJavaJNI.ArMapSimple_writePointsToFunctor__SWIG_2(swigCPtr, this, SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArPose_t_p_t.getCPtr(functor));
  }

  public void writeLinesToFunctor(SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArLineSegment_t_p_t functor, String scanType, ArFunctor1_CString keywordFunctor) {
    AriaJavaJNI.ArMapSimple_writeLinesToFunctor__SWIG_0(swigCPtr, this, SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArLineSegment_t_p_t.getCPtr(functor), scanType, ArFunctor1_CString.getCPtr(keywordFunctor), keywordFunctor);
  }

  public void writeLinesToFunctor(SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArLineSegment_t_p_t functor, String scanType) {
    AriaJavaJNI.ArMapSimple_writeLinesToFunctor__SWIG_1(swigCPtr, this, SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArLineSegment_t_p_t.getCPtr(functor), scanType);
  }

  public void writeLinesToFunctor(SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArLineSegment_t_p_t functor) {
    AriaJavaJNI.ArMapSimple_writeLinesToFunctor__SWIG_2(swigCPtr, this, SWIGTYPE_p_ArFunctor2T_int_std__vectorT_ArLineSegment_t_p_t.getCPtr(functor));
  }

  public boolean addToFileParser(ArFileParser fileParser) {
    return AriaJavaJNI.ArMapSimple_addToFileParser(swigCPtr, this, ArFileParser.getCPtr(fileParser), fileParser);
  }

  public boolean remFromFileParser(ArFileParser fileParser) {
    return AriaJavaJNI.ArMapSimple_remFromFileParser(swigCPtr, this, ArFileParser.getCPtr(fileParser), fileParser);
  }

  public boolean readDataPoint(String line) {
    return AriaJavaJNI.ArMapSimple_readDataPoint(swigCPtr, this, line);
  }

  public boolean readLineSegment(String line) {
    return AriaJavaJNI.ArMapSimple_readLineSegment(swigCPtr, this, line);
  }

  public void loadDataPoint(double x, double y) {
    AriaJavaJNI.ArMapSimple_loadDataPoint(swigCPtr, this, x, y);
  }

  public void loadLineSegment(double x1, double y1, double x2, double y2) {
    AriaJavaJNI.ArMapSimple_loadLineSegment(swigCPtr, this, x1, y1, x2, y2);
  }

  public void mapChanged() {
    AriaJavaJNI.ArMapSimple_mapChanged(swigCPtr, this);
  }

  public void addMapChangedCB(ArFunctor functor, int position) {
    AriaJavaJNI.ArMapSimple_addMapChangedCB__SWIG_0(swigCPtr, this, ArFunctor.getCPtr(functor), functor, position);
  }

  public void addMapChangedCB(ArFunctor functor) {
    AriaJavaJNI.ArMapSimple_addMapChangedCB__SWIG_1(swigCPtr, this, ArFunctor.getCPtr(functor), functor);
  }

  public void remMapChangedCB(ArFunctor functor) {
    AriaJavaJNI.ArMapSimple_remMapChangedCB(swigCPtr, this, ArFunctor.getCPtr(functor), functor);
  }

  public void addPreMapChangedCB(ArFunctor functor, int position) {
    AriaJavaJNI.ArMapSimple_addPreMapChangedCB__SWIG_0(swigCPtr, this, ArFunctor.getCPtr(functor), functor, position);
  }

  public void addPreMapChangedCB(ArFunctor functor) {
    AriaJavaJNI.ArMapSimple_addPreMapChangedCB__SWIG_1(swigCPtr, this, ArFunctor.getCPtr(functor), functor);
  }

  public void remPreMapChangedCB(ArFunctor functor) {
    AriaJavaJNI.ArMapSimple_remPreMapChangedCB(swigCPtr, this, ArFunctor.getCPtr(functor), functor);
  }

  public void setMapChangedLogLevel(ArLog.LogLevel level) {
    AriaJavaJNI.ArMapSimple_setMapChangedLogLevel(swigCPtr, this, level.swigValue());
  }

  public ArLog.LogLevel getMapChangedLogLevel() {
    return ArLog.LogLevel.swigToEnum(AriaJavaJNI.ArMapSimple_getMapChangedLogLevel(swigCPtr, this));
  }

  public void writeToFunctor(ArFunctor1_CString functor, String endOfLineChars) {
    AriaJavaJNI.ArMapSimple_writeToFunctor(swigCPtr, this, ArFunctor1_CString.getCPtr(functor), functor, endOfLineChars);
  }

  public void writeObjectsToFunctor(ArFunctor1_CString functor, String endOfLineChars, boolean isOverrideAsSingleScan, String maxCategory) {
    AriaJavaJNI.ArMapSimple_writeObjectsToFunctor__SWIG_0(swigCPtr, this, ArFunctor1_CString.getCPtr(functor), functor, endOfLineChars, isOverrideAsSingleScan, maxCategory);
  }

  public void writeObjectsToFunctor(ArFunctor1_CString functor, String endOfLineChars, boolean isOverrideAsSingleScan) {
    AriaJavaJNI.ArMapSimple_writeObjectsToFunctor__SWIG_1(swigCPtr, this, ArFunctor1_CString.getCPtr(functor), functor, endOfLineChars, isOverrideAsSingleScan);
  }

  public void writeObjectsToFunctor(ArFunctor1_CString functor, String endOfLineChars) {
    AriaJavaJNI.ArMapSimple_writeObjectsToFunctor__SWIG_2(swigCPtr, this, ArFunctor1_CString.getCPtr(functor), functor, endOfLineChars);
  }

  public void addPreWriteFileCB(ArFunctor functor, ArListPos.Pos position) {
    AriaJavaJNI.ArMapSimple_addPreWriteFileCB__SWIG_0(swigCPtr, this, ArFunctor.getCPtr(functor), functor, position.swigValue());
  }

  public void addPreWriteFileCB(ArFunctor functor) {
    AriaJavaJNI.ArMapSimple_addPreWriteFileCB__SWIG_1(swigCPtr, this, ArFunctor.getCPtr(functor), functor);
  }

  public void remPreWriteFileCB(ArFunctor functor) {
    AriaJavaJNI.ArMapSimple_remPreWriteFileCB(swigCPtr, this, ArFunctor.getCPtr(functor), functor);
  }

  public void addPostWriteFileCB(ArFunctor functor, ArListPos.Pos position) {
    AriaJavaJNI.ArMapSimple_addPostWriteFileCB__SWIG_0(swigCPtr, this, ArFunctor.getCPtr(functor), functor, position.swigValue());
  }

  public void addPostWriteFileCB(ArFunctor functor) {
    AriaJavaJNI.ArMapSimple_addPostWriteFileCB__SWIG_1(swigCPtr, this, ArFunctor.getCPtr(functor), functor);
  }

  public void remPostWriteFileCB(ArFunctor functor) {
    AriaJavaJNI.ArMapSimple_remPostWriteFileCB(swigCPtr, this, ArFunctor.getCPtr(functor), functor);
  }

  public boolean readFile(String fileName, String errorBuffer, long errorBufferLen, SWIGTYPE_p_unsigned_char md5DigestBuffer, long md5DigestBufferLen) {
    return AriaJavaJNI.ArMapSimple_readFile__SWIG_0(swigCPtr, this, fileName, errorBuffer, errorBufferLen, SWIGTYPE_p_unsigned_char.getCPtr(md5DigestBuffer), md5DigestBufferLen);
  }

  public boolean readFile(String fileName, String errorBuffer, long errorBufferLen, SWIGTYPE_p_unsigned_char md5DigestBuffer) {
    return AriaJavaJNI.ArMapSimple_readFile__SWIG_1(swigCPtr, this, fileName, errorBuffer, errorBufferLen, SWIGTYPE_p_unsigned_char.getCPtr(md5DigestBuffer));
  }

  public boolean readFile(String fileName, String errorBuffer, long errorBufferLen) {
    return AriaJavaJNI.ArMapSimple_readFile__SWIG_2(swigCPtr, this, fileName, errorBuffer, errorBufferLen);
  }

  public boolean readFile(String fileName, String errorBuffer) {
    return AriaJavaJNI.ArMapSimple_readFile__SWIG_3(swigCPtr, this, fileName, errorBuffer);
  }

  public boolean readFile(String fileName) {
    return AriaJavaJNI.ArMapSimple_readFile__SWIG_4(swigCPtr, this, fileName);
  }

  public boolean writeFile(String fileName, boolean internalCall, SWIGTYPE_p_unsigned_char md5DigestBuffer, long md5DigestBufferLen, SWIGTYPE_p_time_t fileTimestamp) {
    return AriaJavaJNI.ArMapSimple_writeFile__SWIG_0(swigCPtr, this, fileName, internalCall, SWIGTYPE_p_unsigned_char.getCPtr(md5DigestBuffer), md5DigestBufferLen, SWIGTYPE_p_time_t.getCPtr(fileTimestamp));
  }

  public boolean writeFile(String fileName, boolean internalCall, SWIGTYPE_p_unsigned_char md5DigestBuffer, long md5DigestBufferLen) {
    return AriaJavaJNI.ArMapSimple_writeFile__SWIG_1(swigCPtr, this, fileName, internalCall, SWIGTYPE_p_unsigned_char.getCPtr(md5DigestBuffer), md5DigestBufferLen);
  }

  public boolean writeFile(String fileName, boolean internalCall, SWIGTYPE_p_unsigned_char md5DigestBuffer) {
    return AriaJavaJNI.ArMapSimple_writeFile__SWIG_2(swigCPtr, this, fileName, internalCall, SWIGTYPE_p_unsigned_char.getCPtr(md5DigestBuffer));
  }

  public boolean writeFile(String fileName, boolean internalCall) {
    return AriaJavaJNI.ArMapSimple_writeFile__SWIG_3(swigCPtr, this, fileName, internalCall);
  }

  public boolean writeFile(String fileName) {
    return AriaJavaJNI.ArMapSimple_writeFile__SWIG_4(swigCPtr, this, fileName);
  }

  public boolean getMapId(ArMapId mapIdOut, boolean isInternalCall) {
    return AriaJavaJNI.ArMapSimple_getMapId__SWIG_0(swigCPtr, this, ArMapId.getCPtr(mapIdOut), mapIdOut, isInternalCall);
  }

  public boolean getMapId(ArMapId mapIdOut) {
    return AriaJavaJNI.ArMapSimple_getMapId__SWIG_1(swigCPtr, this, ArMapId.getCPtr(mapIdOut), mapIdOut);
  }

  public boolean calculateChecksum(SWIGTYPE_p_unsigned_char md5DigestBuffer, long md5DigestBufferLen) {
    return AriaJavaJNI.ArMapSimple_calculateChecksum(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(md5DigestBuffer), md5DigestBufferLen);
  }

  public String getBaseDirectory() {
    return AriaJavaJNI.ArMapSimple_getBaseDirectory(swigCPtr, this);
  }

  public void setBaseDirectory(String baseDirectory) {
    AriaJavaJNI.ArMapSimple_setBaseDirectory(swigCPtr, this, baseDirectory);
  }

  public String getTempDirectory() {
    return AriaJavaJNI.ArMapSimple_getTempDirectory(swigCPtr, this);
  }

  public void setTempDirectory(String tempDirectory) {
    AriaJavaJNI.ArMapSimple_setTempDirectory(swigCPtr, this, tempDirectory);
  }

  public String createRealFileName(String fileName) {
    return AriaJavaJNI.ArMapSimple_createRealFileName(swigCPtr, this, fileName);
  }

  public String getFileName() {
    return AriaJavaJNI.ArMapSimple_getFileName(swigCPtr, this);
  }

  public void setSourceFileName(String sourceName, String fileName, boolean isInternalCall) {
    AriaJavaJNI.ArMapSimple_setSourceFileName__SWIG_0(swigCPtr, this, sourceName, fileName, isInternalCall);
  }

  public void setSourceFileName(String sourceName, String fileName) {
    AriaJavaJNI.ArMapSimple_setSourceFileName__SWIG_1(swigCPtr, this, sourceName, fileName);
  }

  public boolean refresh() {
    return AriaJavaJNI.ArMapSimple_refresh(swigCPtr, this);
  }

  public void setIgnoreEmptyFileName(boolean ignore) {
    AriaJavaJNI.ArMapSimple_setIgnoreEmptyFileName(swigCPtr, this, ignore);
  }

  public boolean getIgnoreEmptyFileName() {
    return AriaJavaJNI.ArMapSimple_getIgnoreEmptyFileName(swigCPtr, this);
  }

  public void setIgnoreCase(boolean ignoreCase) {
    AriaJavaJNI.ArMapSimple_setIgnoreCase__SWIG_0(swigCPtr, this, ignoreCase);
  }

  public void setIgnoreCase() {
    AriaJavaJNI.ArMapSimple_setIgnoreCase__SWIG_1(swigCPtr, this);
  }

  public boolean getIgnoreCase() {
    return AriaJavaJNI.ArMapSimple_getIgnoreCase(swigCPtr, this);
  }

  public ArMapInfoInterface getInactiveInfo() {
    long cPtr = AriaJavaJNI.ArMapSimple_getInactiveInfo(swigCPtr, this);
    return (cPtr == 0) ? null : new ArMapInfoInterface(cPtr, false);
  }

  public ArMapObjectsInterface getInactiveObjects() {
    long cPtr = AriaJavaJNI.ArMapSimple_getInactiveObjects(swigCPtr, this);
    return (cPtr == 0) ? null : new ArMapObjectsInterface(cPtr, false);
  }

  public ArMapObjectsInterface getChildObjects() {
    long cPtr = AriaJavaJNI.ArMapSimple_getChildObjects(swigCPtr, this);
    return (cPtr == 0) ? null : new ArMapObjectsInterface(cPtr, false);
  }

  public ArArgumentBuilder findMapObjectParams(String mapObjectName) {
    long cPtr = AriaJavaJNI.ArMapSimple_findMapObjectParams(swigCPtr, this, mapObjectName);
    return (cPtr == 0) ? null : new ArArgumentBuilder(cPtr, false);
  }

  public boolean setMapObjectParams(String mapObjectName, ArArgumentBuilder params, SWIGTYPE_p_ArMapChangeDetails changeDetails) {
    return AriaJavaJNI.ArMapSimple_setMapObjectParams__SWIG_0(swigCPtr, this, mapObjectName, ArArgumentBuilder.getCPtr(params), params, SWIGTYPE_p_ArMapChangeDetails.getCPtr(changeDetails));
  }

  public boolean setMapObjectParams(String mapObjectName, ArArgumentBuilder params) {
    return AriaJavaJNI.ArMapSimple_setMapObjectParams__SWIG_1(swigCPtr, this, mapObjectName, ArArgumentBuilder.getCPtr(params), params);
  }

  public ArArgumentBuilderPtrList getRemainder() {
    long cPtr = AriaJavaJNI.ArMapSimple_getRemainder(swigCPtr, this);
    return (cPtr == 0) ? null : new ArArgumentBuilderPtrList(cPtr, false);
  }

  public void setQuiet(boolean isQuiet) {
    AriaJavaJNI.ArMapSimple_setQuiet(swigCPtr, this, isQuiet);
  }

  public boolean parseLine(String line) {
    return AriaJavaJNI.ArMapSimple_parseLine(swigCPtr, this, line);
  }

  public void parsingComplete() {
    AriaJavaJNI.ArMapSimple_parsingComplete(swigCPtr, this);
  }

  public boolean isLoadingDataStarted() {
    return AriaJavaJNI.ArMapSimple_isLoadingDataStarted(swigCPtr, this);
  }

  public boolean isLoadingLinesAndDataStarted() {
    return AriaJavaJNI.ArMapSimple_isLoadingLinesAndDataStarted(swigCPtr, this);
  }

  public static SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t__iterator findMapObjectParamInfo(String mapObjectName, ArArgumentBuilderPtrList cairnInfoList) {
    return new SWIGTYPE_p_std__listT_ArArgumentBuilder_p_t__iterator(AriaJavaJNI.ArMapSimple_findMapObjectParamInfo(mapObjectName, ArArgumentBuilderPtrList.getCPtr(cairnInfoList), cairnInfoList), true);
  }

}
