/*
Adept MobileRobots Robotics Interface for Applications (ARIA)
Copyright (C) 2004-2005 ActivMedia Robotics LLC
Copyright (C) 2006-2010 MobileRobots Inc.
Copyright (C) 2011-2014 Adept Technology

     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

If you wish to redistribute ARIA under different terms, contact 
Adept MobileRobots for information about a commercial version of ARIA at 
robots@mobilerobots.com or 
Adept MobileRobots, 10 Columbia Drive, Amherst, NH 03031; +1-603-881-7960
*/
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mobilerobots.Aria;

public class ArRatioInputJoydrive {
  /* (begin code from javabody typemap) */

  private long swigCPtr;
  protected boolean swigCMemOwn;

  /* for internal use by swig only */
  public ArRatioInputJoydrive(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /* for internal use by swig only */
  public static long getCPtr(ArRatioInputJoydrive obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /* (end code from javabody typemap) */

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        AriaJavaJNI.delete_ArRatioInputJoydrive(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ArRatioInputJoydrive(ArRobot robot, ArActionRatioInput input, int priority, boolean stopIfNoButtonPressed, boolean useOSCalForJoystick) {
    this(AriaJavaJNI.new_ArRatioInputJoydrive__SWIG_0(ArRobot.getCPtr(robot), robot, ArActionRatioInput.getCPtr(input), input, priority, stopIfNoButtonPressed, useOSCalForJoystick), true);
  }

  public ArRatioInputJoydrive(ArRobot robot, ArActionRatioInput input, int priority, boolean stopIfNoButtonPressed) {
    this(AriaJavaJNI.new_ArRatioInputJoydrive__SWIG_1(ArRobot.getCPtr(robot), robot, ArActionRatioInput.getCPtr(input), input, priority, stopIfNoButtonPressed), true);
  }

  public ArRatioInputJoydrive(ArRobot robot, ArActionRatioInput input, int priority) {
    this(AriaJavaJNI.new_ArRatioInputJoydrive__SWIG_2(ArRobot.getCPtr(robot), robot, ArActionRatioInput.getCPtr(input), input, priority), true);
  }

  public ArRatioInputJoydrive(ArRobot robot, ArActionRatioInput input) {
    this(AriaJavaJNI.new_ArRatioInputJoydrive__SWIG_3(ArRobot.getCPtr(robot), robot, ArActionRatioInput.getCPtr(input), input), true);
  }

  public boolean joystickInited() {
    return AriaJavaJNI.ArRatioInputJoydrive_joystickInited(swigCPtr, this);
  }

  public void setStopIfNoButtonPressed(boolean stopIfNoButtonPressed) {
    AriaJavaJNI.ArRatioInputJoydrive_setStopIfNoButtonPressed(swigCPtr, this, stopIfNoButtonPressed);
  }

  public boolean getStopIfNoButtonPressed() {
    return AriaJavaJNI.ArRatioInputJoydrive_getStopIfNoButtonPressed(swigCPtr, this);
  }

  public void setUseOSCal(boolean useOSCal) {
    AriaJavaJNI.ArRatioInputJoydrive_setUseOSCal(swigCPtr, this, useOSCal);
  }

  public boolean getUseOSCal() {
    return AriaJavaJNI.ArRatioInputJoydrive_getUseOSCal(swigCPtr, this);
  }

  public ArJoyHandler getJoyHandler() {
    long cPtr = AriaJavaJNI.ArRatioInputJoydrive_getJoyHandler(swigCPtr, this);
    return (cPtr == 0) ? null : new ArJoyHandler(cPtr, false);
  }

}
