/*
Adept MobileRobots Robotics Interface for Applications (ARIA)
Copyright (C) 2004-2005 ActivMedia Robotics LLC
Copyright (C) 2006-2010 MobileRobots Inc.
Copyright (C) 2011-2014 Adept Technology

     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

If you wish to redistribute ARIA under different terms, contact 
Adept MobileRobots for information about a commercial version of ARIA at 
robots@mobilerobots.com or 
Adept MobileRobots, 10 Columbia Drive, Amherst, NH 03031; +1-603-881-7960
*/
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mobilerobots.Aria;

public class ArArgumentBuilder {
  /* (begin code from javabody typemap) */

  private long swigCPtr;
  protected boolean swigCMemOwn;

  /* for internal use by swig only */
  public ArArgumentBuilder(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /* for internal use by swig only */
  public static long getCPtr(ArArgumentBuilder obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /* (end code from javabody typemap) */

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        AriaJavaJNI.delete_ArArgumentBuilder(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ArArgumentBuilder(long argvLen, char extraSpaceChar, boolean ignoreNormalSpaces, boolean isPreCompressQuotes) {
    this(AriaJavaJNI.new_ArArgumentBuilder__SWIG_0(argvLen, extraSpaceChar, ignoreNormalSpaces, isPreCompressQuotes), true);
  }

  public ArArgumentBuilder(long argvLen, char extraSpaceChar, boolean ignoreNormalSpaces) {
    this(AriaJavaJNI.new_ArArgumentBuilder__SWIG_1(argvLen, extraSpaceChar, ignoreNormalSpaces), true);
  }

  public ArArgumentBuilder(long argvLen, char extraSpaceChar) {
    this(AriaJavaJNI.new_ArArgumentBuilder__SWIG_2(argvLen, extraSpaceChar), true);
  }

  public ArArgumentBuilder(long argvLen) {
    this(AriaJavaJNI.new_ArArgumentBuilder__SWIG_3(argvLen), true);
  }

  public ArArgumentBuilder() {
    this(AriaJavaJNI.new_ArArgumentBuilder__SWIG_4(), true);
  }

  public ArArgumentBuilder(ArArgumentBuilder builder) {
    this(AriaJavaJNI.new_ArArgumentBuilder__SWIG_5(ArArgumentBuilder.getCPtr(builder), builder), true);
  }

  public void addPlain(String str, int position) {
    AriaJavaJNI.ArArgumentBuilder_addPlain__SWIG_0(swigCPtr, this, str, position);
  }

  public void addPlain(String str) {
    AriaJavaJNI.ArArgumentBuilder_addPlain__SWIG_1(swigCPtr, this, str);
  }

  public void addPlainAsIs(String str, int position) {
    AriaJavaJNI.ArArgumentBuilder_addPlainAsIs__SWIG_0(swigCPtr, this, str, position);
  }

  public void addPlainAsIs(String str) {
    AriaJavaJNI.ArArgumentBuilder_addPlainAsIs__SWIG_1(swigCPtr, this, str);
  }

  public void addStrings(SWIGTYPE_p_p_char argv, int argc, int position) {
    AriaJavaJNI.ArArgumentBuilder_addStrings__SWIG_0(swigCPtr, this, SWIGTYPE_p_p_char.getCPtr(argv), argc, position);
  }

  public void addStrings(SWIGTYPE_p_p_char argv, int argc) {
    AriaJavaJNI.ArArgumentBuilder_addStrings__SWIG_1(swigCPtr, this, SWIGTYPE_p_p_char.getCPtr(argv), argc);
  }

  public void addStrings(int argc, SWIGTYPE_p_p_char argv, int position) {
    AriaJavaJNI.ArArgumentBuilder_addStrings__SWIG_2(swigCPtr, this, argc, SWIGTYPE_p_p_char.getCPtr(argv), position);
  }

  public void addStrings(int argc, SWIGTYPE_p_p_char argv) {
    AriaJavaJNI.ArArgumentBuilder_addStrings__SWIG_3(swigCPtr, this, argc, SWIGTYPE_p_p_char.getCPtr(argv));
  }

  public void addStringsAsIs(int argc, SWIGTYPE_p_p_char argv, int position) {
    AriaJavaJNI.ArArgumentBuilder_addStringsAsIs__SWIG_0(swigCPtr, this, argc, SWIGTYPE_p_p_char.getCPtr(argv), position);
  }

  public void addStringsAsIs(int argc, SWIGTYPE_p_p_char argv) {
    AriaJavaJNI.ArArgumentBuilder_addStringsAsIs__SWIG_1(swigCPtr, this, argc, SWIGTYPE_p_p_char.getCPtr(argv));
  }

  public String getFullString() {
    return AriaJavaJNI.ArArgumentBuilder_getFullString(swigCPtr, this);
  }

  public void setFullString(String str) {
    AriaJavaJNI.ArArgumentBuilder_setFullString(swigCPtr, this, str);
  }

  public String getExtraString() {
    return AriaJavaJNI.ArArgumentBuilder_getExtraString(swigCPtr, this);
  }

  public void setExtraString(String str) {
    AriaJavaJNI.ArArgumentBuilder_setExtraString(swigCPtr, this, str);
  }

  public void log() {
    AriaJavaJNI.ArArgumentBuilder_log(swigCPtr, this);
  }

  public long getArgc() {
    return AriaJavaJNI.ArArgumentBuilder_getArgc(swigCPtr, this);
  }

  public SWIGTYPE_p_p_char getArgv() {
    long cPtr = AriaJavaJNI.ArArgumentBuilder_getArgv(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public String getArg(long whichArg) {
    return AriaJavaJNI.ArArgumentBuilder_getArg(swigCPtr, this, whichArg);
  }

  public boolean isArgBool(long whichArg) {
    return AriaJavaJNI.ArArgumentBuilder_isArgBool(swigCPtr, this, whichArg);
  }

  public boolean getArgBool(long whichArg, SWIGTYPE_p_bool ok) {
    return AriaJavaJNI.ArArgumentBuilder_getArgBool__SWIG_0(swigCPtr, this, whichArg, SWIGTYPE_p_bool.getCPtr(ok));
  }

  public boolean getArgBool(long whichArg) {
    return AriaJavaJNI.ArArgumentBuilder_getArgBool__SWIG_1(swigCPtr, this, whichArg);
  }

  public boolean isArgInt(long whichArg, boolean forceHex) {
    return AriaJavaJNI.ArArgumentBuilder_isArgInt__SWIG_0(swigCPtr, this, whichArg, forceHex);
  }

  public boolean isArgInt(long whichArg) {
    return AriaJavaJNI.ArArgumentBuilder_isArgInt__SWIG_1(swigCPtr, this, whichArg);
  }

  public int getArgInt(long whichArg, SWIGTYPE_p_bool ok, boolean forceHex) {
    return AriaJavaJNI.ArArgumentBuilder_getArgInt__SWIG_0(swigCPtr, this, whichArg, SWIGTYPE_p_bool.getCPtr(ok), forceHex);
  }

  public int getArgInt(long whichArg, SWIGTYPE_p_bool ok) {
    return AriaJavaJNI.ArArgumentBuilder_getArgInt__SWIG_1(swigCPtr, this, whichArg, SWIGTYPE_p_bool.getCPtr(ok));
  }

  public int getArgInt(long whichArg) {
    return AriaJavaJNI.ArArgumentBuilder_getArgInt__SWIG_2(swigCPtr, this, whichArg);
  }

  public boolean isArgLongLongInt(long whichArg) {
    return AriaJavaJNI.ArArgumentBuilder_isArgLongLongInt(swigCPtr, this, whichArg);
  }

  public int getArgLongLongInt(long whichArg, SWIGTYPE_p_bool ok) {
    return AriaJavaJNI.ArArgumentBuilder_getArgLongLongInt__SWIG_0(swigCPtr, this, whichArg, SWIGTYPE_p_bool.getCPtr(ok));
  }

  public int getArgLongLongInt(long whichArg) {
    return AriaJavaJNI.ArArgumentBuilder_getArgLongLongInt__SWIG_1(swigCPtr, this, whichArg);
  }

  public boolean isArgDouble(long whichArg) {
    return AriaJavaJNI.ArArgumentBuilder_isArgDouble(swigCPtr, this, whichArg);
  }

  public double getArgDouble(long whichArg, SWIGTYPE_p_bool ok) {
    return AriaJavaJNI.ArArgumentBuilder_getArgDouble__SWIG_0(swigCPtr, this, whichArg, SWIGTYPE_p_bool.getCPtr(ok));
  }

  public double getArgDouble(long whichArg) {
    return AriaJavaJNI.ArArgumentBuilder_getArgDouble__SWIG_1(swigCPtr, this, whichArg);
  }

  public void removeArg(long which, boolean isRebuildFullString) {
    AriaJavaJNI.ArArgumentBuilder_removeArg__SWIG_0(swigCPtr, this, which, isRebuildFullString);
  }

  public void removeArg(long which) {
    AriaJavaJNI.ArArgumentBuilder_removeArg__SWIG_1(swigCPtr, this, which);
  }

  public void compressQuoted(boolean stripQuotationMarks) {
    AriaJavaJNI.ArArgumentBuilder_compressQuoted__SWIG_0(swigCPtr, this, stripQuotationMarks);
  }

  public void compressQuoted() {
    AriaJavaJNI.ArArgumentBuilder_compressQuoted__SWIG_1(swigCPtr, this);
  }

  public void setQuiet(boolean isQuiet) {
    AriaJavaJNI.ArArgumentBuilder_setQuiet(swigCPtr, this, isQuiet);
  }

}
